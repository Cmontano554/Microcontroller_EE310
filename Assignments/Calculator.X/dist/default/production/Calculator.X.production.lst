

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 07 15:30:14 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21                           	dabs	1,0x5,2,_op_reg
    22                           	dabs	1,0x3,2,_y_reg
    23                           	dabs	1,0x1,2,_x_reg
    24                           	dabs	1,0x7,1,_display_reg
    25   000000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F47K42 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   003FE0                     bsr             equ	16352
    61   003FE9                     fsr0            equ	16361
    62   003FEA                     fsr0h           equ	16362
    63   003FE9                     fsr0l           equ	16361
    64   003FE1                     fsr1            equ	16353
    65   003FE2                     fsr1h           equ	16354
    66   003FE1                     fsr1l           equ	16353
    67   003FD9                     fsr2            equ	16345
    68   003FDA                     fsr2h           equ	16346
    69   003FD9                     fsr2l           equ	16345
    70   003FEF                     indf0           equ	16367
    71   003FE7                     indf1           equ	16359
    72   003FDF                     indf2           equ	16351
    73   003FD2                     intcon          equ	16338
    74   0039E5                     nvmcon          equ	14821
    75   003FF9                     pcl             equ	16377
    76   003FFA                     pclath          equ	16378
    77   003FFB                     pclatu          equ	16379
    78   003FEB                     plusw0          equ	16363
    79   003FE3                     plusw1          equ	16355
    80   003FDB                     plusw2          equ	16347
    81   003FED                     postdec0        equ	16365
    82   003FE5                     postdec1        equ	16357
    83   003FDD                     postdec2        equ	16349
    84   003FEE                     postinc0        equ	16366
    85   003FE6                     postinc1        equ	16358
    86   003FDE                     postinc2        equ	16350
    87   003FEC                     preinc0         equ	16364
    88   003FE4                     preinc1         equ	16356
    89   003FDC                     preinc2         equ	16348
    90   003FF3                     prod            equ	16371
    91   003FF4                     prodh           equ	16372
    92   003FF3                     prodl           equ	16371
    93   003FD8                     status          equ	16344
    94   003FF5                     tablat          equ	16373
    95   003FF6                     tblptr          equ	16374
    96   003FF7                     tblptrh         equ	16375
    97   003FF6                     tblptrl         equ	16374
    98   003FF8                     tblptru         equ	16376
    99   003FFD                     tosl            equ	16381
   100   003FE8                     wreg            equ	16360
   101   003880                     STATUS_CSHAD    equ	14464	;# 
   102   003881                     WREG_CSHAD      equ	14465	;# 
   103   003882                     BSR_CSHAD       equ	14466	;# 
   104   003883                     SHADCON         equ	14467	;# 
   105   003884                     STATUS_SHAD     equ	14468	;# 
   106   003885                     WREG_SHAD       equ	14469	;# 
   107   003886                     BSR_SHAD        equ	14470	;# 
   108   003887                     PCLATH_SHAD     equ	14471	;# 
   109   003888                     PCLATU_SHAD     equ	14472	;# 
   110   003889                     FSR0SH          equ	14473	;# 
   111   003889                     FSR0L_SHAD      equ	14473	;# 
   112   00388A                     FSR0H_SHAD      equ	14474	;# 
   113   00388B                     FSR1SH          equ	14475	;# 
   114   00388B                     FSR1L_SHAD      equ	14475	;# 
   115   00388C                     FSR1H_SHAD      equ	14476	;# 
   116   00388D                     FSR2SH          equ	14477	;# 
   117   00388D                     FSR2L_SHAD      equ	14477	;# 
   118   00388E                     FSR2H_SHAD      equ	14478	;# 
   119   00388F                     PRODSH          equ	14479	;# 
   120   00388F                     PRODL_SHAD      equ	14479	;# 
   121   003890                     PRODH_SHAD      equ	14480	;# 
   122   00389D                     IVTADL          equ	14493	;# 
   123   00389E                     IVTADH          equ	14494	;# 
   124   00389F                     IVTADU          equ	14495	;# 
   125   00395B                     WDTCON0         equ	14683	;# 
   126   00395C                     WDTCON1         equ	14684	;# 
   127   00395D                     WDTPSL          equ	14685	;# 
   128   00395E                     WDTPSH          equ	14686	;# 
   129   00395F                     WDTTMR          equ	14687	;# 
   130   003960                     CRCDATA         equ	14688	;# 
   131   003960                     CRCDATL         equ	14688	;# 
   132   003961                     CRCDATH         equ	14689	;# 
   133   003962                     CRCACC          equ	14690	;# 
   134   003962                     CRCACCL         equ	14690	;# 
   135   003963                     CRCACCH         equ	14691	;# 
   136   003964                     CRCSHFT         equ	14692	;# 
   137   003964                     CRCSHIFTL       equ	14692	;# 
   138   003965                     CRCSHIFTH       equ	14693	;# 
   139   003966                     CRCXOR          equ	14694	;# 
   140   003966                     CRCXORL         equ	14694	;# 
   141   003967                     CRCXORH         equ	14695	;# 
   142   003968                     CRCCON0         equ	14696	;# 
   143   003969                     CRCCON1         equ	14697	;# 
   144   003976                     SCANLADR        equ	14710	;# 
   145   003976                     SCANLADRL       equ	14710	;# 
   146   003977                     SCANLADRH       equ	14711	;# 
   147   003978                     SCANLADRU       equ	14712	;# 
   148   003979                     SCANHADR        equ	14713	;# 
   149   003979                     SCANHADRL       equ	14713	;# 
   150   00397A                     SCANHADRH       equ	14714	;# 
   151   00397B                     SCANHADRU       equ	14715	;# 
   152   00397C                     SCANCON0        equ	14716	;# 
   153   00397D                     SCANTRIG        equ	14717	;# 
   154   003980                     IPR0            equ	14720	;# 
   155   003981                     IPR1            equ	14721	;# 
   156   003982                     IPR2            equ	14722	;# 
   157   003983                     IPR3            equ	14723	;# 
   158   003984                     IPR4            equ	14724	;# 
   159   003985                     IPR5            equ	14725	;# 
   160   003986                     IPR6            equ	14726	;# 
   161   003987                     IPR7            equ	14727	;# 
   162   003988                     IPR8            equ	14728	;# 
   163   003989                     IPR9            equ	14729	;# 
   164   00398A                     IPR10           equ	14730	;# 
   165   003990                     PIE0            equ	14736	;# 
   166   003991                     PIE1            equ	14737	;# 
   167   003992                     PIE2            equ	14738	;# 
   168   003993                     PIE3            equ	14739	;# 
   169   003994                     PIE4            equ	14740	;# 
   170   003995                     PIE5            equ	14741	;# 
   171   003996                     PIE6            equ	14742	;# 
   172   003997                     PIE7            equ	14743	;# 
   173   003998                     PIE8            equ	14744	;# 
   174   003999                     PIE9            equ	14745	;# 
   175   00399A                     PIE10           equ	14746	;# 
   176   0039A0                     PIR0            equ	14752	;# 
   177   0039A1                     PIR1            equ	14753	;# 
   178   0039A2                     PIR2            equ	14754	;# 
   179   0039A3                     PIR3            equ	14755	;# 
   180   0039A4                     PIR4            equ	14756	;# 
   181   0039A5                     PIR5            equ	14757	;# 
   182   0039A6                     PIR6            equ	14758	;# 
   183   0039A7                     PIR7            equ	14759	;# 
   184   0039A8                     PIR8            equ	14760	;# 
   185   0039A9                     PIR9            equ	14761	;# 
   186   0039AA                     PIR10           equ	14762	;# 
   187   0039C0                     PMD0            equ	14784	;# 
   188   0039C1                     PMD1            equ	14785	;# 
   189   0039C2                     PMD2            equ	14786	;# 
   190   0039C3                     PMD3            equ	14787	;# 
   191   0039C4                     PMD4            equ	14788	;# 
   192   0039C5                     PMD5            equ	14789	;# 
   193   0039C6                     PMD6            equ	14790	;# 
   194   0039C7                     PMD7            equ	14791	;# 
   195   0039D0                     BORCON          equ	14800	;# 
   196   0039D1                     VREGCON         equ	14801	;# 
   197   0039D8                     CPUDOZE         equ	14808	;# 
   198   0039D9                     OSCCON1         equ	14809	;# 
   199   0039DA                     OSCCON2         equ	14810	;# 
   200   0039DB                     OSCCON3         equ	14811	;# 
   201   0039DC                     OSCSTAT         equ	14812	;# 
   202   0039DC                     OSCSTAT1        equ	14812	;# 
   203   0039DD                     OSCEN           equ	14813	;# 
   204   0039DE                     OSCTUNE         equ	14814	;# 
   205   0039DF                     OSCFRQ          equ	14815	;# 
   206   0039E0                     NVMADRL         equ	14816	;# 
   207   0039E1                     NVMADRH         equ	14817	;# 
   208   0039E3                     NVMDAT          equ	14819	;# 
   209   0039E5                     NVMCON1         equ	14821	;# 
   210   0039E6                     NVMCON2         equ	14822	;# 
   211   0039EF                     PRLOCK          equ	14831	;# 
   212   0039F1                     ISRPR           equ	14833	;# 
   213   0039F2                     MAINPR          equ	14834	;# 
   214   0039F3                     DMA1PR          equ	14835	;# 
   215   0039F4                     DMA2PR          equ	14836	;# 
   216   0039F7                     SCANPR          equ	14839	;# 
   217   003A00                     RA0PPS          equ	14848	;# 
   218   003A01                     RA1PPS          equ	14849	;# 
   219   003A02                     RA2PPS          equ	14850	;# 
   220   003A03                     RA3PPS          equ	14851	;# 
   221   003A04                     RA4PPS          equ	14852	;# 
   222   003A05                     RA5PPS          equ	14853	;# 
   223   003A06                     RA6PPS          equ	14854	;# 
   224   003A07                     RA7PPS          equ	14855	;# 
   225   003A08                     RB0PPS          equ	14856	;# 
   226   003A09                     RB1PPS          equ	14857	;# 
   227   003A0A                     RB2PPS          equ	14858	;# 
   228   003A0B                     RB3PPS          equ	14859	;# 
   229   003A0C                     RB4PPS          equ	14860	;# 
   230   003A0D                     RB5PPS          equ	14861	;# 
   231   003A0E                     RB6PPS          equ	14862	;# 
   232   003A0F                     RB7PPS          equ	14863	;# 
   233   003A10                     RC0PPS          equ	14864	;# 
   234   003A11                     RC1PPS          equ	14865	;# 
   235   003A12                     RC2PPS          equ	14866	;# 
   236   003A13                     RC3PPS          equ	14867	;# 
   237   003A14                     RC4PPS          equ	14868	;# 
   238   003A15                     RC5PPS          equ	14869	;# 
   239   003A16                     RC6PPS          equ	14870	;# 
   240   003A17                     RC7PPS          equ	14871	;# 
   241   003A18                     RD0PPS          equ	14872	;# 
   242   003A19                     RD1PPS          equ	14873	;# 
   243   003A1A                     RD2PPS          equ	14874	;# 
   244   003A1B                     RD3PPS          equ	14875	;# 
   245   003A1C                     RD4PPS          equ	14876	;# 
   246   003A1D                     RD5PPS          equ	14877	;# 
   247   003A1E                     RD6PPS          equ	14878	;# 
   248   003A1F                     RD7PPS          equ	14879	;# 
   249   003A20                     RE0PPS          equ	14880	;# 
   250   003A21                     RE1PPS          equ	14881	;# 
   251   003A22                     RE2PPS          equ	14882	;# 
   252   003A40                     ANSELA          equ	14912	;# 
   253   003A41                     WPUA            equ	14913	;# 
   254   003A42                     ODCONA          equ	14914	;# 
   255   003A43                     SLRCONA         equ	14915	;# 
   256   003A44                     INLVLA          equ	14916	;# 
   257   003A45                     IOCAP           equ	14917	;# 
   258   003A46                     IOCAN           equ	14918	;# 
   259   003A47                     IOCAF           equ	14919	;# 
   260   003A50                     ANSELB          equ	14928	;# 
   261   003A51                     WPUB            equ	14929	;# 
   262   003A52                     ODCONB          equ	14930	;# 
   263   003A53                     SLRCONB         equ	14931	;# 
   264   003A54                     INLVLB          equ	14932	;# 
   265   003A55                     IOCBP           equ	14933	;# 
   266   003A56                     IOCBN           equ	14934	;# 
   267   003A57                     IOCBF           equ	14935	;# 
   268   003A5A                     RB1I2C          equ	14938	;# 
   269   003A5B                     RB2I2C          equ	14939	;# 
   270   003A60                     ANSELC          equ	14944	;# 
   271   003A61                     WPUC            equ	14945	;# 
   272   003A62                     ODCONC          equ	14946	;# 
   273   003A63                     SLRCONC         equ	14947	;# 
   274   003A64                     INLVLC          equ	14948	;# 
   275   003A65                     IOCCP           equ	14949	;# 
   276   003A66                     IOCCN           equ	14950	;# 
   277   003A67                     IOCCF           equ	14951	;# 
   278   003A6A                     RC3I2C          equ	14954	;# 
   279   003A6B                     RC4I2C          equ	14955	;# 
   280   003A70                     ANSELD          equ	14960	;# 
   281   003A71                     WPUD            equ	14961	;# 
   282   003A72                     ODCOND          equ	14962	;# 
   283   003A73                     SLRCOND         equ	14963	;# 
   284   003A74                     INLVLD          equ	14964	;# 
   285   003A7A                     RD0I2C          equ	14970	;# 
   286   003A7B                     RD1I2C          equ	14971	;# 
   287   003A80                     ANSELE          equ	14976	;# 
   288   003A81                     WPUE            equ	14977	;# 
   289   003A82                     ODCONE          equ	14978	;# 
   290   003A83                     SLRCONE         equ	14979	;# 
   291   003A84                     INLVLE          equ	14980	;# 
   292   003A85                     IOCEP           equ	14981	;# 
   293   003A86                     IOCEN           equ	14982	;# 
   294   003A87                     IOCEF           equ	14983	;# 
   295   003ABF                     PPSLOCK         equ	15039	;# 
   296   003AC0                     INT0PPS         equ	15040	;# 
   297   003AC1                     INT1PPS         equ	15041	;# 
   298   003AC2                     INT2PPS         equ	15042	;# 
   299   003AC3                     T0CKIPPS        equ	15043	;# 
   300   003AC4                     T1CKIPPS        equ	15044	;# 
   301   003AC5                     T1GPPS          equ	15045	;# 
   302   003AC6                     T3CKIPPS        equ	15046	;# 
   303   003AC7                     T3GPPS          equ	15047	;# 
   304   003AC8                     T5CKIPPS        equ	15048	;# 
   305   003AC9                     T5GPPS          equ	15049	;# 
   306   003ACA                     T2INPPS         equ	15050	;# 
   307   003ACB                     T4INPPS         equ	15051	;# 
   308   003ACC                     T6INPPS         equ	15052	;# 
   309   003ACD                     CCP1PPS         equ	15053	;# 
   310   003ACE                     CCP2PPS         equ	15054	;# 
   311   003ACF                     CCP3PPS         equ	15055	;# 
   312   003AD0                     CCP4PPS         equ	15056	;# 
   313   003AD1                     SMT1WINPPS      equ	15057	;# 
   314   003AD2                     SMT1SIGPPS      equ	15058	;# 
   315   003AD3                     CWG1INPPS       equ	15059	;# 
   316   003AD4                     CWG2INPPS       equ	15060	;# 
   317   003AD5                     CWG3INPPS       equ	15061	;# 
   318   003AD6                     MD1CARLPPS      equ	15062	;# 
   319   003AD7                     MD1CARHPPS      equ	15063	;# 
   320   003AD8                     MD1SRCPPS       equ	15064	;# 
   321   003AD9                     CLCIN0PPS       equ	15065	;# 
   322   003ADA                     CLCIN1PPS       equ	15066	;# 
   323   003ADB                     CLCIN2PPS       equ	15067	;# 
   324   003ADC                     CLCIN3PPS       equ	15068	;# 
   325   003ADD                     ADACTPPS        equ	15069	;# 
   326   003ADE                     SPI1SCKPPS      equ	15070	;# 
   327   003ADF                     SPI1SDIPPS      equ	15071	;# 
   328   003AE0                     SPI1SSPPS       equ	15072	;# 
   329   003AE1                     I2C1SCLPPS      equ	15073	;# 
   330   003AE2                     I2C1SDAPPS      equ	15074	;# 
   331   003AE3                     I2C2SCLPPS      equ	15075	;# 
   332   003AE4                     I2C2SDAPPS      equ	15076	;# 
   333   003AE5                     U1RXPPS         equ	15077	;# 
   334   003AE6                     U1CTSPPS        equ	15078	;# 
   335   003AE8                     U2RXPPS         equ	15080	;# 
   336   003AE9                     U2CTSPPS        equ	15081	;# 
   337   003BC9                     DMA2BUF         equ	15305	;# 
   338   003BCA                     DMA2DCNT        equ	15306	;# 
   339   003BCA                     DMA2DCNTL       equ	15306	;# 
   340   003BCB                     DMA2DCNTH       equ	15307	;# 
   341   003BCC                     DMA2DPTR        equ	15308	;# 
   342   003BCC                     DMA2DPTRL       equ	15308	;# 
   343   003BCD                     DMA2DPTRH       equ	15309	;# 
   344   003BCE                     DMA2DSZ         equ	15310	;# 
   345   003BCE                     DMA2DSZL        equ	15310	;# 
   346   003BCF                     DMA2DSZH        equ	15311	;# 
   347   003BD0                     DMA2DSA         equ	15312	;# 
   348   003BD0                     DMA2DSAL        equ	15312	;# 
   349   003BD1                     DMA2DSAH        equ	15313	;# 
   350   003BD2                     DMA2SCNT        equ	15314	;# 
   351   003BD2                     DMA2SCNTL       equ	15314	;# 
   352   003BD3                     DMA2SCNTH       equ	15315	;# 
   353   003BD4                     DMA2SPTR        equ	15316	;# 
   354   003BD4                     DMA2SPTRL       equ	15316	;# 
   355   003BD5                     DMA2SPTRH       equ	15317	;# 
   356   003BD6                     DMA2SPTRU       equ	15318	;# 
   357   003BD7                     DMA2SSZ         equ	15319	;# 
   358   003BD7                     DMA2SSZL        equ	15319	;# 
   359   003BD8                     DMA2SSZH        equ	15320	;# 
   360   003BD9                     DMA2SSA         equ	15321	;# 
   361   003BD9                     DMA2SSAL        equ	15321	;# 
   362   003BDA                     DMA2SSAH        equ	15322	;# 
   363   003BDB                     DMA2SSAU        equ	15323	;# 
   364   003BDC                     DMA2CON0        equ	15324	;# 
   365   003BDD                     DMA2CON1        equ	15325	;# 
   366   003BDE                     DMA2AIRQ        equ	15326	;# 
   367   003BDF                     DMA2SIRQ        equ	15327	;# 
   368   003BE9                     DMA1BUF         equ	15337	;# 
   369   003BEA                     DMA1DCNT        equ	15338	;# 
   370   003BEA                     DMA1DCNTL       equ	15338	;# 
   371   003BEB                     DMA1DCNTH       equ	15339	;# 
   372   003BEC                     DMA1DPTR        equ	15340	;# 
   373   003BEC                     DMA1DPTRL       equ	15340	;# 
   374   003BED                     DMA1DPTRH       equ	15341	;# 
   375   003BEE                     DMA1DSZ         equ	15342	;# 
   376   003BEE                     DMA1DSZL        equ	15342	;# 
   377   003BEF                     DMA1DSZH        equ	15343	;# 
   378   003BF0                     DMA1DSA         equ	15344	;# 
   379   003BF0                     DMA1DSAL        equ	15344	;# 
   380   003BF1                     DMA1DSAH        equ	15345	;# 
   381   003BF2                     DMA1SCNT        equ	15346	;# 
   382   003BF2                     DMA1SCNTL       equ	15346	;# 
   383   003BF3                     DMA1SCNTH       equ	15347	;# 
   384   003BF4                     DMA1SPTR        equ	15348	;# 
   385   003BF4                     DMA1SPTRL       equ	15348	;# 
   386   003BF5                     DMA1SPTRH       equ	15349	;# 
   387   003BF6                     DMA1SPTRU       equ	15350	;# 
   388   003BF7                     DMA1SSZ         equ	15351	;# 
   389   003BF7                     DMA1SSZL        equ	15351	;# 
   390   003BF8                     DMA1SSZH        equ	15352	;# 
   391   003BF9                     DMA1SSA         equ	15353	;# 
   392   003BF9                     DMA1SSAL        equ	15353	;# 
   393   003BFA                     DMA1SSAH        equ	15354	;# 
   394   003BFB                     DMA1SSAU        equ	15355	;# 
   395   003BFC                     DMA1CON0        equ	15356	;# 
   396   003BFD                     DMA1CON1        equ	15357	;# 
   397   003BFE                     DMA1AIRQ        equ	15358	;# 
   398   003BFF                     DMA1SIRQ        equ	15359	;# 
   399   003C56                     CLC4CON         equ	15446	;# 
   400   003C57                     CLC4POL         equ	15447	;# 
   401   003C58                     CLC4SEL0        equ	15448	;# 
   402   003C59                     CLC4SEL1        equ	15449	;# 
   403   003C5A                     CLC4SEL2        equ	15450	;# 
   404   003C5B                     CLC4SEL3        equ	15451	;# 
   405   003C5C                     CLC4GLS0        equ	15452	;# 
   406   003C5D                     CLC4GLS1        equ	15453	;# 
   407   003C5E                     CLC4GLS2        equ	15454	;# 
   408   003C5F                     CLC4GLS3        equ	15455	;# 
   409   003C60                     CLC3CON         equ	15456	;# 
   410   003C61                     CLC3POL         equ	15457	;# 
   411   003C62                     CLC3SEL0        equ	15458	;# 
   412   003C63                     CLC3SEL1        equ	15459	;# 
   413   003C64                     CLC3SEL2        equ	15460	;# 
   414   003C65                     CLC3SEL3        equ	15461	;# 
   415   003C66                     CLC3GLS0        equ	15462	;# 
   416   003C67                     CLC3GLS1        equ	15463	;# 
   417   003C68                     CLC3GLS2        equ	15464	;# 
   418   003C69                     CLC3GLS3        equ	15465	;# 
   419   003C6A                     CLC2CON         equ	15466	;# 
   420   003C6B                     CLC2POL         equ	15467	;# 
   421   003C6C                     CLC2SEL0        equ	15468	;# 
   422   003C6D                     CLC2SEL1        equ	15469	;# 
   423   003C6E                     CLC2SEL2        equ	15470	;# 
   424   003C6F                     CLC2SEL3        equ	15471	;# 
   425   003C70                     CLC2GLS0        equ	15472	;# 
   426   003C71                     CLC2GLS1        equ	15473	;# 
   427   003C72                     CLC2GLS2        equ	15474	;# 
   428   003C73                     CLC2GLS3        equ	15475	;# 
   429   003C74                     CLC1CON         equ	15476	;# 
   430   003C75                     CLC1POL         equ	15477	;# 
   431   003C76                     CLC1SEL0        equ	15478	;# 
   432   003C77                     CLC1SEL1        equ	15479	;# 
   433   003C78                     CLC1SEL2        equ	15480	;# 
   434   003C79                     CLC1SEL3        equ	15481	;# 
   435   003C7A                     CLC1GLS0        equ	15482	;# 
   436   003C7B                     CLC1GLS1        equ	15483	;# 
   437   003C7C                     CLC1GLS2        equ	15484	;# 
   438   003C7D                     CLC1GLS3        equ	15485	;# 
   439   003C7E                     CLCDATA0        equ	15486	;# 
   440   003CE5                     CLKRCON         equ	15589	;# 
   441   003CE6                     CLKRCLK         equ	15590	;# 
   442   003CFA                     MD1CON0         equ	15610	;# 
   443   003CFB                     MD1CON1         equ	15611	;# 
   444   003CFC                     MD1SRC          equ	15612	;# 
   445   003CFD                     MD1CARL         equ	15613	;# 
   446   003CFE                     MD1CARH         equ	15614	;# 
   447   003D10                     SPI1RXB         equ	15632	;# 
   448   003D11                     SPI1TXB         equ	15633	;# 
   449   003D12                     SPI1TCNT        equ	15634	;# 
   450   003D12                     SPI1TCNTL       equ	15634	;# 
   451   003D13                     SPI1TCNTH       equ	15635	;# 
   452   003D14                     SPI1CON0        equ	15636	;# 
   453   003D15                     SPI1CON1        equ	15637	;# 
   454   003D16                     SPI1CON2        equ	15638	;# 
   455   003D17                     SPI1STATUS      equ	15639	;# 
   456   003D18                     SPI1TWIDTH      equ	15640	;# 
   457   003D19                     SPI1BAUD        equ	15641	;# 
   458   003D1A                     SPI1INTF        equ	15642	;# 
   459   003D1B                     SPI1INTE        equ	15643	;# 
   460   003D1C                     SPI1CLK         equ	15644	;# 
   461   003D54                     I2C2RXB         equ	15700	;# 
   462   003D55                     I2C2TXB         equ	15701	;# 
   463   003D56                     I2C2CNT         equ	15702	;# 
   464   003D57                     I2C2ADB0        equ	15703	;# 
   465   003D58                     I2C2ADB1        equ	15704	;# 
   466   003D59                     I2C2ADR0        equ	15705	;# 
   467   003D5A                     I2C2ADR1        equ	15706	;# 
   468   003D5B                     I2C2ADR2        equ	15707	;# 
   469   003D5C                     I2C2ADR3        equ	15708	;# 
   470   003D5D                     I2C2CON0        equ	15709	;# 
   471   003D5E                     I2C2CON1        equ	15710	;# 
   472   003D5F                     I2C2CON2        equ	15711	;# 
   473   003D60                     I2C2ERR         equ	15712	;# 
   474   003D61                     I2C2STAT0       equ	15713	;# 
   475   003D62                     I2C2STAT1       equ	15714	;# 
   476   003D63                     I2C2PIR         equ	15715	;# 
   477   003D64                     I2C2PIE         equ	15716	;# 
   478   003D65                     I2C2CLK         equ	15717	;# 
   479   003D66                     I2C2BTO         equ	15718	;# 
   480   003D6A                     I2C1RXB         equ	15722	;# 
   481   003D6B                     I2C1TXB         equ	15723	;# 
   482   003D6C                     I2C1CNT         equ	15724	;# 
   483   003D6D                     I2C1ADB0        equ	15725	;# 
   484   003D6E                     I2C1ADB1        equ	15726	;# 
   485   003D6F                     I2C1ADR0        equ	15727	;# 
   486   003D70                     I2C1ADR1        equ	15728	;# 
   487   003D71                     I2C1ADR2        equ	15729	;# 
   488   003D72                     I2C1ADR3        equ	15730	;# 
   489   003D73                     I2C1CON0        equ	15731	;# 
   490   003D74                     I2C1CON1        equ	15732	;# 
   491   003D75                     I2C1CON2        equ	15733	;# 
   492   003D76                     I2C1ERR         equ	15734	;# 
   493   003D77                     I2C1STAT0       equ	15735	;# 
   494   003D78                     I2C1STAT1       equ	15736	;# 
   495   003D79                     I2C1PIR         equ	15737	;# 
   496   003D7A                     I2C1PIE         equ	15738	;# 
   497   003D7B                     I2C1CLK         equ	15739	;# 
   498   003D7C                     I2C1BTO         equ	15740	;# 
   499   003DD0                     U2RXB           equ	15824	;# 
   500   003DD0                     U2RXBL          equ	15824	;# 
   501   003DD2                     U2TXB           equ	15826	;# 
   502   003DD2                     U2TXBL          equ	15826	;# 
   503   003DD4                     U2P1            equ	15828	;# 
   504   003DD4                     U2P1L           equ	15828	;# 
   505   003DD6                     U2P2            equ	15830	;# 
   506   003DD6                     U2P2L           equ	15830	;# 
   507   003DD8                     U2P3            equ	15832	;# 
   508   003DD8                     U2P3L           equ	15832	;# 
   509   003DDA                     U2CON0          equ	15834	;# 
   510   003DDB                     U2CON1          equ	15835	;# 
   511   003DDC                     U2CON2          equ	15836	;# 
   512   003DDD                     U2BRG           equ	15837	;# 
   513   003DDD                     U2BRGL          equ	15837	;# 
   514   003DDE                     U2BRGH          equ	15838	;# 
   515   003DDF                     U2FIFO          equ	15839	;# 
   516   003DE0                     U2UIR           equ	15840	;# 
   517   003DE1                     U2ERRIR         equ	15841	;# 
   518   003DE2                     U2ERRIE         equ	15842	;# 
   519   003DE8                     U1RXB           equ	15848	;# 
   520   003DE8                     U1RXBL          equ	15848	;# 
   521   003DE9                     U1RXCHK         equ	15849	;# 
   522   003DEA                     U1TXB           equ	15850	;# 
   523   003DEA                     U1TXBL          equ	15850	;# 
   524   003DEB                     U1TXCHK         equ	15851	;# 
   525   003DEC                     U1P1            equ	15852	;# 
   526   003DEC                     U1P1L           equ	15852	;# 
   527   003DED                     U1P1H           equ	15853	;# 
   528   003DEE                     U1P2            equ	15854	;# 
   529   003DEE                     U1P2L           equ	15854	;# 
   530   003DEF                     U1P2H           equ	15855	;# 
   531   003DF0                     U1P3            equ	15856	;# 
   532   003DF0                     U1P3L           equ	15856	;# 
   533   003DF1                     U1P3H           equ	15857	;# 
   534   003DF2                     U1CON0          equ	15858	;# 
   535   003DF3                     U1CON1          equ	15859	;# 
   536   003DF4                     U1CON2          equ	15860	;# 
   537   003DF5                     U1BRG           equ	15861	;# 
   538   003DF5                     U1BRGL          equ	15861	;# 
   539   003DF6                     U1BRGH          equ	15862	;# 
   540   003DF7                     U1FIFO          equ	15863	;# 
   541   003DF8                     U1UIR           equ	15864	;# 
   542   003DF9                     U1ERRIR         equ	15865	;# 
   543   003DFA                     U1ERRIE         equ	15866	;# 
   544   003E9C                     DAC1CON1        equ	16028	;# 
   545   003E9E                     DAC1CON0        equ	16030	;# 
   546   003EB8                     CM2CON0         equ	16056	;# 
   547   003EB9                     CM2CON1         equ	16057	;# 
   548   003EBA                     CM2NCH          equ	16058	;# 
   549   003EBB                     CM2PCH          equ	16059	;# 
   550   003EBC                     CM1CON0         equ	16060	;# 
   551   003EBD                     CM1CON1         equ	16061	;# 
   552   003EBE                     CM1NCH          equ	16062	;# 
   553   003EBF                     CM1PCH          equ	16063	;# 
   554   003EC0                     CMOUT           equ	16064	;# 
   555   003EC1                     FVRCON          equ	16065	;# 
   556   003EC3                     ZCDCON          equ	16067	;# 
   557   003EC9                     HLVDCON0        equ	16073	;# 
   558   003ECA                     HLVDCON1        equ	16074	;# 
   559   003ED7                     ADCP            equ	16087	;# 
   560   003EDE                     ADLTH           equ	16094	;# 
   561   003EDE                     ADLTHL          equ	16094	;# 
   562   003EDF                     ADLTHH          equ	16095	;# 
   563   003EE0                     ADUTH           equ	16096	;# 
   564   003EE0                     ADUTHL          equ	16096	;# 
   565   003EE1                     ADUTHH          equ	16097	;# 
   566   003EE2                     ADERR           equ	16098	;# 
   567   003EE2                     ADERRL          equ	16098	;# 
   568   003EE3                     ADERRH          equ	16099	;# 
   569   003EE4                     ADSTPT          equ	16100	;# 
   570   003EE4                     ADSTPTL         equ	16100	;# 
   571   003EE5                     ADSTPTH         equ	16101	;# 
   572   003EE6                     ADFLTR          equ	16102	;# 
   573   003EE6                     ADFLTRL         equ	16102	;# 
   574   003EE7                     ADFLTRH         equ	16103	;# 
   575   003EE8                     ADACC           equ	16104	;# 
   576   003EE8                     ADACCL          equ	16104	;# 
   577   003EE9                     ADACCH          equ	16105	;# 
   578   003EEA                     ADACCU          equ	16106	;# 
   579   003EEB                     ADCNT           equ	16107	;# 
   580   003EEC                     ADRPT           equ	16108	;# 
   581   003EED                     ADPREV          equ	16109	;# 
   582   003EED                     ADPREVL         equ	16109	;# 
   583   003EEE                     ADPREVH         equ	16110	;# 
   584   003EEF                     ADRES           equ	16111	;# 
   585   003EEF                     ADRESL          equ	16111	;# 
   586   003EF0                     ADRESH          equ	16112	;# 
   587   003EF1                     ADPCH           equ	16113	;# 
   588   003EF3                     ADACQ           equ	16115	;# 
   589   003EF3                     ADACQL          equ	16115	;# 
   590   003EF4                     ADACQH          equ	16116	;# 
   591   003EF5                     ADCAP           equ	16117	;# 
   592   003EF6                     ADPRE           equ	16118	;# 
   593   003EF6                     ADPREL          equ	16118	;# 
   594   003EF7                     ADPREH          equ	16119	;# 
   595   003EF8                     ADCON0          equ	16120	;# 
   596   003EF9                     ADCON1          equ	16121	;# 
   597   003EFA                     ADCON2          equ	16122	;# 
   598   003EFB                     ADCON3          equ	16123	;# 
   599   003EFC                     ADSTAT          equ	16124	;# 
   600   003EFD                     ADREF           equ	16125	;# 
   601   003EFE                     ADACT           equ	16126	;# 
   602   003EFF                     ADCLK           equ	16127	;# 
   603   003F12                     SMT1TMR         equ	16146	;# 
   604   003F12                     SMT1TMRL        equ	16146	;# 
   605   003F13                     SMT1TMRH        equ	16147	;# 
   606   003F14                     SMT1TMRU        equ	16148	;# 
   607   003F15                     SMT1CPR         equ	16149	;# 
   608   003F15                     SMT1CPRL        equ	16149	;# 
   609   003F16                     SMT1CPRH        equ	16150	;# 
   610   003F17                     SMT1CPRU        equ	16151	;# 
   611   003F18                     SMT1CPW         equ	16152	;# 
   612   003F18                     SMT1CPWL        equ	16152	;# 
   613   003F19                     SMT1CPWH        equ	16153	;# 
   614   003F1A                     SMT1CPWU        equ	16154	;# 
   615   003F1B                     SMT1PR          equ	16155	;# 
   616   003F1B                     SMT1PRL         equ	16155	;# 
   617   003F1C                     SMT1PRH         equ	16156	;# 
   618   003F1D                     SMT1PRU         equ	16157	;# 
   619   003F1E                     SMT1CON0        equ	16158	;# 
   620   003F1F                     SMT1CON1        equ	16159	;# 
   621   003F20                     SMT1STAT        equ	16160	;# 
   622   003F21                     SMT1CLK         equ	16161	;# 
   623   003F22                     SMT1SIG         equ	16162	;# 
   624   003F23                     SMT1WIN         equ	16163	;# 
   625   003F38                     NCO1ACC         equ	16184	;# 
   626   003F38                     NCO1ACCL        equ	16184	;# 
   627   003F39                     NCO1ACCH        equ	16185	;# 
   628   003F3A                     NCO1ACCU        equ	16186	;# 
   629   003F3B                     NCO1INC         equ	16187	;# 
   630   003F3B                     NCO1INCL        equ	16187	;# 
   631   003F3C                     NCO1INCH        equ	16188	;# 
   632   003F3D                     NCO1INCU        equ	16189	;# 
   633   003F3E                     NCO1CON         equ	16190	;# 
   634   003F3F                     NCO1CLK         equ	16191	;# 
   635   003F40                     CWG3CLK         equ	16192	;# 
   636   003F40                     CWG3CLKCON      equ	16192	;# 
   637   003F41                     CWG3ISM         equ	16193	;# 
   638   003F41                     CWG3DAT         equ	16193	;# 
   639   003F42                     CWG3DBR         equ	16194	;# 
   640   003F43                     CWG3DBF         equ	16195	;# 
   641   003F44                     CWG3CON0        equ	16196	;# 
   642   003F45                     CWG3CON1        equ	16197	;# 
   643   003F46                     CWG3AS0         equ	16198	;# 
   644   003F47                     CWG3AS1         equ	16199	;# 
   645   003F48                     CWG3STR         equ	16200	;# 
   646   003F49                     CWG2CLK         equ	16201	;# 
   647   003F49                     CWG2CLKCON      equ	16201	;# 
   648   003F4A                     CWG2ISM         equ	16202	;# 
   649   003F4A                     CWG2DAT         equ	16202	;# 
   650   003F4B                     CWG2DBR         equ	16203	;# 
   651   003F4C                     CWG2DBF         equ	16204	;# 
   652   003F4D                     CWG2CON0        equ	16205	;# 
   653   003F4E                     CWG2CON1        equ	16206	;# 
   654   003F4F                     CWG2AS0         equ	16207	;# 
   655   003F50                     CWG2AS1         equ	16208	;# 
   656   003F51                     CWG2STR         equ	16209	;# 
   657   003F52                     CWG1CLK         equ	16210	;# 
   658   003F52                     CWG1CLKCON      equ	16210	;# 
   659   003F53                     CWG1ISM         equ	16211	;# 
   660   003F53                     CWG1DAT         equ	16211	;# 
   661   003F54                     CWG1DBR         equ	16212	;# 
   662   003F55                     CWG1DBF         equ	16213	;# 
   663   003F56                     CWG1CON0        equ	16214	;# 
   664   003F57                     CWG1CON1        equ	16215	;# 
   665   003F58                     CWG1AS0         equ	16216	;# 
   666   003F59                     CWG1AS1         equ	16217	;# 
   667   003F5A                     CWG1STR         equ	16218	;# 
   668   003F5E                     CCPTMRS0        equ	16222	;# 
   669   003F5F                     CCPTMRS1        equ	16223	;# 
   670   003F60                     PWM8DC          equ	16224	;# 
   671   003F60                     PWM8DCL         equ	16224	;# 
   672   003F61                     PWM8DCH         equ	16225	;# 
   673   003F62                     PWM8CON         equ	16226	;# 
   674   003F64                     PWM7DC          equ	16228	;# 
   675   003F64                     PWM7DCL         equ	16228	;# 
   676   003F65                     PWM7DCH         equ	16229	;# 
   677   003F66                     PWM7CON         equ	16230	;# 
   678   003F68                     PWM6DC          equ	16232	;# 
   679   003F68                     PWM6DCL         equ	16232	;# 
   680   003F69                     PWM6DCH         equ	16233	;# 
   681   003F6A                     PWM6CON         equ	16234	;# 
   682   003F6C                     PWM5DC          equ	16236	;# 
   683   003F6C                     PWM5DCL         equ	16236	;# 
   684   003F6D                     PWM5DCH         equ	16237	;# 
   685   003F6E                     PWM5CON         equ	16238	;# 
   686   003F70                     CCPR4           equ	16240	;# 
   687   003F70                     CCPR4L          equ	16240	;# 
   688   003F71                     CCPR4H          equ	16241	;# 
   689   003F72                     CCP4CON         equ	16242	;# 
   690   003F73                     CCP4CAP         equ	16243	;# 
   691   003F74                     CCPR3           equ	16244	;# 
   692   003F74                     CCPR3L          equ	16244	;# 
   693   003F75                     CCPR3H          equ	16245	;# 
   694   003F76                     CCP3CON         equ	16246	;# 
   695   003F77                     CCP3CAP         equ	16247	;# 
   696   003F78                     CCPR2           equ	16248	;# 
   697   003F78                     CCPR2L          equ	16248	;# 
   698   003F79                     CCPR2H          equ	16249	;# 
   699   003F7A                     CCP2CON         equ	16250	;# 
   700   003F7B                     CCP2CAP         equ	16251	;# 
   701   003F7C                     CCPR1           equ	16252	;# 
   702   003F7C                     CCPR1L          equ	16252	;# 
   703   003F7D                     CCPR1H          equ	16253	;# 
   704   003F7E                     CCP1CON         equ	16254	;# 
   705   003F7F                     CCP1CAP         equ	16255	;# 
   706   003F92                     T6TMR           equ	16274	;# 
   707   003F92                     TMR6            equ	16274	;# 
   708   003F93                     T6PR            equ	16275	;# 
   709   003F93                     PR6             equ	16275	;# 
   710   003F94                     T6CON           equ	16276	;# 
   711   003F95                     T6HLT           equ	16277	;# 
   712   003F96                     T6CLKCON        equ	16278	;# 
   713   003F96                     T6CLK           equ	16278	;# 
   714   003F97                     T6RST           equ	16279	;# 
   715   003F98                     TMR5            equ	16280	;# 
   716   003F98                     TMR5L           equ	16280	;# 
   717   003F99                     TMR5H           equ	16281	;# 
   718   003F9A                     T5CON           equ	16282	;# 
   719   003F9A                     TMR5CON         equ	16282	;# 
   720   003F9B                     T5GCON          equ	16283	;# 
   721   003F9B                     TMR5GCON        equ	16283	;# 
   722   003F9C                     T5GATE          equ	16284	;# 
   723   003F9C                     TMR5GATE        equ	16284	;# 
   724   003F9D                     T5CLK           equ	16285	;# 
   725   003F9D                     TMR5CLK         equ	16285	;# 
   726   003F9D                     PR5             equ	16285	;# 
   727   003F9E                     T4TMR           equ	16286	;# 
   728   003F9E                     TMR4            equ	16286	;# 
   729   003F9F                     T4PR            equ	16287	;# 
   730   003F9F                     PR4             equ	16287	;# 
   731   003FA0                     T4CON           equ	16288	;# 
   732   003FA1                     T4HLT           equ	16289	;# 
   733   003FA2                     T4CLKCON        equ	16290	;# 
   734   003FA2                     T4CLK           equ	16290	;# 
   735   003FA3                     T4RST           equ	16291	;# 
   736   003FA4                     TMR3            equ	16292	;# 
   737   003FA4                     TMR3L           equ	16292	;# 
   738   003FA5                     TMR3H           equ	16293	;# 
   739   003FA6                     T3CON           equ	16294	;# 
   740   003FA6                     TMR3CON         equ	16294	;# 
   741   003FA7                     T3GCON          equ	16295	;# 
   742   003FA7                     TMR3GCON        equ	16295	;# 
   743   003FA8                     T3GATE          equ	16296	;# 
   744   003FA8                     TMR3GATE        equ	16296	;# 
   745   003FA9                     T3CLK           equ	16297	;# 
   746   003FA9                     TMR3CLK         equ	16297	;# 
   747   003FA9                     PR3             equ	16297	;# 
   748   003FAA                     T2TMR           equ	16298	;# 
   749   003FAA                     TMR2            equ	16298	;# 
   750   003FAB                     T2PR            equ	16299	;# 
   751   003FAB                     PR2             equ	16299	;# 
   752   003FAC                     T2CON           equ	16300	;# 
   753   003FAD                     T2HLT           equ	16301	;# 
   754   003FAE                     T2CLKCON        equ	16302	;# 
   755   003FAE                     T2CLK           equ	16302	;# 
   756   003FAF                     T2RST           equ	16303	;# 
   757   003FB0                     TMR1            equ	16304	;# 
   758   003FB0                     TMR1L           equ	16304	;# 
   759   003FB1                     TMR1H           equ	16305	;# 
   760   003FB2                     T1CON           equ	16306	;# 
   761   003FB2                     TMR1CON         equ	16306	;# 
   762   003FB3                     T1GCON          equ	16307	;# 
   763   003FB3                     TMR1GCON        equ	16307	;# 
   764   003FB4                     T1GATE          equ	16308	;# 
   765   003FB4                     TMR1GATE        equ	16308	;# 
   766   003FB5                     T1CLK           equ	16309	;# 
   767   003FB5                     TMR1CLK         equ	16309	;# 
   768   003FB5                     PR1             equ	16309	;# 
   769   003FB6                     TMR0L           equ	16310	;# 
   770   003FB6                     TMR0            equ	16310	;# 
   771   003FB7                     TMR0H           equ	16311	;# 
   772   003FB7                     PR0             equ	16311	;# 
   773   003FB8                     T0CON0          equ	16312	;# 
   774   003FB9                     T0CON1          equ	16313	;# 
   775   003FBA                     LATA            equ	16314	;# 
   776   003FBB                     LATB            equ	16315	;# 
   777   003FBC                     LATC            equ	16316	;# 
   778   003FBD                     LATD            equ	16317	;# 
   779   003FBE                     LATE            equ	16318	;# 
   780   003FC2                     TRISA           equ	16322	;# 
   781   003FC3                     TRISB           equ	16323	;# 
   782   003FC4                     TRISC           equ	16324	;# 
   783   003FC5                     TRISD           equ	16325	;# 
   784   003FC6                     TRISE           equ	16326	;# 
   785   003FCA                     PORTA           equ	16330	;# 
   786   003FCB                     PORTB           equ	16331	;# 
   787   003FCC                     PORTC           equ	16332	;# 
   788   003FCD                     PORTD           equ	16333	;# 
   789   003FCE                     PORTE           equ	16334	;# 
   790   003FD2                     INTCON0         equ	16338	;# 
   791   003FD3                     INTCON1         equ	16339	;# 
   792   003FD4                     IVTLOCK         equ	16340	;# 
   793   003FD5                     IVTBASE         equ	16341	;# 
   794   003FD5                     IVTBASEL        equ	16341	;# 
   795   003FD6                     IVTBASEH        equ	16342	;# 
   796   003FD7                     IVTBASEU        equ	16343	;# 
   797   003FD8                     STATUS          equ	16344	;# 
   798   003FD9                     FSR2            equ	16345	;# 
   799   003FD9                     FSR2L           equ	16345	;# 
   800   003FDA                     FSR2H           equ	16346	;# 
   801   003FDB                     PLUSW2          equ	16347	;# 
   802   003FDC                     PREINC2         equ	16348	;# 
   803   003FDD                     POSTDEC2        equ	16349	;# 
   804   003FDE                     POSTINC2        equ	16350	;# 
   805   003FDF                     INDF2           equ	16351	;# 
   806   003FE0                     BSR             equ	16352	;# 
   807   003FE1                     FSR1            equ	16353	;# 
   808   003FE1                     FSR1L           equ	16353	;# 
   809   003FE2                     FSR1H           equ	16354	;# 
   810   003FE3                     PLUSW1          equ	16355	;# 
   811   003FE4                     PREINC1         equ	16356	;# 
   812   003FE5                     POSTDEC1        equ	16357	;# 
   813   003FE6                     POSTINC1        equ	16358	;# 
   814   003FE7                     INDF1           equ	16359	;# 
   815   003FE8                     WREG            equ	16360	;# 
   816   003FE9                     FSR0            equ	16361	;# 
   817   003FE9                     FSR0L           equ	16361	;# 
   818   003FEA                     FSR0H           equ	16362	;# 
   819   003FEB                     PLUSW0          equ	16363	;# 
   820   003FEC                     PREINC0         equ	16364	;# 
   821   003FED                     POSTDEC0        equ	16365	;# 
   822   003FEE                     POSTINC0        equ	16366	;# 
   823   003FEF                     INDF0           equ	16367	;# 
   824   003FF0                     PCON0           equ	16368	;# 
   825   003FF1                     PCON1           equ	16369	;# 
   826   003FF3                     PROD            equ	16371	;# 
   827   003FF3                     PRODL           equ	16371	;# 
   828   003FF4                     PRODH           equ	16372	;# 
   829   003FF5                     TABLAT          equ	16373	;# 
   830   003FF6                     TBLPTR          equ	16374	;# 
   831   003FF6                     TBLPTRL         equ	16374	;# 
   832   003FF7                     TBLPTRH         equ	16375	;# 
   833   003FF8                     TBLPTRU         equ	16376	;# 
   834   003FF9                     PCLAT           equ	16377	;# 
   835   003FF9                     PCL             equ	16377	;# 
   836   003FFA                     PCLATH          equ	16378	;# 
   837   003FFB                     PCLATU          equ	16379	;# 
   838   003FFC                     STKPTR          equ	16380	;# 
   839   003FFD                     TOS             equ	16381	;# 
   840   003FFD                     TOSL            equ	16381	;# 
   841   003FFE                     TOSH            equ	16382	;# 
   842   003FFF                     TOSU            equ	16383	;# 
   843                           
   844                           ; 1 bytes @ 0x0
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 43 in file "calcmain.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels required when called: 2
   870 ;; This function calls:
   871 ;;		_check_keypad
   872 ;;		_initialize
   873 ;;		_op
   874 ;;		_solve
   875 ;; This function is called by:
   876 ;;		Startup code after reset
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text0
   881   00218A                     __ptext0:
   882                           	callstack 0
   883   003A70                     _ANSELD         set	14960
   884   003A50                     _ANSELB         set	14928
   885   003FCB                     _PORTBbits      set	16331
   886   003FBD                     _LATD           set	16317
   887   003FC5                     _TRISD          set	16325
   888   003FBB                     _LATB           set	16315
   889   003FC3                     _TRISB          set	16323
   890   003FCB                     _PORTB          set	16331
   891   003FCD                     _PORTD          set	16333
   892   003FCD                     _PORTDbits      set	16333
   893   00218A                     _main:
   894                           	callstack 29
   895   00218A                     l57:
   896   00218A                     l1292:
   897                           
   898                           ;calcmain.c: 46:         initialize();
   899   00218A  ECB6  F012         	call	_initialize	;wreg free
   900   00218E                     
   901                           ;calcmain.c: 47:         check_keypad();
   902   00218E  EC01  F010         	call	_check_keypad	;wreg free
   903   002192                     
   904                           ;calcmain.c: 48:         if (d == 1) goto start;
   905   002192  0100               	movlb	0	; () banked
   906   002194  0560               	decf	_d& (0+255),w,b
   907   002196  1161               	iorwf	(_d+1)& (0+255),w,b
   908   002198  A4D8               	btfss	status,2,c
   909   00219A  EFD1  F010         	goto	u691
   910   00219E  EFD3  F010         	goto	u690
   911   0021A2                     u691:
   912   0021A2  EFD5  F010         	goto	l1300
   913   0021A6                     u690:
   914   0021A6  EFC5  F010         	goto	l1292
   915   0021AA                     l1300:
   916                           
   917                           ; BSR set to: 0
   918                           ;calcmain.c: 49:         x_reg = x_reg + (button*10);
   919   0021AA  5168               	movf	_button& (0+255),w,b
   920   0021AC  0D0A               	mullw	10
   921   0021AE  006F FFCC  F010    	movff	prodl,??_main
   922   0021B4  006F FFD0  F011    	movff	prodh,??_main+1
   923   0021BA  5001               	movf	1,w,c
   924   0021BC  2410               	addwf	??_main^0,w,c
   925   0021BE  6E01               	movwf	1,c
   926   0021C0  5002               	movf	2,w,c
   927   0021C2  2011               	addwfc	(??_main+1)^0,w,c
   928   0021C4  6E02               	movwf	2,c
   929   0021C6                     
   930                           ; BSR set to: 0
   931                           ;calcmain.c: 50:         _delay((unsigned long)((500)*(4000000/4000.0)));
   932   0021C6  0E03               	movlw	3
   933   0021C8  6E11               	movwf	(??_main+1)^0,c
   934   0021CA  0E8A               	movlw	138
   935   0021CC  6E10               	movwf	??_main^0,c
   936   0021CE  0E56               	movlw	86
   937   0021D0                     u757:
   938   0021D0  2EE8               	decfsz	wreg,f,c
   939   0021D2  D7FE               	bra	u757
   940   0021D4  2E10               	decfsz	??_main^0,f,c
   941   0021D6  D7FC               	bra	u757
   942   0021D8  2E11               	decfsz	(??_main+1)^0,f,c
   943   0021DA  D7FA               	bra	u757
   944   0021DC                     
   945                           ;calcmain.c: 51:         check_keypad();
   946   0021DC  EC01  F010         	call	_check_keypad	;wreg free
   947   0021E0                     
   948                           ;calcmain.c: 52:         if (d == 1) goto start;
   949   0021E0  0100               	movlb	0	; () banked
   950   0021E2  0560               	decf	_d& (0+255),w,b
   951   0021E4  1161               	iorwf	(_d+1)& (0+255),w,b
   952   0021E6  A4D8               	btfss	status,2,c
   953   0021E8  EFF8  F010         	goto	u701
   954   0021EC  EFFA  F010         	goto	u700
   955   0021F0                     u701:
   956   0021F0  EFFC  F010         	goto	l1310
   957   0021F4                     u700:
   958   0021F4  EFC5  F010         	goto	l1292
   959   0021F8                     l1310:
   960                           
   961                           ; BSR set to: 0
   962                           ;calcmain.c: 53:         x_reg = x_reg + button;
   963   0021F8  5168               	movf	_button& (0+255),w,b
   964   0021FA  2401               	addwf	1,w,c
   965   0021FC  6E01               	movwf	1,c
   966   0021FE  0E00               	movlw	0
   967   002200  2002               	addwfc	2,w,c
   968   002202  6E02               	movwf	2,c
   969   002204                     
   970                           ; BSR set to: 0
   971                           ;calcmain.c: 54:         PORTDbits.RD0 = 1;
   972   002204  80CD               	bsf	205,0,c	;volatile
   973   002206                     
   974                           ; BSR set to: 0
   975                           ;calcmain.c: 55:         op();
   976   002206  ECEF  F011         	call	_op	;wreg free
   977   00220A                     
   978                           ;calcmain.c: 56:         if (d == 1) goto start;
   979   00220A  0100               	movlb	0	; () banked
   980   00220C  0560               	decf	_d& (0+255),w,b
   981   00220E  1161               	iorwf	(_d+1)& (0+255),w,b
   982   002210  A4D8               	btfss	status,2,c
   983   002212  EF0D  F011         	goto	u711
   984   002216  EF0F  F011         	goto	u710
   985   00221A                     u711:
   986   00221A  EF11  F011         	goto	l1320
   987   00221E                     u710:
   988   00221E  EFC5  F010         	goto	l1292
   989   002222                     l1320:
   990                           
   991                           ; BSR set to: 0
   992                           ;calcmain.c: 57:         check_keypad();
   993   002222  EC01  F010         	call	_check_keypad	;wreg free
   994   002226                     
   995                           ;calcmain.c: 58:         if (d == 1) goto start;
   996   002226  0100               	movlb	0	; () banked
   997   002228  0560               	decf	_d& (0+255),w,b
   998   00222A  1161               	iorwf	(_d+1)& (0+255),w,b
   999   00222C  A4D8               	btfss	status,2,c
  1000   00222E  EF1B  F011         	goto	u721
  1001   002232  EF1D  F011         	goto	u720
  1002   002236                     u721:
  1003   002236  EF1F  F011         	goto	l1326
  1004   00223A                     u720:
  1005   00223A  EFC5  F010         	goto	l1292
  1006   00223E                     l1326:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;calcmain.c: 59:         y_reg = y_reg + (button*10);
  1010   00223E  5168               	movf	_button& (0+255),w,b
  1011   002240  0D0A               	mullw	10
  1012   002242  006F FFCC  F010    	movff	prodl,??_main
  1013   002248  006F FFD0  F011    	movff	prodh,??_main+1
  1014   00224E  5003               	movf	3,w,c
  1015   002250  2410               	addwf	??_main^0,w,c
  1016   002252  6E03               	movwf	3,c
  1017   002254  5004               	movf	4,w,c
  1018   002256  2011               	addwfc	(??_main+1)^0,w,c
  1019   002258  6E04               	movwf	4,c
  1020   00225A                     
  1021                           ; BSR set to: 0
  1022                           ;calcmain.c: 60:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1023   00225A  0E03               	movlw	3
  1024   00225C  6E11               	movwf	(??_main+1)^0,c
  1025   00225E  0E8A               	movlw	138
  1026   002260  6E10               	movwf	??_main^0,c
  1027   002262  0E56               	movlw	86
  1028   002264                     u767:
  1029   002264  2EE8               	decfsz	wreg,f,c
  1030   002266  D7FE               	bra	u767
  1031   002268  2E10               	decfsz	??_main^0,f,c
  1032   00226A  D7FC               	bra	u767
  1033   00226C  2E11               	decfsz	(??_main+1)^0,f,c
  1034   00226E  D7FA               	bra	u767
  1035   002270                     
  1036                           ;calcmain.c: 61:         check_keypad();
  1037   002270  EC01  F010         	call	_check_keypad	;wreg free
  1038   002274                     
  1039                           ;calcmain.c: 62:         if (d == 1) goto start;
  1040   002274  0100               	movlb	0	; () banked
  1041   002276  0560               	decf	_d& (0+255),w,b
  1042   002278  1161               	iorwf	(_d+1)& (0+255),w,b
  1043   00227A  A4D8               	btfss	status,2,c
  1044   00227C  EF42  F011         	goto	u731
  1045   002280  EF44  F011         	goto	u730
  1046   002284                     u731:
  1047   002284  EF46  F011         	goto	l1336
  1048   002288                     u730:
  1049   002288  EFC5  F010         	goto	l1292
  1050   00228C                     l1336:
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;calcmain.c: 63:         y_reg = y_reg + button;
  1054   00228C  5168               	movf	_button& (0+255),w,b
  1055   00228E  2403               	addwf	3,w,c
  1056   002290  6E03               	movwf	3,c
  1057   002292  0E00               	movlw	0
  1058   002294  2004               	addwfc	4,w,c
  1059   002296  6E04               	movwf	4,c
  1060   002298                     
  1061                           ; BSR set to: 0
  1062                           ;calcmain.c: 64:         PORTDbits.RD0 = 0;
  1063   002298  90CD               	bcf	205,0,c	;volatile
  1064   00229A                     
  1065                           ; BSR set to: 0
  1066                           ;calcmain.c: 65:         PORTDbits.RD1 = 1;
  1067   00229A  82CD               	bsf	205,1,c	;volatile
  1068   00229C                     
  1069                           ; BSR set to: 0
  1070                           ;calcmain.c: 66:         solve();
  1071   00229C  EC70  F011         	call	_solve	;wreg free
  1072   0022A0                     
  1073                           ;calcmain.c: 67:         if (d == 1) goto start;
  1074   0022A0  0100               	movlb	0	; () banked
  1075   0022A2  0560               	decf	_d& (0+255),w,b
  1076   0022A4  1161               	iorwf	(_d+1)& (0+255),w,b
  1077   0022A6  A4D8               	btfss	status,2,c
  1078   0022A8  EF58  F011         	goto	u741
  1079   0022AC  EF5A  F011         	goto	u740
  1080   0022B0                     u741:
  1081   0022B0  EF5C  F011         	goto	l64
  1082   0022B4                     u740:
  1083   0022B4  EFC5  F010         	goto	l1292
  1084   0022B8                     l64:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;calcmain.c: 68:         PORTDbits.RD1 = 0;
  1088   0022B8  92CD               	bcf	205,1,c	;volatile
  1089                           
  1090                           ;calcmain.c: 69:         PORTD = display_reg;
  1091   0022BA  0060 F01F FFCD     	movff	7,16333	;volatile
  1092   0022C0                     
  1093                           ; BSR set to: 0
  1094                           ;calcmain.c: 70:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1095   0022C0  0E1A               	movlw	26
  1096   0022C2  6E11               	movwf	(??_main+1)^0,c
  1097   0022C4  0E5E               	movlw	94
  1098   0022C6  6E10               	movwf	??_main^0,c
  1099   0022C8  0E6E               	movlw	110
  1100   0022CA                     u777:
  1101   0022CA  2EE8               	decfsz	wreg,f,c
  1102   0022CC  D7FE               	bra	u777
  1103   0022CE  2E10               	decfsz	??_main^0,f,c
  1104   0022D0  D7FC               	bra	u777
  1105   0022D2  2E11               	decfsz	(??_main+1)^0,f,c
  1106   0022D4  D7FA               	bra	u777
  1107   0022D6  D000               	nop2	
  1108   0022D8  EFC5  F010         	goto	l57
  1109   0022DC  EFFE  F0FF         	goto	start
  1110   0022E0                     __end_of_main:
  1111                           	callstack 0
  1112                           
  1113                           ; #config settings
  1114                           
  1115                           	psect	cinit
  1116   0025B8                     __pcinit:
  1117                           	callstack 0
  1118   0025B8                     start_initialization:
  1119                           	callstack 0
  1120   0025B8                     __initialization:
  1121                           	callstack 0
  1122                           
  1123                           ; Clear objects allocated to BANK0 (9 bytes)
  1124   0025B8  EE00  F060         	lfsr	0,__pbssBANK0
  1125   0025BC  0E09               	movlw	9
  1126   0025BE                     clear_0:
  1127   0025BE  6AEE               	clrf	postinc0,c
  1128   0025C0  06E8               	decf	wreg,f,c
  1129   0025C2  E1FD               	bnz	clear_0
  1130   0025C4                     end_of_initialization:
  1131                           	callstack 0
  1132   0025C4                     __end_of__initialization:
  1133                           	callstack 0
  1134   0025C4  0100               	movlb	0
  1135   0025C6  EFC5  F010         	goto	_main	;jump to C main() function
  1136                           
  1137                           	psect	bssBANK0
  1138   000060                     __pbssBANK0:
  1139                           	callstack 0
  1140   000060                     _d:
  1141                           	callstack 0
  1142   000060                     	ds	2
  1143   000062                     _c:
  1144                           	callstack 0
  1145   000062                     	ds	2
  1146   000064                     _b:
  1147                           	callstack 0
  1148   000064                     	ds	2
  1149   000066                     _a:
  1150                           	callstack 0
  1151   000066                     	ds	2
  1152   000068                     _button:
  1153                           	callstack 0
  1154   000068                     	ds	1
  1155                           
  1156                           	psect	cstackCOMRAMh
  1157   000008                     __pcstackCOMRAMh:
  1158                           	callstack 0
  1159   000008                     ?___awdiv:
  1160                           	callstack 0
  1161   000008                     ___awdiv@dividend:
  1162                           	callstack 0
  1163   000008                     
  1164                           ; 1 bytes @ 0x0
  1165   000008                     	ds	2
  1166   00000A                     ___awdiv@divisor:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x2
  1170   00000A                     	ds	2
  1171   00000C                     ___awdiv@counter:
  1172                           	callstack 0
  1173   00000C                     
  1174                           ; 1 bytes @ 0x4
  1175   00000C                     	ds	1
  1176   00000D                     ___awdiv@sign:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x5
  1180   00000D                     	ds	1
  1181   00000E                     ___awdiv@quotient:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x6
  1185   00000E                     	ds	2
  1186   000010                     ??_main:
  1187                           
  1188                           ; 1 bytes @ 0x8
  1189   000010                     	ds	2
  1190                           
  1191                           	psect	cstackCOMRAMl
  1192   000000                     __pcstackCOMRAMl:
  1193                           	callstack 0
  1194   000000                     
  1195 ;; *************** function _solve *****************
  1196 ;; Defined at:
  1197 ;;		line 155 in file "calcmain.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 1
  1218 ;; This function calls:
  1219 ;;		___awdiv
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text1
  1226   0022E0                     __ptext1:
  1227                           	callstack 0
  1228   0022E0                     _solve:
  1229                           	callstack 29
  1230   0022E0                     
  1231                           ;calcmain.c: 156:     c = 0;
  1232   0022E0  0E00               	movlw	0
  1233   0022E2  0100               	movlb	0	; () banked
  1234   0022E4  6F63               	movwf	(_c+1)& (0+255),b
  1235   0022E6  0E00               	movlw	0
  1236   0022E8  6F62               	movwf	_c& (0+255),b
  1237                           
  1238                           ;calcmain.c: 157:     while (c<1) {
  1239   0022EA  EF9B  F011         	goto	l118
  1240   0022EE                     l119:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;calcmain.c: 158:         PORTBbits.RB2 = 1;
  1244   0022EE  84CB               	bsf	203,2,c	;volatile
  1245                           
  1246                           ;calcmain.c: 159:         if (PORTBbits.RB7 == 1) c = c+1;
  1247   0022F0  AECB               	btfss	203,7,c	;volatile
  1248   0022F2  EF7D  F011         	goto	u621
  1249   0022F6  EF7F  F011         	goto	u620
  1250   0022FA                     u621:
  1251   0022FA  EF85  F011         	goto	l1266
  1252   0022FE                     u620:
  1253   0022FE                     
  1254                           ; BSR set to: 0
  1255   0022FE  0E01               	movlw	1
  1256   002300  2562               	addwf	_c& (0+255),w,b
  1257   002302  6F62               	movwf	_c& (0+255),b
  1258   002304  0E00               	movlw	0
  1259   002306  2163               	addwfc	(_c+1)& (0+255),w,b
  1260   002308  6F63               	movwf	(_c+1)& (0+255),b
  1261   00230A                     l1266:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;calcmain.c: 160:         PORTBbits.RB2 = 0;
  1265   00230A  94CB               	bcf	203,2,c	;volatile
  1266   00230C                     
  1267                           ; BSR set to: 0
  1268                           ;calcmain.c: 162:         PORTBbits.RB0 = 1;
  1269   00230C  80CB               	bsf	203,0,c	;volatile
  1270   00230E                     
  1271                           ; BSR set to: 0
  1272                           ;calcmain.c: 163:         if (PORTBbits.RB7 == 1) d = d + 1, c = c +1;
  1273   00230E  AECB               	btfss	203,7,c	;volatile
  1274   002310  EF8C  F011         	goto	u631
  1275   002314  EF8E  F011         	goto	u630
  1276   002318                     u631:
  1277   002318  EF9A  F011         	goto	l1274
  1278   00231C                     u630:
  1279   00231C                     
  1280                           ; BSR set to: 0
  1281   00231C  0E01               	movlw	1
  1282   00231E  2560               	addwf	_d& (0+255),w,b
  1283   002320  6F60               	movwf	_d& (0+255),b
  1284   002322  0E00               	movlw	0
  1285   002324  2161               	addwfc	(_d+1)& (0+255),w,b
  1286   002326  6F61               	movwf	(_d+1)& (0+255),b
  1287   002328  0E01               	movlw	1
  1288   00232A  2562               	addwf	_c& (0+255),w,b
  1289   00232C  6F62               	movwf	_c& (0+255),b
  1290   00232E  0E00               	movlw	0
  1291   002330  2163               	addwfc	(_c+1)& (0+255),w,b
  1292   002332  6F63               	movwf	(_c+1)& (0+255),b
  1293   002334                     l1274:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;calcmain.c: 164:         PORTBbits.RB0 = 0;
  1297   002334  90CB               	bcf	203,0,c	;volatile
  1298   002336                     l118:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;calcmain.c: 157:     while (c<1) {
  1302   002336  BF63               	btfsc	(_c+1)& (0+255),7,b
  1303   002338  EFA6  F011         	goto	u641
  1304   00233C  5163               	movf	(_c+1)& (0+255),w,b
  1305   00233E  E108               	bnz	u640
  1306   002340  0562               	decf	_c& (0+255),w,b
  1307   002342  A0D8               	btfss	status,0,c
  1308   002344  EFA6  F011         	goto	u641
  1309   002348  EFA8  F011         	goto	u640
  1310   00234C                     u641:
  1311   00234C  EF77  F011         	goto	l119
  1312   002350                     u640:
  1313   002350                     
  1314                           ; BSR set to: 0
  1315                           ;calcmain.c: 166:     if (op_reg == 1) display_reg = (x_reg + y_reg);
  1316   002350  0405               	decf	5,w,c
  1317   002352  1006               	iorwf	6,w,c
  1318   002354  A4D8               	btfss	status,2,c
  1319   002356  EFAF  F011         	goto	u651
  1320   00235A  EFB1  F011         	goto	u650
  1321   00235E                     u651:
  1322   00235E  EFB6  F011         	goto	l1280
  1323   002362                     u650:
  1324   002362                     
  1325                           ; BSR set to: 0
  1326   002362  5001               	movf	1,w,c
  1327   002364  2403               	addwf	3,w,c
  1328   002366  6E07               	movwf	7,c
  1329   002368  EFEE  F011         	goto	l130
  1330   00236C                     l1280:
  1331                           
  1332                           ; BSR set to: 0
  1333   00236C  0E02               	movlw	2
  1334   00236E  1805               	xorwf	5,w,c
  1335   002370  1006               	iorwf	6,w,c
  1336   002372  A4D8               	btfss	status,2,c
  1337   002374  EFBE  F011         	goto	u661
  1338   002378  EFC0  F011         	goto	u660
  1339   00237C                     u661:
  1340   00237C  EFC5  F011         	goto	l1284
  1341   002380                     u660:
  1342   002380                     
  1343                           ; BSR set to: 0
  1344   002380  5003               	movf	3,w,c
  1345   002382  5C01               	subwf	1,w,c
  1346   002384  6E07               	movwf	7,c
  1347   002386  EFEE  F011         	goto	l130
  1348   00238A                     l1284:
  1349                           
  1350                           ; BSR set to: 0
  1351   00238A  0E03               	movlw	3
  1352   00238C  1805               	xorwf	5,w,c
  1353   00238E  1006               	iorwf	6,w,c
  1354   002390  A4D8               	btfss	status,2,c
  1355   002392  EFCD  F011         	goto	u671
  1356   002396  EFCF  F011         	goto	u670
  1357   00239A                     u671:
  1358   00239A  EFD6  F011         	goto	l1288
  1359   00239E                     u670:
  1360   00239E                     
  1361                           ; BSR set to: 0
  1362   00239E  5001               	movf	1,w,c
  1363   0023A0  0203               	mulwf	3,c
  1364   0023A2  006F FFCC F007     	movff	prodl,7
  1365   0023A8  EFEE  F011         	goto	l130
  1366   0023AC                     l1288:
  1367                           
  1368                           ; BSR set to: 0
  1369   0023AC  0E04               	movlw	4
  1370   0023AE  1805               	xorwf	5,w,c
  1371   0023B0  1006               	iorwf	6,w,c
  1372   0023B2  A4D8               	btfss	status,2,c
  1373   0023B4  EFDE  F011         	goto	u681
  1374   0023B8  EFE0  F011         	goto	u680
  1375   0023BC                     u681:
  1376   0023BC  EFEE  F011         	goto	l126
  1377   0023C0                     u680:
  1378   0023C0                     
  1379                           ; BSR set to: 0
  1380   0023C0  C001 F008          	movff	1,___awdiv@dividend
  1381   0023C4  C002 F009          	movff	2,___awdiv@dividend+1
  1382   0023C8  C003 F00A          	movff	3,___awdiv@divisor
  1383   0023CC  C004 F00B          	movff	4,___awdiv@divisor+1
  1384   0023D0  EC55  F012         	call	___awdiv	;wreg free
  1385   0023D4  5008               	movf	?___awdiv^0,w,c
  1386   0023D6  6E07               	movwf	7,c
  1387   0023D8  EFEE  F011         	goto	l130
  1388   0023DC                     l126:
  1389   0023DC                     l130:
  1390   0023DC  0012               	return		;funcret
  1391   0023DE                     __end_of_solve:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function ___awdiv *****************
  1395 ;; Defined at:
  1396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  dividend        2    0[COMRAM] int 
  1399 ;;  divisor         2    2[COMRAM] int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  quotient        2    6[COMRAM] int 
  1402 ;;  sign            1    5[COMRAM] unsigned char 
  1403 ;;  counter         1    4[COMRAM] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  2    0[COMRAM] int 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1414 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1416 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1417 ;;Total ram usage:        8 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_solve
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text2
  1427   0024AA                     __ptext2:
  1428                           	callstack 0
  1429   0024AA                     ___awdiv:
  1430                           	callstack 29
  1431   0024AA  6A0D               	clrf	___awdiv@sign^0,c
  1432   0024AC  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
  1433   0024AE  EF5D  F012         	goto	u380
  1434   0024B2  EF5B  F012         	goto	u381
  1435   0024B6                     u381:
  1436   0024B6  EF63  F012         	goto	l1096
  1437   0024BA                     u380:
  1438   0024BA  6C0A               	negf	___awdiv@divisor^0,c
  1439   0024BC  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1440   0024BE  B0D8               	btfsc	status,0,c
  1441   0024C0  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1442   0024C2  0E01               	movlw	1
  1443   0024C4  6E0D               	movwf	___awdiv@sign^0,c
  1444   0024C6                     l1096:
  1445   0024C6  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
  1446   0024C8  EF6A  F012         	goto	u390
  1447   0024CC  EF68  F012         	goto	u391
  1448   0024D0                     u391:
  1449   0024D0  EF70  F012         	goto	l1102
  1450   0024D4                     u390:
  1451   0024D4  6C08               	negf	___awdiv@dividend^0,c
  1452   0024D6  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1453   0024D8  B0D8               	btfsc	status,0,c
  1454   0024DA  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1455   0024DC  0E01               	movlw	1
  1456   0024DE  1A0D               	xorwf	___awdiv@sign^0,f,c
  1457   0024E0                     l1102:
  1458   0024E0  0E00               	movlw	0
  1459   0024E2  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1460   0024E4  0E00               	movlw	0
  1461   0024E6  6E0E               	movwf	___awdiv@quotient^0,c
  1462   0024E8  500A               	movf	___awdiv@divisor^0,w,c
  1463   0024EA  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1464   0024EC  B4D8               	btfsc	status,2,c
  1465   0024EE  EF7B  F012         	goto	u401
  1466   0024F2  EF7D  F012         	goto	u400
  1467   0024F6                     u401:
  1468   0024F6  EFA5  F012         	goto	l1124
  1469   0024FA                     u400:
  1470   0024FA  0E01               	movlw	1
  1471   0024FC  6E0C               	movwf	___awdiv@counter^0,c
  1472   0024FE  EF85  F012         	goto	l1110
  1473   002502                     l1108:
  1474   002502  90D8               	bcf	status,0,c
  1475   002504  360A               	rlcf	___awdiv@divisor^0,f,c
  1476   002506  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1477   002508  2A0C               	incf	___awdiv@counter^0,f,c
  1478   00250A                     l1110:
  1479   00250A  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1480   00250C  EF8A  F012         	goto	u411
  1481   002510  EF8C  F012         	goto	u410
  1482   002514                     u411:
  1483   002514  EF81  F012         	goto	l1108
  1484   002518                     u410:
  1485   002518                     l1112:
  1486   002518  90D8               	bcf	status,0,c
  1487   00251A  360E               	rlcf	___awdiv@quotient^0,f,c
  1488   00251C  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1489   00251E  500A               	movf	___awdiv@divisor^0,w,c
  1490   002520  5C08               	subwf	___awdiv@dividend^0,w,c
  1491   002522  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1492   002524  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1493   002526  A0D8               	btfss	status,0,c
  1494   002528  EF98  F012         	goto	u421
  1495   00252C  EF9A  F012         	goto	u420
  1496   002530                     u421:
  1497   002530  EF9F  F012         	goto	l1120
  1498   002534                     u420:
  1499   002534  500A               	movf	___awdiv@divisor^0,w,c
  1500   002536  5E08               	subwf	___awdiv@dividend^0,f,c
  1501   002538  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1502   00253A  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1503   00253C  800E               	bsf	___awdiv@quotient^0,0,c
  1504   00253E                     l1120:
  1505   00253E  90D8               	bcf	status,0,c
  1506   002540  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1507   002542  320A               	rrcf	___awdiv@divisor^0,f,c
  1508   002544  2E0C               	decfsz	___awdiv@counter^0,f,c
  1509   002546  EF8C  F012         	goto	l1112
  1510   00254A                     l1124:
  1511   00254A  500D               	movf	___awdiv@sign^0,w,c
  1512   00254C  B4D8               	btfsc	status,2,c
  1513   00254E  EFAB  F012         	goto	u431
  1514   002552  EFAD  F012         	goto	u430
  1515   002556                     u431:
  1516   002556  EFB1  F012         	goto	l1128
  1517   00255A                     u430:
  1518   00255A  6C0E               	negf	___awdiv@quotient^0,c
  1519   00255C  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1520   00255E  B0D8               	btfsc	status,0,c
  1521   002560  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1522   002562                     l1128:
  1523   002562  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1524   002566  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1525   00256A  0012               	return		;funcret
  1526   00256C                     __end_of___awdiv:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _op *****************
  1530 ;; Defined at:
  1531 ;;		line 137 in file "calcmain.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text3
  1559   0023DE                     __ptext3:
  1560                           	callstack 0
  1561   0023DE                     _op:
  1562                           	callstack 30
  1563   0023DE                     
  1564                           ;calcmain.c: 138:     b = 0;
  1565   0023DE  0E00               	movlw	0
  1566   0023E0  0100               	movlb	0	; () banked
  1567   0023E2  6F65               	movwf	(_b+1)& (0+255),b
  1568   0023E4  0E00               	movlw	0
  1569   0023E6  6F64               	movwf	_b& (0+255),b
  1570                           
  1571                           ;calcmain.c: 140:     while (b<1) {
  1572   0023E8  EF47  F012         	goto	l104
  1573   0023EC                     l105:
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;calcmain.c: 141:         PORTBbits.RB3 = 1;
  1577   0023EC  86CB               	bsf	203,3,c	;volatile
  1578                           
  1579                           ;calcmain.c: 142:         if (PORTBbits.RB4 == 1) op_reg = 1, b = b+1;
  1580   0023EE  A8CB               	btfss	203,4,c	;volatile
  1581   0023F0  EFFC  F011         	goto	u561
  1582   0023F4  EFFE  F011         	goto	u560
  1583   0023F8                     u561:
  1584   0023F8  EF0A  F012         	goto	l106
  1585   0023FC                     u560:
  1586   0023FC                     
  1587                           ; BSR set to: 0
  1588   0023FC  0E00               	movlw	0
  1589   0023FE  6E06               	movwf	6,c
  1590   002400  0E01               	movlw	1
  1591   002402  6E05               	movwf	5,c
  1592   002404                     l1238:
  1593                           
  1594                           ; BSR set to: 0
  1595   002404  0E01               	movlw	1
  1596   002406  2564               	addwf	_b& (0+255),w,b
  1597   002408  6F64               	movwf	_b& (0+255),b
  1598   00240A  0E00               	movlw	0
  1599   00240C  2165               	addwfc	(_b+1)& (0+255),w,b
  1600   00240E  6F65               	movwf	(_b+1)& (0+255),b
  1601   002410  EF31  F012         	goto	l1252
  1602   002414                     l106:
  1603                           
  1604                           ; BSR set to: 0
  1605   002414  AACB               	btfss	203,5,c	;volatile
  1606   002416  EF0F  F012         	goto	u571
  1607   00241A  EF11  F012         	goto	u570
  1608   00241E                     u571:
  1609   00241E  EF17  F012         	goto	l108
  1610   002422                     u570:
  1611   002422                     
  1612                           ; BSR set to: 0
  1613   002422  0E00               	movlw	0
  1614   002424  6E06               	movwf	6,c
  1615   002426  0E02               	movlw	2
  1616   002428  6E05               	movwf	5,c
  1617   00242A  EF02  F012         	goto	l1238
  1618   00242E                     l108:
  1619                           
  1620                           ; BSR set to: 0
  1621   00242E  ACCB               	btfss	203,6,c	;volatile
  1622   002430  EF1C  F012         	goto	u581
  1623   002434  EF1E  F012         	goto	u580
  1624   002438                     u581:
  1625   002438  EF24  F012         	goto	l110
  1626   00243C                     u580:
  1627   00243C                     
  1628                           ; BSR set to: 0
  1629   00243C  0E00               	movlw	0
  1630   00243E  6E06               	movwf	6,c
  1631   002440  0E03               	movlw	3
  1632   002442  6E05               	movwf	5,c
  1633   002444  EF02  F012         	goto	l1238
  1634   002448                     l110:
  1635                           
  1636                           ; BSR set to: 0
  1637   002448  AECB               	btfss	203,7,c	;volatile
  1638   00244A  EF29  F012         	goto	u591
  1639   00244E  EF2B  F012         	goto	u590
  1640   002452                     u591:
  1641   002452  EF31  F012         	goto	l109
  1642   002456                     u590:
  1643   002456                     
  1644                           ; BSR set to: 0
  1645   002456  0E00               	movlw	0
  1646   002458  6E06               	movwf	6,c
  1647   00245A  0E04               	movlw	4
  1648   00245C  6E05               	movwf	5,c
  1649   00245E  EF02  F012         	goto	l1238
  1650   002462                     l109:
  1651   002462                     l1252:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;calcmain.c: 146:         PORTBbits.RB3 = 0;
  1655   002462  96CB               	bcf	203,3,c	;volatile
  1656   002464                     
  1657                           ; BSR set to: 0
  1658                           ;calcmain.c: 148:         PORTBbits.RB0 = 1;
  1659   002464  80CB               	bsf	203,0,c	;volatile
  1660   002466                     
  1661                           ; BSR set to: 0
  1662                           ;calcmain.c: 149:         if (PORTBbits.RB7 == 1) d = d+ 1, b = b +1;
  1663   002466  AECB               	btfss	203,7,c	;volatile
  1664   002468  EF38  F012         	goto	u601
  1665   00246C  EF3A  F012         	goto	u600
  1666   002470                     u601:
  1667   002470  EF46  F012         	goto	l1260
  1668   002474                     u600:
  1669   002474                     
  1670                           ; BSR set to: 0
  1671   002474  0E01               	movlw	1
  1672   002476  2560               	addwf	_d& (0+255),w,b
  1673   002478  6F60               	movwf	_d& (0+255),b
  1674   00247A  0E00               	movlw	0
  1675   00247C  2161               	addwfc	(_d+1)& (0+255),w,b
  1676   00247E  6F61               	movwf	(_d+1)& (0+255),b
  1677   002480  0E01               	movlw	1
  1678   002482  2564               	addwf	_b& (0+255),w,b
  1679   002484  6F64               	movwf	_b& (0+255),b
  1680   002486  0E00               	movlw	0
  1681   002488  2165               	addwfc	(_b+1)& (0+255),w,b
  1682   00248A  6F65               	movwf	(_b+1)& (0+255),b
  1683   00248C                     l1260:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;calcmain.c: 150:         PORTBbits.RB0 = 0;
  1687   00248C  90CB               	bcf	203,0,c	;volatile
  1688   00248E                     l104:
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;calcmain.c: 140:     while (b<1) {
  1692   00248E  BF65               	btfsc	(_b+1)& (0+255),7,b
  1693   002490  EF52  F012         	goto	u611
  1694   002494  5165               	movf	(_b+1)& (0+255),w,b
  1695   002496  E108               	bnz	u610
  1696   002498  0564               	decf	_b& (0+255),w,b
  1697   00249A  A0D8               	btfss	status,0,c
  1698   00249C  EF52  F012         	goto	u611
  1699   0024A0  EF54  F012         	goto	u610
  1700   0024A4                     u611:
  1701   0024A4  EFF6  F011         	goto	l105
  1702   0024A8                     u610:
  1703   0024A8                     
  1704                           ; BSR set to: 0
  1705   0024A8  0012               	return		;funcret
  1706   0024AA                     __end_of_op:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _initialize *****************
  1710 ;; Defined at:
  1711 ;;		line 76 in file "calcmain.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 1
  1732 ;; This function calls:
  1733 ;;		_setupB
  1734 ;;		_setupD
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text4
  1741   00256C                     __ptext4:
  1742                           	callstack 0
  1743   00256C                     _initialize:
  1744                           	callstack 29
  1745   00256C                     
  1746                           ;calcmain.c: 77:     x_reg = 0;
  1747   00256C  0E00               	movlw	0
  1748   00256E  6E02               	movwf	2,c
  1749   002570  0E00               	movlw	0
  1750   002572  6E01               	movwf	1,c
  1751                           
  1752                           ;calcmain.c: 78:     y_reg = 0;
  1753   002574  0E00               	movlw	0
  1754   002576  6E04               	movwf	4,c
  1755   002578  0E00               	movlw	0
  1756   00257A  6E03               	movwf	3,c
  1757   00257C                     
  1758                           ;calcmain.c: 79:     button = 0;
  1759   00257C  0100               	movlb	0	; () banked
  1760   00257E  6B68               	clrf	_button& (0+255),b
  1761                           
  1762                           ;calcmain.c: 80:     op_reg = 0;
  1763   002580  0E00               	movlw	0
  1764   002582  6E06               	movwf	6,c
  1765   002584  0E00               	movlw	0
  1766   002586  6E05               	movwf	5,c
  1767   002588                     
  1768                           ; BSR set to: 0
  1769                           ;calcmain.c: 81:     display_reg = 0;
  1770   002588  6A07               	clrf	7,c
  1771   00258A                     
  1772                           ; BSR set to: 0
  1773                           ;calcmain.c: 82:     setupB();
  1774   00258A  ECE5  F012         	call	_setupB	;wreg free
  1775                           
  1776                           ;calcmain.c: 83:     setupD();
  1777   00258E  ECEC  F012         	call	_setupD	;wreg free
  1778   002592                     
  1779                           ;calcmain.c: 84:     a = 0;
  1780   002592  0E00               	movlw	0
  1781   002594  0100               	movlb	0	; () banked
  1782   002596  6F67               	movwf	(_a+1)& (0+255),b
  1783   002598  0E00               	movlw	0
  1784   00259A  6F66               	movwf	_a& (0+255),b
  1785   00259C                     
  1786                           ; BSR set to: 0
  1787                           ;calcmain.c: 85:     b = 0;
  1788   00259C  0E00               	movlw	0
  1789   00259E  6F65               	movwf	(_b+1)& (0+255),b
  1790   0025A0  0E00               	movlw	0
  1791   0025A2  6F64               	movwf	_b& (0+255),b
  1792   0025A4                     
  1793                           ; BSR set to: 0
  1794                           ;calcmain.c: 86:     c = 0;
  1795   0025A4  0E00               	movlw	0
  1796   0025A6  6F63               	movwf	(_c+1)& (0+255),b
  1797   0025A8  0E00               	movlw	0
  1798   0025AA  6F62               	movwf	_c& (0+255),b
  1799   0025AC                     
  1800                           ; BSR set to: 0
  1801                           ;calcmain.c: 87:     d = 0;
  1802   0025AC  0E00               	movlw	0
  1803   0025AE  6F61               	movwf	(_d+1)& (0+255),b
  1804   0025B0  0E00               	movlw	0
  1805   0025B2  6F60               	movwf	_d& (0+255),b
  1806   0025B4                     
  1807                           ; BSR set to: 0
  1808                           ;calcmain.c: 88:     button = 0;
  1809   0025B4  6B68               	clrf	_button& (0+255),b
  1810   0025B6                     
  1811                           ; BSR set to: 0
  1812   0025B6  0012               	return		;funcret
  1813   0025B8                     __end_of_initialize:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function _setupD *****************
  1817 ;; Defined at:
  1818 ;;		line 101 in file "calcmain.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		None
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_initialize
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text5
  1846   0025D8                     __ptext5:
  1847                           	callstack 0
  1848   0025D8                     _setupD:
  1849                           	callstack 29
  1850   0025D8                     
  1851                           ;calcmain.c: 102:     PORTD = 0x00;
  1852   0025D8  6ACD               	clrf	205,c	;volatile
  1853                           
  1854                           ;calcmain.c: 103:     TRISD = 0x00;
  1855   0025DA  6AC5               	clrf	197,c	;volatile
  1856                           
  1857                           ;calcmain.c: 104:     LATD = 0x00;
  1858   0025DC  6ABD               	clrf	189,c	;volatile
  1859                           
  1860                           ;calcmain.c: 105:     ANSELD = 0x00;
  1861   0025DE  013A               	movlb	58	; () banked
  1862   0025E0  6B70               	clrf	112,b	;volatile
  1863   0025E2                     
  1864                           ; BSR set to: 58
  1865   0025E2  0012               	return		;funcret
  1866   0025E4                     __end_of_setupD:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _setupB *****************
  1870 ;; Defined at:
  1871 ;;		line 94 in file "calcmain.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_initialize
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text6
  1899   0025CA                     __ptext6:
  1900                           	callstack 0
  1901   0025CA                     _setupB:
  1902                           	callstack 29
  1903   0025CA                     
  1904                           ;calcmain.c: 95:     PORTB = 0x00;
  1905   0025CA  6ACB               	clrf	203,c	;volatile
  1906   0025CC                     
  1907                           ;calcmain.c: 96:     TRISB = 0b11110000;
  1908   0025CC  0EF0               	movlw	240
  1909   0025CE  6EC3               	movwf	195,c	;volatile
  1910   0025D0                     
  1911                           ;calcmain.c: 97:     LATB = 0x00;
  1912   0025D0  6ABB               	clrf	187,c	;volatile
  1913   0025D2                     
  1914                           ;calcmain.c: 98:     ANSELB = 0x00;
  1915   0025D2  013A               	movlb	58	; () banked
  1916   0025D4  6B50               	clrf	80,b	;volatile
  1917   0025D6                     
  1918                           ; BSR set to: 58
  1919   0025D6  0012               	return		;funcret
  1920   0025D8                     __end_of_setupB:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _check_keypad *****************
  1924 ;; Defined at:
  1925 ;;		line 110 in file "calcmain.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text7
  1953   002002                     __ptext7:
  1954                           	callstack 0
  1955   002002                     _check_keypad:
  1956                           	callstack 30
  1957   002002                     
  1958                           ;calcmain.c: 111:     a = 0;
  1959   002002  0E00               	movlw	0
  1960   002004  0100               	movlb	0	; () banked
  1961   002006  6F67               	movwf	(_a+1)& (0+255),b
  1962   002008  0E00               	movlw	0
  1963   00200A  6F66               	movwf	_a& (0+255),b
  1964   00200C                     
  1965                           ; BSR set to: 0
  1966                           ;calcmain.c: 112:     button = 0;
  1967   00200C  6B68               	clrf	_button& (0+255),b
  1968                           
  1969                           ;calcmain.c: 113:     while (a<1) {
  1970   00200E  EFB6  F010         	goto	l1232
  1971   002012                     l80:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;calcmain.c: 114:         PORTBbits.RB0 = 1;
  1975   002012  80CB               	bsf	203,0,c	;volatile
  1976                           
  1977                           ;calcmain.c: 115:         if (PORTBbits.RB4 == 1) button = 1, a = a+1, _delay((unsigned 
      +                          long)((1)*(4000000/4000.0)));
  1978   002014  A8CB               	btfss	203,4,c	;volatile
  1979   002016  EF0F  F010         	goto	u441
  1980   00201A  EF11  F010         	goto	u440
  1981   00201E                     u441:
  1982   00201E  EF1F  F010         	goto	l81
  1983   002022                     u440:
  1984   002022                     
  1985                           ; BSR set to: 0
  1986   002022  0E01               	movlw	1
  1987   002024  6F68               	movwf	_button& (0+255),b
  1988   002026                     l1156:
  1989                           
  1990                           ; BSR set to: 0
  1991   002026  0E01               	movlw	1
  1992   002028  2566               	addwf	_a& (0+255),w,b
  1993   00202A  6F66               	movwf	_a& (0+255),b
  1994   00202C  0E00               	movlw	0
  1995   00202E  2167               	addwfc	(_a+1)& (0+255),w,b
  1996   002030  6F67               	movwf	(_a+1)& (0+255),b
  1997   002032                     l1158:
  1998                           
  1999                           ; BSR set to: 0
  2000   002032  0EC8               	movlw	200
  2001   002034                     u787:
  2002   002034  D000               	nop2	
  2003   002036  2EE8               	decfsz	wreg,f,c
  2004   002038  D7FD               	bra	u787
  2005   00203A  EF4A  F010         	goto	l1176
  2006   00203E                     l81:
  2007                           
  2008                           ; BSR set to: 0
  2009   00203E  AACB               	btfss	203,5,c	;volatile
  2010   002040  EF24  F010         	goto	u451
  2011   002044  EF26  F010         	goto	u450
  2012   002048                     u451:
  2013   002048  EF2A  F010         	goto	l83
  2014   00204C                     u450:
  2015   00204C                     
  2016                           ; BSR set to: 0
  2017   00204C  0E04               	movlw	4
  2018   00204E  6F68               	movwf	_button& (0+255),b
  2019   002050  EF13  F010         	goto	l1156
  2020   002054                     l83:
  2021                           
  2022                           ; BSR set to: 0
  2023   002054  ACCB               	btfss	203,6,c	;volatile
  2024   002056  EF2F  F010         	goto	u461
  2025   00205A  EF31  F010         	goto	u460
  2026   00205E                     u461:
  2027   00205E  EF35  F010         	goto	l85
  2028   002062                     u460:
  2029   002062                     
  2030                           ; BSR set to: 0
  2031   002062  0E07               	movlw	7
  2032   002064  6F68               	movwf	_button& (0+255),b
  2033   002066  EF13  F010         	goto	l1156
  2034   00206A                     l85:
  2035                           
  2036                           ; BSR set to: 0
  2037   00206A  AECB               	btfss	203,7,c	;volatile
  2038   00206C  EF3A  F010         	goto	u471
  2039   002070  EF3C  F010         	goto	u470
  2040   002074                     u471:
  2041   002074  EF4A  F010         	goto	l84
  2042   002078                     u470:
  2043   002078                     
  2044                           ; BSR set to: 0
  2045   002078  0E01               	movlw	1
  2046   00207A  2560               	addwf	_d& (0+255),w,b
  2047   00207C  6F60               	movwf	_d& (0+255),b
  2048   00207E  0E00               	movlw	0
  2049   002080  2161               	addwfc	(_d+1)& (0+255),w,b
  2050   002082  6F61               	movwf	(_d+1)& (0+255),b
  2051   002084  0E01               	movlw	1
  2052   002086  2566               	addwf	_a& (0+255),w,b
  2053   002088  6F66               	movwf	_a& (0+255),b
  2054   00208A  0E00               	movlw	0
  2055   00208C  2167               	addwfc	(_a+1)& (0+255),w,b
  2056   00208E  6F67               	movwf	(_a+1)& (0+255),b
  2057   002090  EF19  F010         	goto	l1158
  2058   002094                     l84:
  2059   002094                     l1176:
  2060                           
  2061                           ;calcmain.c: 119:         PORTBbits.RB0 = 0;
  2062   002094  90CB               	bcf	203,0,c	;volatile
  2063   002096                     
  2064                           ;calcmain.c: 121:         PORTBbits.RB1 = 1;
  2065   002096  82CB               	bsf	203,1,c	;volatile
  2066   002098                     
  2067                           ;calcmain.c: 122:         if (PORTBbits.RB4 == 1) button = 2, a = a+1, _delay((unsigned 
      +                          long)((1)*(4000000/4000.0)));
  2068   002098  A8CB               	btfss	203,4,c	;volatile
  2069   00209A  EF51  F010         	goto	u481
  2070   00209E  EF53  F010         	goto	u480
  2071   0020A2                     u481:
  2072   0020A2  EF62  F010         	goto	l88
  2073   0020A6                     u480:
  2074   0020A6  0E02               	movlw	2
  2075   0020A8  0100               	movlb	0	; () banked
  2076   0020AA  6F68               	movwf	_button& (0+255),b
  2077   0020AC                     l1184:
  2078                           
  2079                           ; BSR set to: 0
  2080   0020AC  0E01               	movlw	1
  2081   0020AE  2566               	addwf	_a& (0+255),w,b
  2082   0020B0  6F66               	movwf	_a& (0+255),b
  2083   0020B2  0E00               	movlw	0
  2084   0020B4  2167               	addwfc	(_a+1)& (0+255),w,b
  2085   0020B6  6F67               	movwf	(_a+1)& (0+255),b
  2086   0020B8                     
  2087                           ; BSR set to: 0
  2088   0020B8  0EC8               	movlw	200
  2089   0020BA                     u797:
  2090   0020BA  D000               	nop2	
  2091   0020BC  2EE8               	decfsz	wreg,f,c
  2092   0020BE  D7FD               	bra	u797
  2093   0020C0  EF85  F010         	goto	l1206
  2094   0020C4                     l88:
  2095   0020C4  AACB               	btfss	203,5,c	;volatile
  2096   0020C6  EF67  F010         	goto	u491
  2097   0020CA  EF69  F010         	goto	u490
  2098   0020CE                     u491:
  2099   0020CE  EF6E  F010         	goto	l90
  2100   0020D2                     u490:
  2101   0020D2  0E05               	movlw	5
  2102   0020D4  0100               	movlb	0	; () banked
  2103   0020D6  6F68               	movwf	_button& (0+255),b
  2104   0020D8  EF56  F010         	goto	l1184
  2105   0020DC                     l90:
  2106   0020DC  ACCB               	btfss	203,6,c	;volatile
  2107   0020DE  EF73  F010         	goto	u501
  2108   0020E2  EF75  F010         	goto	u500
  2109   0020E6                     u501:
  2110   0020E6  EF7A  F010         	goto	l92
  2111   0020EA                     u500:
  2112   0020EA  0E08               	movlw	8
  2113   0020EC  0100               	movlb	0	; () banked
  2114   0020EE  6F68               	movwf	_button& (0+255),b
  2115   0020F0  EF56  F010         	goto	l1184
  2116   0020F4                     l92:
  2117   0020F4  AECB               	btfss	203,7,c	;volatile
  2118   0020F6  EF7F  F010         	goto	u511
  2119   0020FA  EF81  F010         	goto	u510
  2120   0020FE                     u511:
  2121   0020FE  EF85  F010         	goto	l91
  2122   002102                     u510:
  2123   002102  0100               	movlb	0	; () banked
  2124   002104  6B68               	clrf	_button& (0+255),b
  2125   002106  EF56  F010         	goto	l1184
  2126   00210A                     l91:
  2127   00210A                     l1206:
  2128                           
  2129                           ;calcmain.c: 126:         PORTBbits.RB1 = 0;
  2130   00210A  92CB               	bcf	203,1,c	;volatile
  2131   00210C                     
  2132                           ;calcmain.c: 128:         PORTBbits.RB2 = 1;
  2133   00210C  84CB               	bsf	203,2,c	;volatile
  2134   00210E                     
  2135                           ;calcmain.c: 129:         if (PORTBbits.RB4 == 1) button = 3, a = a+1, _delay((unsigned 
      +                          long)((1)*(4000000/4000.0)));
  2136   00210E  A8CB               	btfss	203,4,c	;volatile
  2137   002110  EF8C  F010         	goto	u521
  2138   002114  EF8E  F010         	goto	u520
  2139   002118                     u521:
  2140   002118  EF9D  F010         	goto	l95
  2141   00211C                     u520:
  2142   00211C  0E03               	movlw	3
  2143   00211E  0100               	movlb	0	; () banked
  2144   002120  6F68               	movwf	_button& (0+255),b
  2145   002122                     l1214:
  2146                           
  2147                           ; BSR set to: 0
  2148   002122  0E01               	movlw	1
  2149   002124  2566               	addwf	_a& (0+255),w,b
  2150   002126  6F66               	movwf	_a& (0+255),b
  2151   002128  0E00               	movlw	0
  2152   00212A  2167               	addwfc	(_a+1)& (0+255),w,b
  2153   00212C  6F67               	movwf	(_a+1)& (0+255),b
  2154   00212E                     
  2155                           ; BSR set to: 0
  2156   00212E  0EC8               	movlw	200
  2157   002130                     u807:
  2158   002130  D000               	nop2	
  2159   002132  2EE8               	decfsz	wreg,f,c
  2160   002134  D7FD               	bra	u807
  2161   002136  EFB5  F010         	goto	l1230
  2162   00213A                     l95:
  2163   00213A  AACB               	btfss	203,5,c	;volatile
  2164   00213C  EFA2  F010         	goto	u531
  2165   002140  EFA4  F010         	goto	u530
  2166   002144                     u531:
  2167   002144  EFA9  F010         	goto	l97
  2168   002148                     u530:
  2169   002148  0E06               	movlw	6
  2170   00214A  0100               	movlb	0	; () banked
  2171   00214C  6F68               	movwf	_button& (0+255),b
  2172   00214E  EF91  F010         	goto	l1214
  2173   002152                     l97:
  2174   002152  ACCB               	btfss	203,6,c	;volatile
  2175   002154  EFAE  F010         	goto	u541
  2176   002158  EFB0  F010         	goto	u540
  2177   00215C                     u541:
  2178   00215C  EFB5  F010         	goto	l1230
  2179   002160                     u540:
  2180   002160  0E09               	movlw	9
  2181   002162  0100               	movlb	0	; () banked
  2182   002164  6F68               	movwf	_button& (0+255),b
  2183   002166  EF91  F010         	goto	l1214
  2184   00216A                     l1230:
  2185                           
  2186                           ;calcmain.c: 132:         PORTBbits.RB2 = 0;
  2187   00216A  94CB               	bcf	203,2,c	;volatile
  2188   00216C                     l1232:
  2189                           
  2190                           ;calcmain.c: 113:     while (a<1) {
  2191   00216C  0100               	movlb	0	; () banked
  2192   00216E  BF67               	btfsc	(_a+1)& (0+255),7,b
  2193   002170  EFC2  F010         	goto	u551
  2194   002174  5167               	movf	(_a+1)& (0+255),w,b
  2195   002176  E108               	bnz	u550
  2196   002178  0566               	decf	_a& (0+255),w,b
  2197   00217A  A0D8               	btfss	status,0,c
  2198   00217C  EFC2  F010         	goto	u551
  2199   002180  EFC4  F010         	goto	u550
  2200   002184                     u551:
  2201   002184  EF09  F010         	goto	l80
  2202   002188                     u550:
  2203   002188                     
  2204                           ; BSR set to: 0
  2205   002188  0012               	return		;funcret
  2206   00218A                     __end_of_check_keypad:
  2207                           	callstack 0
  2208                           
  2209                           	psect	smallconst
  2210   002000                     __psmallconst:
  2211                           	callstack 0
  2212   002000  00                 	db	0
  2213   002001  00                 	db	0	; dummy byte at the end
  2214   002000                     __smallconst    set	__psmallconst
  2215   002000                     __mediumconst   set	__psmallconst
  2216   000000                     __activetblptr  equ	0
  2217                           
  2218                           	psect	rparam
  2219   000001                     ___rparam_used  equ	1
  2220   000000                     ___param_bank   equ	0
  2221   000000                     __Lparam        equ	__Lrparam
  2222   000000                     __Hparam        equ	__Hrparam
  2223                           
  2224                           	psect	config
  2225                           
  2226                           ;Config register CONFIG1L @ 0x300000
  2227                           ;	External Oscillator Selection
  2228                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2229                           ;	Reset Oscillator Selection
  2230                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2231   300000                     	org	3145728
  2232   300000  F8                 	db	248
  2233                           
  2234                           ;Config register CONFIG1H @ 0x300001
  2235                           ;	Clock out Enable bit
  2236                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2237                           ;	PRLOCKED One-Way Set Enable bit
  2238                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2239                           ;	Clock Switch Enable bit
  2240                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2241                           ;	Fail-Safe Clock Monitor Enable bit
  2242                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2243   300001                     	org	3145729
  2244   300001  FF                 	db	255
  2245                           
  2246                           ;Config register CONFIG2L @ 0x300002
  2247                           ;	MCLR Enable bit
  2248                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2249                           ;	Power-up timer selection bits
  2250                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2251                           ;	Multi-vector enable bit
  2252                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2253                           ;	IVTLOCK bit One-way set enable bit
  2254                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2255                           ;	Low Power BOR Enable bit
  2256                           ;	LPBOREN = OFF, ULPBOR disabled
  2257                           ;	Brown-out Reset Enable bits
  2258                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2259   300002                     	org	3145730
  2260   300002  FF                 	db	255
  2261                           
  2262                           ;Config register CONFIG2H @ 0x300003
  2263                           ;	Brown-out Reset Voltage Selection bits
  2264                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2265                           ;	ZCD Disable bit
  2266                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2267                           ;	PPSLOCK bit One-Way Set Enable bit
  2268                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2269                           ;	Stack Full/Underflow Reset Enable bit
  2270                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2271                           ;	Debugger Enable bit
  2272                           ;	DEBUG = OFF, Background debugger disabled
  2273                           ;	Extended Instruction Set Enable bit
  2274                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2275   300003                     	org	3145731
  2276   300003  FF                 	db	255
  2277                           
  2278                           ;Config register CONFIG3L @ 0x300004
  2279                           ;	WDT Period selection bits
  2280                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2281                           ;	WDT operating mode
  2282                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2283   300004                     	org	3145732
  2284   300004  9F                 	db	159
  2285                           
  2286                           ;Config register CONFIG3H @ 0x300005
  2287                           ;	WDT Window Select bits
  2288                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2289                           ;	WDT input clock selector
  2290                           ;	WDTCCS = SC, Software Control
  2291   300005                     	org	3145733
  2292   300005  FF                 	db	255
  2293                           
  2294                           ;Config register CONFIG4L @ 0x300006
  2295                           ;	Boot Block Size selection bits
  2296                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2297                           ;	Boot Block enable bit
  2298                           ;	BBEN = OFF, Boot block disabled
  2299                           ;	Storage Area Flash enable bit
  2300                           ;	SAFEN = OFF, SAF disabled
  2301                           ;	Application Block write protection bit
  2302                           ;	WRTAPP = OFF, Application Block not write protected
  2303   300006                     	org	3145734
  2304   300006  FF                 	db	255
  2305                           
  2306                           ;Config register CONFIG4H @ 0x300007
  2307                           ;	Boot Block Write Protection bit
  2308                           ;	WRTB = OFF, Boot Block not write-protected
  2309                           ;	Configuration Register Write Protection bit
  2310                           ;	WRTC = OFF, Configuration registers not write-protected
  2311                           ;	Data EEPROM Write Protection bit
  2312                           ;	WRTD = OFF, Data EEPROM not write-protected
  2313                           ;	SAF Write protection bit
  2314                           ;	WRTSAF = OFF, SAF not Write Protected
  2315                           ;	Low Voltage Programming Enable bit
  2316                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2317   300007                     	org	3145735
  2318   300007  FF                 	db	255
  2319                           
  2320                           ;Config register CONFIG5L @ 0x300008
  2321                           ;	PFM and Data EEPROM Code Protection bit
  2322                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2323   300008                     	org	3145736
  2324   300008  FF                 	db	255
  2325                           
  2326                           ;Config register CONFIG5H @ 0x300009
  2327                           ;	unspecified, using default values
  2328   300009                     	org	3145737
  2329   300009  FF                 	db	255
  2330                           tosu	equ	0x3FFF
  2331                           tosh	equ	0x3FFE
  2332                           tosl	equ	0x3FFD
  2333                           stkptr	equ	0x3FFC
  2334                           pclatu	equ	0x3FFB
  2335                           pclath	equ	0x3FFA
  2336                           pcl	equ	0x3FF9
  2337                           tblptru	equ	0x3FF8
  2338                           tblptrh	equ	0x3FF7
  2339                           tblptrl	equ	0x3FF6
  2340                           tablat	equ	0x3FF5
  2341                           prodh	equ	0x3FF4
  2342                           prodl	equ	0x3FF3
  2343                           indf0	equ	0x3FEF
  2344                           postinc0	equ	0x3FEE
  2345                           postdec0	equ	0x3FED
  2346                           preinc0	equ	0x3FEC
  2347                           plusw0	equ	0x3FEB
  2348                           fsr0h	equ	0x3FEA
  2349                           fsr0l	equ	0x3FE9
  2350                           wreg	equ	0x3FE8
  2351                           indf1	equ	0x3FE7
  2352                           postinc1	equ	0x3FE6
  2353                           postdec1	equ	0x3FE5
  2354                           preinc1	equ	0x3FE4
  2355                           plusw1	equ	0x3FE3
  2356                           fsr1h	equ	0x3FE2
  2357                           fsr1l	equ	0x3FE1
  2358                           bsr	equ	0x3FE0
  2359                           indf2	equ	0x3FDF
  2360                           postinc2	equ	0x3FDE
  2361                           postdec2	equ	0x3FDD
  2362                           preinc2	equ	0x3FDC
  2363                           plusw2	equ	0x3FDB
  2364                           fsr2h	equ	0x3FDA
  2365                           fsr2l	equ	0x3FD9
  2366                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          88     10      10
    BANK0           160      0       9
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAMh

    _solve->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     302
                                              8 COMRAMh    2     2      0
                       _check_keypad
                         _initialize
                                 _op
                              _solve
 ---------------------------------------------------------------------------------
 (1) _solve                                                0     0      0     302
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAMh    8     4      4
 ---------------------------------------------------------------------------------
 (1) _op                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                             _setupB
                             _setupD
 ---------------------------------------------------------------------------------
 (2) _setupD                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupB                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_keypad                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_keypad
   _initialize
     _setupB
     _setupD
   _op
   _solve
     ___awdiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAMh           8184      0       0      0.0%
BITBIGSFRllh      1386      0       0      0.0%
BITBIGSFRlll       592      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       9      5.6%
COMRAMh             88     10      10     11.4%
BITCOMRAMh          88      0       0      0.0%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      19      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 07 15:30:14 2025

                      _a 0066                        _b 0064                        _c 0062  
                      _d 0060                       l70 25B6                       l80 2012  
                     l64 22B8                       l81 203E                       l73 25D6  
                     l57 218A                       l90 20DC                       l91 210A  
                     l83 2054                       l92 20F4                       l84 2094  
                     l76 25E2                       l85 206A                       l95 213A  
                     l88 20C4                       l97 2152             ___awdiv@sign 000D  
                     _op 23DE                      l101 2188                      l110 2448  
                    l104 248E                      l105 23EC                      l106 2414  
                    l130 23DC                      l115 24A8                      l108 242E  
                    l109 2462                      l126 23DC                      l118 2336  
                    l119 22EE                      ?_op 0000                      l364 256A  
                    u400 24FA                      u401 24F6                      u410 2518  
                    u411 2514                      u500 20EA                      u420 2534  
                    u501 20E6                      u421 2530                      u510 2102  
                    u430 255A                      u511 20FE                      u431 2556  
                    u520 211C                      u440 2022                      u600 2474  
                    u521 2118                      u441 201E                      u601 2470  
                    u530 2148                      u450 204C                      u610 24A8  
                    u531 2144                      u451 2048                      u611 24A4  
                    u540 2160                      u460 2062                      u380 24BA  
                    u620 22FE                      u700 21F4                      u541 215C  
                    u461 205E                      u381 24B6                      u621 22FA  
                    u701 21F0                      u550 2188                      u470 2078  
                    u390 24D4                      u630 231C                      u710 221E  
   __end_of_check_keypad 218A                      u551 2184                      u471 2074  
                    u391 24D0                      u631 2318                      u711 221A  
                    u480 20A6                      u560 23FC                      u640 2350  
                    u720 223A                      u481 20A2                      u561 23F8  
                    u641 234C                      u721 2236                      u490 20D2  
                    u570 2422                      u650 2362                      u730 2288  
                    u491 20CE                      u571 241E                      u651 235E  
                    u731 2284                      u580 243C                      u660 2380  
                    u740 22B4                      u581 2438                      u661 237C  
                    u741 22B0                      u590 2456                      u670 239E  
                    u807 2130                      u591 2452                      u671 239A  
                    u680 23C0                      u681 23BC                      u690 21A6  
                    u691 21A2                      u757 21D0                      u767 2264  
                    u777 22CA                      u787 2034                      u797 20BA  
                    wreg 3FE8                     ??_op 0008                     l1100 24DC  
                   l1110 250A                     l1102 24E0                     l1200 2102  
                   l1120 253E                     l1112 2518                     l1104 24E8  
                   l1210 210E                     l1122 2544                     l1114 251E  
                   l1106 24FA                     l1212 211C                     l1140 2592  
                   l1132 256C                     l1116 2534                     l1108 2502  
                   l1124 254A                     l1300 21AA                     l1230 216A  
                   l1214 2122                     l1206 210A                     l1150 2002  
                   l1142 259C                     l1134 257C                     l1126 255A  
                   l1118 253C                     l1310 21F8                     l1302 21C6  
                   l1224 2160                     l1216 212E                     l1208 210C  
                   l1160 204C                     l1232 216C                     l1152 200C  
                   l1080 25CC                     l1144 25A4                     l1136 2588  
                   l1240 2422                     l1128 2562                     l1320 2222  
                   l1312 2204                     l1304 21DC                     l1218 2148  
                   l1154 2022                     l1082 25D0                     l1146 25AC  
                   l1138 258A                     l1234 23DE                     l1090 24AC  
                   l1330 2270                     l1322 2226                     l1314 2206  
                   l1306 21E0                     l1180 2098                     l1172 2078  
                   l1156 2026                     l1084 25D2                     l1148 25B4  
                   l1260 248C                     l1244 243C                     l1252 2462  
                   l1236 23FC                     l1092 24BA                     l1340 229A  
                   l1332 2274                     l1316 220A                     l1182 20A6  
                   l1166 2062                     l1158 2032                     l1078 25CA  
                   l1086 25D8                     l1254 2464                     l1238 2404  
                   l1094 24C2                     l1270 230E                     l1262 22E0  
                   l1342 229C                     l1326 223E                     l1184 20AC  
                   l1176 2094                     l1256 2466                     l1248 2456  
                   l1096 24C6                     l1088 24AA                     l1280 236C  
                   l1272 231C                     l1264 22FE                     l1344 22A0  
                   l1336 228C                     l1328 225A                     l1194 20EA  
                   l1186 20B8                     l1178 2096                     l1258 2474  
                   l1098 24D4                     l1290 23C0                     l1282 2380  
                   l1274 2334                     l1266 230A                     l1338 2298  
                   l1188 20D2                     l1284 238A                     l1276 2350  
                   l1268 230C                     l1348 22C0                     l1292 218A  
                   l1286 239E                     l1278 2362                     l1294 218E  
                   l1288 23AC                     l1296 2192                     _LATB 3FBB  
                   _LATD 3FBD                     _main 218A                     prodh 3FF4  
                   prodl 3FF3                     start FFFC             ___param_bank 0000  
                  ?_main 0008          __end_of___awdiv 256C          ___awdiv@divisor 000A  
        ___awdiv@counter 000C                    _PORTB 3FCB                    _PORTD 3FCD  
                  _TRISB 3FC3                    _TRISD 3FC5                    _x_reg 0001  
                  _y_reg 0003                    _solve 22E0                    status 3FD8  
        __initialization 25B8             __end_of_main 22E0                   ??_main 0010  
          __activetblptr 0000         ___awdiv@dividend 0008                   _ANSELB 3A50  
                 _ANSELD 3A70                   ?_solve 0000                ??___awdiv 000C  
                 _button 0068                   clear_0 25BE         ___awdiv@quotient 000E  
                 _op_reg 0005                   isa$std 0001                   _setupB 25CA  
                 _setupD 25D8             __mediumconst 2000               __accesstop 0060  
__end_of__initialization 25C4            ___rparam_used 0001             _check_keypad 2002  
          __end_of_solve 23DE               __end_of_op 24AA                  ??_solve 0010  
             __pbssBANK0 0060                  ?_setupB 0000                  ?_setupD 0000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 24AA  
           __psmallconst 2000                  __pcinit 25B8                  __ramtop 2000  
             _initialize 256C                  __ptext0 218A                  __ptext1 22E0  
                __ptext2 24AA                  __ptext3 23DE                  __ptext4 256C  
                __ptext5 25D8                  __ptext6 25CA                  __ptext7 2002  
   end_of_initialization 25C4                  postinc0 3FEE                _PORTBbits 3FCB  
              _PORTDbits 3FCD          __pcstackCOMRAMh 0008          __pcstackCOMRAMl 0000  
            ?_initialize 0000           __end_of_setupB 25D8           __end_of_setupD 25E4  
    start_initialization 25B8                 ??_setupB 0008                 ??_setupD 0008  
               ?___awdiv 0008              __smallconst 2000              _display_reg 0007  
          ?_check_keypad 0000                 __Hrparam 0000                 __Lrparam 0000  
           ??_initialize 0008           ??_check_keypad 0008       __end_of_initialize 25B8  
               isa$xinst 0000  
