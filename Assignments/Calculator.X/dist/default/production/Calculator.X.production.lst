

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Apr 06 22:26:23 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21                           	dabs	1,0x5,2,_op_reg
    22                           	dabs	1,0x3,2,_y_reg
    23                           	dabs	1,0x1,2,_x_reg
    24                           	dabs	1,0x7,1,_display_reg
    25   000000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F47K42 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   003FE0                     bsr             equ	16352
    61   003FE9                     fsr0            equ	16361
    62   003FEA                     fsr0h           equ	16362
    63   003FE9                     fsr0l           equ	16361
    64   003FE1                     fsr1            equ	16353
    65   003FE2                     fsr1h           equ	16354
    66   003FE1                     fsr1l           equ	16353
    67   003FD9                     fsr2            equ	16345
    68   003FDA                     fsr2h           equ	16346
    69   003FD9                     fsr2l           equ	16345
    70   003FEF                     indf0           equ	16367
    71   003FE7                     indf1           equ	16359
    72   003FDF                     indf2           equ	16351
    73   003FD2                     intcon          equ	16338
    74   0039E5                     nvmcon          equ	14821
    75   003FF9                     pcl             equ	16377
    76   003FFA                     pclath          equ	16378
    77   003FFB                     pclatu          equ	16379
    78   003FEB                     plusw0          equ	16363
    79   003FE3                     plusw1          equ	16355
    80   003FDB                     plusw2          equ	16347
    81   003FED                     postdec0        equ	16365
    82   003FE5                     postdec1        equ	16357
    83   003FDD                     postdec2        equ	16349
    84   003FEE                     postinc0        equ	16366
    85   003FE6                     postinc1        equ	16358
    86   003FDE                     postinc2        equ	16350
    87   003FEC                     preinc0         equ	16364
    88   003FE4                     preinc1         equ	16356
    89   003FDC                     preinc2         equ	16348
    90   003FF3                     prod            equ	16371
    91   003FF4                     prodh           equ	16372
    92   003FF3                     prodl           equ	16371
    93   003FD8                     status          equ	16344
    94   003FF5                     tablat          equ	16373
    95   003FF6                     tblptr          equ	16374
    96   003FF7                     tblptrh         equ	16375
    97   003FF6                     tblptrl         equ	16374
    98   003FF8                     tblptru         equ	16376
    99   003FFD                     tosl            equ	16381
   100   003FE8                     wreg            equ	16360
   101   003880                     STATUS_CSHAD    equ	14464	;# 
   102   003881                     WREG_CSHAD      equ	14465	;# 
   103   003882                     BSR_CSHAD       equ	14466	;# 
   104   003883                     SHADCON         equ	14467	;# 
   105   003884                     STATUS_SHAD     equ	14468	;# 
   106   003885                     WREG_SHAD       equ	14469	;# 
   107   003886                     BSR_SHAD        equ	14470	;# 
   108   003887                     PCLATH_SHAD     equ	14471	;# 
   109   003888                     PCLATU_SHAD     equ	14472	;# 
   110   003889                     FSR0SH          equ	14473	;# 
   111   003889                     FSR0L_SHAD      equ	14473	;# 
   112   00388A                     FSR0H_SHAD      equ	14474	;# 
   113   00388B                     FSR1SH          equ	14475	;# 
   114   00388B                     FSR1L_SHAD      equ	14475	;# 
   115   00388C                     FSR1H_SHAD      equ	14476	;# 
   116   00388D                     FSR2SH          equ	14477	;# 
   117   00388D                     FSR2L_SHAD      equ	14477	;# 
   118   00388E                     FSR2H_SHAD      equ	14478	;# 
   119   00388F                     PRODSH          equ	14479	;# 
   120   00388F                     PRODL_SHAD      equ	14479	;# 
   121   003890                     PRODH_SHAD      equ	14480	;# 
   122   00389D                     IVTADL          equ	14493	;# 
   123   00389E                     IVTADH          equ	14494	;# 
   124   00389F                     IVTADU          equ	14495	;# 
   125   00395B                     WDTCON0         equ	14683	;# 
   126   00395C                     WDTCON1         equ	14684	;# 
   127   00395D                     WDTPSL          equ	14685	;# 
   128   00395E                     WDTPSH          equ	14686	;# 
   129   00395F                     WDTTMR          equ	14687	;# 
   130   003960                     CRCDATA         equ	14688	;# 
   131   003960                     CRCDATL         equ	14688	;# 
   132   003961                     CRCDATH         equ	14689	;# 
   133   003962                     CRCACC          equ	14690	;# 
   134   003962                     CRCACCL         equ	14690	;# 
   135   003963                     CRCACCH         equ	14691	;# 
   136   003964                     CRCSHFT         equ	14692	;# 
   137   003964                     CRCSHIFTL       equ	14692	;# 
   138   003965                     CRCSHIFTH       equ	14693	;# 
   139   003966                     CRCXOR          equ	14694	;# 
   140   003966                     CRCXORL         equ	14694	;# 
   141   003967                     CRCXORH         equ	14695	;# 
   142   003968                     CRCCON0         equ	14696	;# 
   143   003969                     CRCCON1         equ	14697	;# 
   144   003976                     SCANLADR        equ	14710	;# 
   145   003976                     SCANLADRL       equ	14710	;# 
   146   003977                     SCANLADRH       equ	14711	;# 
   147   003978                     SCANLADRU       equ	14712	;# 
   148   003979                     SCANHADR        equ	14713	;# 
   149   003979                     SCANHADRL       equ	14713	;# 
   150   00397A                     SCANHADRH       equ	14714	;# 
   151   00397B                     SCANHADRU       equ	14715	;# 
   152   00397C                     SCANCON0        equ	14716	;# 
   153   00397D                     SCANTRIG        equ	14717	;# 
   154   003980                     IPR0            equ	14720	;# 
   155   003981                     IPR1            equ	14721	;# 
   156   003982                     IPR2            equ	14722	;# 
   157   003983                     IPR3            equ	14723	;# 
   158   003984                     IPR4            equ	14724	;# 
   159   003985                     IPR5            equ	14725	;# 
   160   003986                     IPR6            equ	14726	;# 
   161   003987                     IPR7            equ	14727	;# 
   162   003988                     IPR8            equ	14728	;# 
   163   003989                     IPR9            equ	14729	;# 
   164   00398A                     IPR10           equ	14730	;# 
   165   003990                     PIE0            equ	14736	;# 
   166   003991                     PIE1            equ	14737	;# 
   167   003992                     PIE2            equ	14738	;# 
   168   003993                     PIE3            equ	14739	;# 
   169   003994                     PIE4            equ	14740	;# 
   170   003995                     PIE5            equ	14741	;# 
   171   003996                     PIE6            equ	14742	;# 
   172   003997                     PIE7            equ	14743	;# 
   173   003998                     PIE8            equ	14744	;# 
   174   003999                     PIE9            equ	14745	;# 
   175   00399A                     PIE10           equ	14746	;# 
   176   0039A0                     PIR0            equ	14752	;# 
   177   0039A1                     PIR1            equ	14753	;# 
   178   0039A2                     PIR2            equ	14754	;# 
   179   0039A3                     PIR3            equ	14755	;# 
   180   0039A4                     PIR4            equ	14756	;# 
   181   0039A5                     PIR5            equ	14757	;# 
   182   0039A6                     PIR6            equ	14758	;# 
   183   0039A7                     PIR7            equ	14759	;# 
   184   0039A8                     PIR8            equ	14760	;# 
   185   0039A9                     PIR9            equ	14761	;# 
   186   0039AA                     PIR10           equ	14762	;# 
   187   0039C0                     PMD0            equ	14784	;# 
   188   0039C1                     PMD1            equ	14785	;# 
   189   0039C2                     PMD2            equ	14786	;# 
   190   0039C3                     PMD3            equ	14787	;# 
   191   0039C4                     PMD4            equ	14788	;# 
   192   0039C5                     PMD5            equ	14789	;# 
   193   0039C6                     PMD6            equ	14790	;# 
   194   0039C7                     PMD7            equ	14791	;# 
   195   0039D0                     BORCON          equ	14800	;# 
   196   0039D1                     VREGCON         equ	14801	;# 
   197   0039D8                     CPUDOZE         equ	14808	;# 
   198   0039D9                     OSCCON1         equ	14809	;# 
   199   0039DA                     OSCCON2         equ	14810	;# 
   200   0039DB                     OSCCON3         equ	14811	;# 
   201   0039DC                     OSCSTAT         equ	14812	;# 
   202   0039DC                     OSCSTAT1        equ	14812	;# 
   203   0039DD                     OSCEN           equ	14813	;# 
   204   0039DE                     OSCTUNE         equ	14814	;# 
   205   0039DF                     OSCFRQ          equ	14815	;# 
   206   0039E0                     NVMADRL         equ	14816	;# 
   207   0039E1                     NVMADRH         equ	14817	;# 
   208   0039E3                     NVMDAT          equ	14819	;# 
   209   0039E5                     NVMCON1         equ	14821	;# 
   210   0039E6                     NVMCON2         equ	14822	;# 
   211   0039EF                     PRLOCK          equ	14831	;# 
   212   0039F1                     ISRPR           equ	14833	;# 
   213   0039F2                     MAINPR          equ	14834	;# 
   214   0039F3                     DMA1PR          equ	14835	;# 
   215   0039F4                     DMA2PR          equ	14836	;# 
   216   0039F7                     SCANPR          equ	14839	;# 
   217   003A00                     RA0PPS          equ	14848	;# 
   218   003A01                     RA1PPS          equ	14849	;# 
   219   003A02                     RA2PPS          equ	14850	;# 
   220   003A03                     RA3PPS          equ	14851	;# 
   221   003A04                     RA4PPS          equ	14852	;# 
   222   003A05                     RA5PPS          equ	14853	;# 
   223   003A06                     RA6PPS          equ	14854	;# 
   224   003A07                     RA7PPS          equ	14855	;# 
   225   003A08                     RB0PPS          equ	14856	;# 
   226   003A09                     RB1PPS          equ	14857	;# 
   227   003A0A                     RB2PPS          equ	14858	;# 
   228   003A0B                     RB3PPS          equ	14859	;# 
   229   003A0C                     RB4PPS          equ	14860	;# 
   230   003A0D                     RB5PPS          equ	14861	;# 
   231   003A0E                     RB6PPS          equ	14862	;# 
   232   003A0F                     RB7PPS          equ	14863	;# 
   233   003A10                     RC0PPS          equ	14864	;# 
   234   003A11                     RC1PPS          equ	14865	;# 
   235   003A12                     RC2PPS          equ	14866	;# 
   236   003A13                     RC3PPS          equ	14867	;# 
   237   003A14                     RC4PPS          equ	14868	;# 
   238   003A15                     RC5PPS          equ	14869	;# 
   239   003A16                     RC6PPS          equ	14870	;# 
   240   003A17                     RC7PPS          equ	14871	;# 
   241   003A18                     RD0PPS          equ	14872	;# 
   242   003A19                     RD1PPS          equ	14873	;# 
   243   003A1A                     RD2PPS          equ	14874	;# 
   244   003A1B                     RD3PPS          equ	14875	;# 
   245   003A1C                     RD4PPS          equ	14876	;# 
   246   003A1D                     RD5PPS          equ	14877	;# 
   247   003A1E                     RD6PPS          equ	14878	;# 
   248   003A1F                     RD7PPS          equ	14879	;# 
   249   003A20                     RE0PPS          equ	14880	;# 
   250   003A21                     RE1PPS          equ	14881	;# 
   251   003A22                     RE2PPS          equ	14882	;# 
   252   003A40                     ANSELA          equ	14912	;# 
   253   003A41                     WPUA            equ	14913	;# 
   254   003A42                     ODCONA          equ	14914	;# 
   255   003A43                     SLRCONA         equ	14915	;# 
   256   003A44                     INLVLA          equ	14916	;# 
   257   003A45                     IOCAP           equ	14917	;# 
   258   003A46                     IOCAN           equ	14918	;# 
   259   003A47                     IOCAF           equ	14919	;# 
   260   003A50                     ANSELB          equ	14928	;# 
   261   003A51                     WPUB            equ	14929	;# 
   262   003A52                     ODCONB          equ	14930	;# 
   263   003A53                     SLRCONB         equ	14931	;# 
   264   003A54                     INLVLB          equ	14932	;# 
   265   003A55                     IOCBP           equ	14933	;# 
   266   003A56                     IOCBN           equ	14934	;# 
   267   003A57                     IOCBF           equ	14935	;# 
   268   003A5A                     RB1I2C          equ	14938	;# 
   269   003A5B                     RB2I2C          equ	14939	;# 
   270   003A60                     ANSELC          equ	14944	;# 
   271   003A61                     WPUC            equ	14945	;# 
   272   003A62                     ODCONC          equ	14946	;# 
   273   003A63                     SLRCONC         equ	14947	;# 
   274   003A64                     INLVLC          equ	14948	;# 
   275   003A65                     IOCCP           equ	14949	;# 
   276   003A66                     IOCCN           equ	14950	;# 
   277   003A67                     IOCCF           equ	14951	;# 
   278   003A6A                     RC3I2C          equ	14954	;# 
   279   003A6B                     RC4I2C          equ	14955	;# 
   280   003A70                     ANSELD          equ	14960	;# 
   281   003A71                     WPUD            equ	14961	;# 
   282   003A72                     ODCOND          equ	14962	;# 
   283   003A73                     SLRCOND         equ	14963	;# 
   284   003A74                     INLVLD          equ	14964	;# 
   285   003A7A                     RD0I2C          equ	14970	;# 
   286   003A7B                     RD1I2C          equ	14971	;# 
   287   003A80                     ANSELE          equ	14976	;# 
   288   003A81                     WPUE            equ	14977	;# 
   289   003A82                     ODCONE          equ	14978	;# 
   290   003A83                     SLRCONE         equ	14979	;# 
   291   003A84                     INLVLE          equ	14980	;# 
   292   003A85                     IOCEP           equ	14981	;# 
   293   003A86                     IOCEN           equ	14982	;# 
   294   003A87                     IOCEF           equ	14983	;# 
   295   003ABF                     PPSLOCK         equ	15039	;# 
   296   003AC0                     INT0PPS         equ	15040	;# 
   297   003AC1                     INT1PPS         equ	15041	;# 
   298   003AC2                     INT2PPS         equ	15042	;# 
   299   003AC3                     T0CKIPPS        equ	15043	;# 
   300   003AC4                     T1CKIPPS        equ	15044	;# 
   301   003AC5                     T1GPPS          equ	15045	;# 
   302   003AC6                     T3CKIPPS        equ	15046	;# 
   303   003AC7                     T3GPPS          equ	15047	;# 
   304   003AC8                     T5CKIPPS        equ	15048	;# 
   305   003AC9                     T5GPPS          equ	15049	;# 
   306   003ACA                     T2INPPS         equ	15050	;# 
   307   003ACB                     T4INPPS         equ	15051	;# 
   308   003ACC                     T6INPPS         equ	15052	;# 
   309   003ACD                     CCP1PPS         equ	15053	;# 
   310   003ACE                     CCP2PPS         equ	15054	;# 
   311   003ACF                     CCP3PPS         equ	15055	;# 
   312   003AD0                     CCP4PPS         equ	15056	;# 
   313   003AD1                     SMT1WINPPS      equ	15057	;# 
   314   003AD2                     SMT1SIGPPS      equ	15058	;# 
   315   003AD3                     CWG1INPPS       equ	15059	;# 
   316   003AD4                     CWG2INPPS       equ	15060	;# 
   317   003AD5                     CWG3INPPS       equ	15061	;# 
   318   003AD6                     MD1CARLPPS      equ	15062	;# 
   319   003AD7                     MD1CARHPPS      equ	15063	;# 
   320   003AD8                     MD1SRCPPS       equ	15064	;# 
   321   003AD9                     CLCIN0PPS       equ	15065	;# 
   322   003ADA                     CLCIN1PPS       equ	15066	;# 
   323   003ADB                     CLCIN2PPS       equ	15067	;# 
   324   003ADC                     CLCIN3PPS       equ	15068	;# 
   325   003ADD                     ADACTPPS        equ	15069	;# 
   326   003ADE                     SPI1SCKPPS      equ	15070	;# 
   327   003ADF                     SPI1SDIPPS      equ	15071	;# 
   328   003AE0                     SPI1SSPPS       equ	15072	;# 
   329   003AE1                     I2C1SCLPPS      equ	15073	;# 
   330   003AE2                     I2C1SDAPPS      equ	15074	;# 
   331   003AE3                     I2C2SCLPPS      equ	15075	;# 
   332   003AE4                     I2C2SDAPPS      equ	15076	;# 
   333   003AE5                     U1RXPPS         equ	15077	;# 
   334   003AE6                     U1CTSPPS        equ	15078	;# 
   335   003AE8                     U2RXPPS         equ	15080	;# 
   336   003AE9                     U2CTSPPS        equ	15081	;# 
   337   003BC9                     DMA2BUF         equ	15305	;# 
   338   003BCA                     DMA2DCNT        equ	15306	;# 
   339   003BCA                     DMA2DCNTL       equ	15306	;# 
   340   003BCB                     DMA2DCNTH       equ	15307	;# 
   341   003BCC                     DMA2DPTR        equ	15308	;# 
   342   003BCC                     DMA2DPTRL       equ	15308	;# 
   343   003BCD                     DMA2DPTRH       equ	15309	;# 
   344   003BCE                     DMA2DSZ         equ	15310	;# 
   345   003BCE                     DMA2DSZL        equ	15310	;# 
   346   003BCF                     DMA2DSZH        equ	15311	;# 
   347   003BD0                     DMA2DSA         equ	15312	;# 
   348   003BD0                     DMA2DSAL        equ	15312	;# 
   349   003BD1                     DMA2DSAH        equ	15313	;# 
   350   003BD2                     DMA2SCNT        equ	15314	;# 
   351   003BD2                     DMA2SCNTL       equ	15314	;# 
   352   003BD3                     DMA2SCNTH       equ	15315	;# 
   353   003BD4                     DMA2SPTR        equ	15316	;# 
   354   003BD4                     DMA2SPTRL       equ	15316	;# 
   355   003BD5                     DMA2SPTRH       equ	15317	;# 
   356   003BD6                     DMA2SPTRU       equ	15318	;# 
   357   003BD7                     DMA2SSZ         equ	15319	;# 
   358   003BD7                     DMA2SSZL        equ	15319	;# 
   359   003BD8                     DMA2SSZH        equ	15320	;# 
   360   003BD9                     DMA2SSA         equ	15321	;# 
   361   003BD9                     DMA2SSAL        equ	15321	;# 
   362   003BDA                     DMA2SSAH        equ	15322	;# 
   363   003BDB                     DMA2SSAU        equ	15323	;# 
   364   003BDC                     DMA2CON0        equ	15324	;# 
   365   003BDD                     DMA2CON1        equ	15325	;# 
   366   003BDE                     DMA2AIRQ        equ	15326	;# 
   367   003BDF                     DMA2SIRQ        equ	15327	;# 
   368   003BE9                     DMA1BUF         equ	15337	;# 
   369   003BEA                     DMA1DCNT        equ	15338	;# 
   370   003BEA                     DMA1DCNTL       equ	15338	;# 
   371   003BEB                     DMA1DCNTH       equ	15339	;# 
   372   003BEC                     DMA1DPTR        equ	15340	;# 
   373   003BEC                     DMA1DPTRL       equ	15340	;# 
   374   003BED                     DMA1DPTRH       equ	15341	;# 
   375   003BEE                     DMA1DSZ         equ	15342	;# 
   376   003BEE                     DMA1DSZL        equ	15342	;# 
   377   003BEF                     DMA1DSZH        equ	15343	;# 
   378   003BF0                     DMA1DSA         equ	15344	;# 
   379   003BF0                     DMA1DSAL        equ	15344	;# 
   380   003BF1                     DMA1DSAH        equ	15345	;# 
   381   003BF2                     DMA1SCNT        equ	15346	;# 
   382   003BF2                     DMA1SCNTL       equ	15346	;# 
   383   003BF3                     DMA1SCNTH       equ	15347	;# 
   384   003BF4                     DMA1SPTR        equ	15348	;# 
   385   003BF4                     DMA1SPTRL       equ	15348	;# 
   386   003BF5                     DMA1SPTRH       equ	15349	;# 
   387   003BF6                     DMA1SPTRU       equ	15350	;# 
   388   003BF7                     DMA1SSZ         equ	15351	;# 
   389   003BF7                     DMA1SSZL        equ	15351	;# 
   390   003BF8                     DMA1SSZH        equ	15352	;# 
   391   003BF9                     DMA1SSA         equ	15353	;# 
   392   003BF9                     DMA1SSAL        equ	15353	;# 
   393   003BFA                     DMA1SSAH        equ	15354	;# 
   394   003BFB                     DMA1SSAU        equ	15355	;# 
   395   003BFC                     DMA1CON0        equ	15356	;# 
   396   003BFD                     DMA1CON1        equ	15357	;# 
   397   003BFE                     DMA1AIRQ        equ	15358	;# 
   398   003BFF                     DMA1SIRQ        equ	15359	;# 
   399   003C56                     CLC4CON         equ	15446	;# 
   400   003C57                     CLC4POL         equ	15447	;# 
   401   003C58                     CLC4SEL0        equ	15448	;# 
   402   003C59                     CLC4SEL1        equ	15449	;# 
   403   003C5A                     CLC4SEL2        equ	15450	;# 
   404   003C5B                     CLC4SEL3        equ	15451	;# 
   405   003C5C                     CLC4GLS0        equ	15452	;# 
   406   003C5D                     CLC4GLS1        equ	15453	;# 
   407   003C5E                     CLC4GLS2        equ	15454	;# 
   408   003C5F                     CLC4GLS3        equ	15455	;# 
   409   003C60                     CLC3CON         equ	15456	;# 
   410   003C61                     CLC3POL         equ	15457	;# 
   411   003C62                     CLC3SEL0        equ	15458	;# 
   412   003C63                     CLC3SEL1        equ	15459	;# 
   413   003C64                     CLC3SEL2        equ	15460	;# 
   414   003C65                     CLC3SEL3        equ	15461	;# 
   415   003C66                     CLC3GLS0        equ	15462	;# 
   416   003C67                     CLC3GLS1        equ	15463	;# 
   417   003C68                     CLC3GLS2        equ	15464	;# 
   418   003C69                     CLC3GLS3        equ	15465	;# 
   419   003C6A                     CLC2CON         equ	15466	;# 
   420   003C6B                     CLC2POL         equ	15467	;# 
   421   003C6C                     CLC2SEL0        equ	15468	;# 
   422   003C6D                     CLC2SEL1        equ	15469	;# 
   423   003C6E                     CLC2SEL2        equ	15470	;# 
   424   003C6F                     CLC2SEL3        equ	15471	;# 
   425   003C70                     CLC2GLS0        equ	15472	;# 
   426   003C71                     CLC2GLS1        equ	15473	;# 
   427   003C72                     CLC2GLS2        equ	15474	;# 
   428   003C73                     CLC2GLS3        equ	15475	;# 
   429   003C74                     CLC1CON         equ	15476	;# 
   430   003C75                     CLC1POL         equ	15477	;# 
   431   003C76                     CLC1SEL0        equ	15478	;# 
   432   003C77                     CLC1SEL1        equ	15479	;# 
   433   003C78                     CLC1SEL2        equ	15480	;# 
   434   003C79                     CLC1SEL3        equ	15481	;# 
   435   003C7A                     CLC1GLS0        equ	15482	;# 
   436   003C7B                     CLC1GLS1        equ	15483	;# 
   437   003C7C                     CLC1GLS2        equ	15484	;# 
   438   003C7D                     CLC1GLS3        equ	15485	;# 
   439   003C7E                     CLCDATA0        equ	15486	;# 
   440   003CE5                     CLKRCON         equ	15589	;# 
   441   003CE6                     CLKRCLK         equ	15590	;# 
   442   003CFA                     MD1CON0         equ	15610	;# 
   443   003CFB                     MD1CON1         equ	15611	;# 
   444   003CFC                     MD1SRC          equ	15612	;# 
   445   003CFD                     MD1CARL         equ	15613	;# 
   446   003CFE                     MD1CARH         equ	15614	;# 
   447   003D10                     SPI1RXB         equ	15632	;# 
   448   003D11                     SPI1TXB         equ	15633	;# 
   449   003D12                     SPI1TCNT        equ	15634	;# 
   450   003D12                     SPI1TCNTL       equ	15634	;# 
   451   003D13                     SPI1TCNTH       equ	15635	;# 
   452   003D14                     SPI1CON0        equ	15636	;# 
   453   003D15                     SPI1CON1        equ	15637	;# 
   454   003D16                     SPI1CON2        equ	15638	;# 
   455   003D17                     SPI1STATUS      equ	15639	;# 
   456   003D18                     SPI1TWIDTH      equ	15640	;# 
   457   003D19                     SPI1BAUD        equ	15641	;# 
   458   003D1A                     SPI1INTF        equ	15642	;# 
   459   003D1B                     SPI1INTE        equ	15643	;# 
   460   003D1C                     SPI1CLK         equ	15644	;# 
   461   003D54                     I2C2RXB         equ	15700	;# 
   462   003D55                     I2C2TXB         equ	15701	;# 
   463   003D56                     I2C2CNT         equ	15702	;# 
   464   003D57                     I2C2ADB0        equ	15703	;# 
   465   003D58                     I2C2ADB1        equ	15704	;# 
   466   003D59                     I2C2ADR0        equ	15705	;# 
   467   003D5A                     I2C2ADR1        equ	15706	;# 
   468   003D5B                     I2C2ADR2        equ	15707	;# 
   469   003D5C                     I2C2ADR3        equ	15708	;# 
   470   003D5D                     I2C2CON0        equ	15709	;# 
   471   003D5E                     I2C2CON1        equ	15710	;# 
   472   003D5F                     I2C2CON2        equ	15711	;# 
   473   003D60                     I2C2ERR         equ	15712	;# 
   474   003D61                     I2C2STAT0       equ	15713	;# 
   475   003D62                     I2C2STAT1       equ	15714	;# 
   476   003D63                     I2C2PIR         equ	15715	;# 
   477   003D64                     I2C2PIE         equ	15716	;# 
   478   003D65                     I2C2CLK         equ	15717	;# 
   479   003D66                     I2C2BTO         equ	15718	;# 
   480   003D6A                     I2C1RXB         equ	15722	;# 
   481   003D6B                     I2C1TXB         equ	15723	;# 
   482   003D6C                     I2C1CNT         equ	15724	;# 
   483   003D6D                     I2C1ADB0        equ	15725	;# 
   484   003D6E                     I2C1ADB1        equ	15726	;# 
   485   003D6F                     I2C1ADR0        equ	15727	;# 
   486   003D70                     I2C1ADR1        equ	15728	;# 
   487   003D71                     I2C1ADR2        equ	15729	;# 
   488   003D72                     I2C1ADR3        equ	15730	;# 
   489   003D73                     I2C1CON0        equ	15731	;# 
   490   003D74                     I2C1CON1        equ	15732	;# 
   491   003D75                     I2C1CON2        equ	15733	;# 
   492   003D76                     I2C1ERR         equ	15734	;# 
   493   003D77                     I2C1STAT0       equ	15735	;# 
   494   003D78                     I2C1STAT1       equ	15736	;# 
   495   003D79                     I2C1PIR         equ	15737	;# 
   496   003D7A                     I2C1PIE         equ	15738	;# 
   497   003D7B                     I2C1CLK         equ	15739	;# 
   498   003D7C                     I2C1BTO         equ	15740	;# 
   499   003DD0                     U2RXB           equ	15824	;# 
   500   003DD0                     U2RXBL          equ	15824	;# 
   501   003DD2                     U2TXB           equ	15826	;# 
   502   003DD2                     U2TXBL          equ	15826	;# 
   503   003DD4                     U2P1            equ	15828	;# 
   504   003DD4                     U2P1L           equ	15828	;# 
   505   003DD6                     U2P2            equ	15830	;# 
   506   003DD6                     U2P2L           equ	15830	;# 
   507   003DD8                     U2P3            equ	15832	;# 
   508   003DD8                     U2P3L           equ	15832	;# 
   509   003DDA                     U2CON0          equ	15834	;# 
   510   003DDB                     U2CON1          equ	15835	;# 
   511   003DDC                     U2CON2          equ	15836	;# 
   512   003DDD                     U2BRG           equ	15837	;# 
   513   003DDD                     U2BRGL          equ	15837	;# 
   514   003DDE                     U2BRGH          equ	15838	;# 
   515   003DDF                     U2FIFO          equ	15839	;# 
   516   003DE0                     U2UIR           equ	15840	;# 
   517   003DE1                     U2ERRIR         equ	15841	;# 
   518   003DE2                     U2ERRIE         equ	15842	;# 
   519   003DE8                     U1RXB           equ	15848	;# 
   520   003DE8                     U1RXBL          equ	15848	;# 
   521   003DE9                     U1RXCHK         equ	15849	;# 
   522   003DEA                     U1TXB           equ	15850	;# 
   523   003DEA                     U1TXBL          equ	15850	;# 
   524   003DEB                     U1TXCHK         equ	15851	;# 
   525   003DEC                     U1P1            equ	15852	;# 
   526   003DEC                     U1P1L           equ	15852	;# 
   527   003DED                     U1P1H           equ	15853	;# 
   528   003DEE                     U1P2            equ	15854	;# 
   529   003DEE                     U1P2L           equ	15854	;# 
   530   003DEF                     U1P2H           equ	15855	;# 
   531   003DF0                     U1P3            equ	15856	;# 
   532   003DF0                     U1P3L           equ	15856	;# 
   533   003DF1                     U1P3H           equ	15857	;# 
   534   003DF2                     U1CON0          equ	15858	;# 
   535   003DF3                     U1CON1          equ	15859	;# 
   536   003DF4                     U1CON2          equ	15860	;# 
   537   003DF5                     U1BRG           equ	15861	;# 
   538   003DF5                     U1BRGL          equ	15861	;# 
   539   003DF6                     U1BRGH          equ	15862	;# 
   540   003DF7                     U1FIFO          equ	15863	;# 
   541   003DF8                     U1UIR           equ	15864	;# 
   542   003DF9                     U1ERRIR         equ	15865	;# 
   543   003DFA                     U1ERRIE         equ	15866	;# 
   544   003E9C                     DAC1CON1        equ	16028	;# 
   545   003E9E                     DAC1CON0        equ	16030	;# 
   546   003EB8                     CM2CON0         equ	16056	;# 
   547   003EB9                     CM2CON1         equ	16057	;# 
   548   003EBA                     CM2NCH          equ	16058	;# 
   549   003EBB                     CM2PCH          equ	16059	;# 
   550   003EBC                     CM1CON0         equ	16060	;# 
   551   003EBD                     CM1CON1         equ	16061	;# 
   552   003EBE                     CM1NCH          equ	16062	;# 
   553   003EBF                     CM1PCH          equ	16063	;# 
   554   003EC0                     CMOUT           equ	16064	;# 
   555   003EC1                     FVRCON          equ	16065	;# 
   556   003EC3                     ZCDCON          equ	16067	;# 
   557   003EC9                     HLVDCON0        equ	16073	;# 
   558   003ECA                     HLVDCON1        equ	16074	;# 
   559   003ED7                     ADCP            equ	16087	;# 
   560   003EDE                     ADLTH           equ	16094	;# 
   561   003EDE                     ADLTHL          equ	16094	;# 
   562   003EDF                     ADLTHH          equ	16095	;# 
   563   003EE0                     ADUTH           equ	16096	;# 
   564   003EE0                     ADUTHL          equ	16096	;# 
   565   003EE1                     ADUTHH          equ	16097	;# 
   566   003EE2                     ADERR           equ	16098	;# 
   567   003EE2                     ADERRL          equ	16098	;# 
   568   003EE3                     ADERRH          equ	16099	;# 
   569   003EE4                     ADSTPT          equ	16100	;# 
   570   003EE4                     ADSTPTL         equ	16100	;# 
   571   003EE5                     ADSTPTH         equ	16101	;# 
   572   003EE6                     ADFLTR          equ	16102	;# 
   573   003EE6                     ADFLTRL         equ	16102	;# 
   574   003EE7                     ADFLTRH         equ	16103	;# 
   575   003EE8                     ADACC           equ	16104	;# 
   576   003EE8                     ADACCL          equ	16104	;# 
   577   003EE9                     ADACCH          equ	16105	;# 
   578   003EEA                     ADACCU          equ	16106	;# 
   579   003EEB                     ADCNT           equ	16107	;# 
   580   003EEC                     ADRPT           equ	16108	;# 
   581   003EED                     ADPREV          equ	16109	;# 
   582   003EED                     ADPREVL         equ	16109	;# 
   583   003EEE                     ADPREVH         equ	16110	;# 
   584   003EEF                     ADRES           equ	16111	;# 
   585   003EEF                     ADRESL          equ	16111	;# 
   586   003EF0                     ADRESH          equ	16112	;# 
   587   003EF1                     ADPCH           equ	16113	;# 
   588   003EF3                     ADACQ           equ	16115	;# 
   589   003EF3                     ADACQL          equ	16115	;# 
   590   003EF4                     ADACQH          equ	16116	;# 
   591   003EF5                     ADCAP           equ	16117	;# 
   592   003EF6                     ADPRE           equ	16118	;# 
   593   003EF6                     ADPREL          equ	16118	;# 
   594   003EF7                     ADPREH          equ	16119	;# 
   595   003EF8                     ADCON0          equ	16120	;# 
   596   003EF9                     ADCON1          equ	16121	;# 
   597   003EFA                     ADCON2          equ	16122	;# 
   598   003EFB                     ADCON3          equ	16123	;# 
   599   003EFC                     ADSTAT          equ	16124	;# 
   600   003EFD                     ADREF           equ	16125	;# 
   601   003EFE                     ADACT           equ	16126	;# 
   602   003EFF                     ADCLK           equ	16127	;# 
   603   003F12                     SMT1TMR         equ	16146	;# 
   604   003F12                     SMT1TMRL        equ	16146	;# 
   605   003F13                     SMT1TMRH        equ	16147	;# 
   606   003F14                     SMT1TMRU        equ	16148	;# 
   607   003F15                     SMT1CPR         equ	16149	;# 
   608   003F15                     SMT1CPRL        equ	16149	;# 
   609   003F16                     SMT1CPRH        equ	16150	;# 
   610   003F17                     SMT1CPRU        equ	16151	;# 
   611   003F18                     SMT1CPW         equ	16152	;# 
   612   003F18                     SMT1CPWL        equ	16152	;# 
   613   003F19                     SMT1CPWH        equ	16153	;# 
   614   003F1A                     SMT1CPWU        equ	16154	;# 
   615   003F1B                     SMT1PR          equ	16155	;# 
   616   003F1B                     SMT1PRL         equ	16155	;# 
   617   003F1C                     SMT1PRH         equ	16156	;# 
   618   003F1D                     SMT1PRU         equ	16157	;# 
   619   003F1E                     SMT1CON0        equ	16158	;# 
   620   003F1F                     SMT1CON1        equ	16159	;# 
   621   003F20                     SMT1STAT        equ	16160	;# 
   622   003F21                     SMT1CLK         equ	16161	;# 
   623   003F22                     SMT1SIG         equ	16162	;# 
   624   003F23                     SMT1WIN         equ	16163	;# 
   625   003F38                     NCO1ACC         equ	16184	;# 
   626   003F38                     NCO1ACCL        equ	16184	;# 
   627   003F39                     NCO1ACCH        equ	16185	;# 
   628   003F3A                     NCO1ACCU        equ	16186	;# 
   629   003F3B                     NCO1INC         equ	16187	;# 
   630   003F3B                     NCO1INCL        equ	16187	;# 
   631   003F3C                     NCO1INCH        equ	16188	;# 
   632   003F3D                     NCO1INCU        equ	16189	;# 
   633   003F3E                     NCO1CON         equ	16190	;# 
   634   003F3F                     NCO1CLK         equ	16191	;# 
   635   003F40                     CWG3CLK         equ	16192	;# 
   636   003F40                     CWG3CLKCON      equ	16192	;# 
   637   003F41                     CWG3ISM         equ	16193	;# 
   638   003F41                     CWG3DAT         equ	16193	;# 
   639   003F42                     CWG3DBR         equ	16194	;# 
   640   003F43                     CWG3DBF         equ	16195	;# 
   641   003F44                     CWG3CON0        equ	16196	;# 
   642   003F45                     CWG3CON1        equ	16197	;# 
   643   003F46                     CWG3AS0         equ	16198	;# 
   644   003F47                     CWG3AS1         equ	16199	;# 
   645   003F48                     CWG3STR         equ	16200	;# 
   646   003F49                     CWG2CLK         equ	16201	;# 
   647   003F49                     CWG2CLKCON      equ	16201	;# 
   648   003F4A                     CWG2ISM         equ	16202	;# 
   649   003F4A                     CWG2DAT         equ	16202	;# 
   650   003F4B                     CWG2DBR         equ	16203	;# 
   651   003F4C                     CWG2DBF         equ	16204	;# 
   652   003F4D                     CWG2CON0        equ	16205	;# 
   653   003F4E                     CWG2CON1        equ	16206	;# 
   654   003F4F                     CWG2AS0         equ	16207	;# 
   655   003F50                     CWG2AS1         equ	16208	;# 
   656   003F51                     CWG2STR         equ	16209	;# 
   657   003F52                     CWG1CLK         equ	16210	;# 
   658   003F52                     CWG1CLKCON      equ	16210	;# 
   659   003F53                     CWG1ISM         equ	16211	;# 
   660   003F53                     CWG1DAT         equ	16211	;# 
   661   003F54                     CWG1DBR         equ	16212	;# 
   662   003F55                     CWG1DBF         equ	16213	;# 
   663   003F56                     CWG1CON0        equ	16214	;# 
   664   003F57                     CWG1CON1        equ	16215	;# 
   665   003F58                     CWG1AS0         equ	16216	;# 
   666   003F59                     CWG1AS1         equ	16217	;# 
   667   003F5A                     CWG1STR         equ	16218	;# 
   668   003F5E                     CCPTMRS0        equ	16222	;# 
   669   003F5F                     CCPTMRS1        equ	16223	;# 
   670   003F60                     PWM8DC          equ	16224	;# 
   671   003F60                     PWM8DCL         equ	16224	;# 
   672   003F61                     PWM8DCH         equ	16225	;# 
   673   003F62                     PWM8CON         equ	16226	;# 
   674   003F64                     PWM7DC          equ	16228	;# 
   675   003F64                     PWM7DCL         equ	16228	;# 
   676   003F65                     PWM7DCH         equ	16229	;# 
   677   003F66                     PWM7CON         equ	16230	;# 
   678   003F68                     PWM6DC          equ	16232	;# 
   679   003F68                     PWM6DCL         equ	16232	;# 
   680   003F69                     PWM6DCH         equ	16233	;# 
   681   003F6A                     PWM6CON         equ	16234	;# 
   682   003F6C                     PWM5DC          equ	16236	;# 
   683   003F6C                     PWM5DCL         equ	16236	;# 
   684   003F6D                     PWM5DCH         equ	16237	;# 
   685   003F6E                     PWM5CON         equ	16238	;# 
   686   003F70                     CCPR4           equ	16240	;# 
   687   003F70                     CCPR4L          equ	16240	;# 
   688   003F71                     CCPR4H          equ	16241	;# 
   689   003F72                     CCP4CON         equ	16242	;# 
   690   003F73                     CCP4CAP         equ	16243	;# 
   691   003F74                     CCPR3           equ	16244	;# 
   692   003F74                     CCPR3L          equ	16244	;# 
   693   003F75                     CCPR3H          equ	16245	;# 
   694   003F76                     CCP3CON         equ	16246	;# 
   695   003F77                     CCP3CAP         equ	16247	;# 
   696   003F78                     CCPR2           equ	16248	;# 
   697   003F78                     CCPR2L          equ	16248	;# 
   698   003F79                     CCPR2H          equ	16249	;# 
   699   003F7A                     CCP2CON         equ	16250	;# 
   700   003F7B                     CCP2CAP         equ	16251	;# 
   701   003F7C                     CCPR1           equ	16252	;# 
   702   003F7C                     CCPR1L          equ	16252	;# 
   703   003F7D                     CCPR1H          equ	16253	;# 
   704   003F7E                     CCP1CON         equ	16254	;# 
   705   003F7F                     CCP1CAP         equ	16255	;# 
   706   003F92                     T6TMR           equ	16274	;# 
   707   003F92                     TMR6            equ	16274	;# 
   708   003F93                     T6PR            equ	16275	;# 
   709   003F93                     PR6             equ	16275	;# 
   710   003F94                     T6CON           equ	16276	;# 
   711   003F95                     T6HLT           equ	16277	;# 
   712   003F96                     T6CLKCON        equ	16278	;# 
   713   003F96                     T6CLK           equ	16278	;# 
   714   003F97                     T6RST           equ	16279	;# 
   715   003F98                     TMR5            equ	16280	;# 
   716   003F98                     TMR5L           equ	16280	;# 
   717   003F99                     TMR5H           equ	16281	;# 
   718   003F9A                     T5CON           equ	16282	;# 
   719   003F9A                     TMR5CON         equ	16282	;# 
   720   003F9B                     T5GCON          equ	16283	;# 
   721   003F9B                     TMR5GCON        equ	16283	;# 
   722   003F9C                     T5GATE          equ	16284	;# 
   723   003F9C                     TMR5GATE        equ	16284	;# 
   724   003F9D                     T5CLK           equ	16285	;# 
   725   003F9D                     TMR5CLK         equ	16285	;# 
   726   003F9D                     PR5             equ	16285	;# 
   727   003F9E                     T4TMR           equ	16286	;# 
   728   003F9E                     TMR4            equ	16286	;# 
   729   003F9F                     T4PR            equ	16287	;# 
   730   003F9F                     PR4             equ	16287	;# 
   731   003FA0                     T4CON           equ	16288	;# 
   732   003FA1                     T4HLT           equ	16289	;# 
   733   003FA2                     T4CLKCON        equ	16290	;# 
   734   003FA2                     T4CLK           equ	16290	;# 
   735   003FA3                     T4RST           equ	16291	;# 
   736   003FA4                     TMR3            equ	16292	;# 
   737   003FA4                     TMR3L           equ	16292	;# 
   738   003FA5                     TMR3H           equ	16293	;# 
   739   003FA6                     T3CON           equ	16294	;# 
   740   003FA6                     TMR3CON         equ	16294	;# 
   741   003FA7                     T3GCON          equ	16295	;# 
   742   003FA7                     TMR3GCON        equ	16295	;# 
   743   003FA8                     T3GATE          equ	16296	;# 
   744   003FA8                     TMR3GATE        equ	16296	;# 
   745   003FA9                     T3CLK           equ	16297	;# 
   746   003FA9                     TMR3CLK         equ	16297	;# 
   747   003FA9                     PR3             equ	16297	;# 
   748   003FAA                     T2TMR           equ	16298	;# 
   749   003FAA                     TMR2            equ	16298	;# 
   750   003FAB                     T2PR            equ	16299	;# 
   751   003FAB                     PR2             equ	16299	;# 
   752   003FAC                     T2CON           equ	16300	;# 
   753   003FAD                     T2HLT           equ	16301	;# 
   754   003FAE                     T2CLKCON        equ	16302	;# 
   755   003FAE                     T2CLK           equ	16302	;# 
   756   003FAF                     T2RST           equ	16303	;# 
   757   003FB0                     TMR1            equ	16304	;# 
   758   003FB0                     TMR1L           equ	16304	;# 
   759   003FB1                     TMR1H           equ	16305	;# 
   760   003FB2                     T1CON           equ	16306	;# 
   761   003FB2                     TMR1CON         equ	16306	;# 
   762   003FB3                     T1GCON          equ	16307	;# 
   763   003FB3                     TMR1GCON        equ	16307	;# 
   764   003FB4                     T1GATE          equ	16308	;# 
   765   003FB4                     TMR1GATE        equ	16308	;# 
   766   003FB5                     T1CLK           equ	16309	;# 
   767   003FB5                     TMR1CLK         equ	16309	;# 
   768   003FB5                     PR1             equ	16309	;# 
   769   003FB6                     TMR0L           equ	16310	;# 
   770   003FB6                     TMR0            equ	16310	;# 
   771   003FB7                     TMR0H           equ	16311	;# 
   772   003FB7                     PR0             equ	16311	;# 
   773   003FB8                     T0CON0          equ	16312	;# 
   774   003FB9                     T0CON1          equ	16313	;# 
   775   003FBA                     LATA            equ	16314	;# 
   776   003FBB                     LATB            equ	16315	;# 
   777   003FBC                     LATC            equ	16316	;# 
   778   003FBD                     LATD            equ	16317	;# 
   779   003FBE                     LATE            equ	16318	;# 
   780   003FC2                     TRISA           equ	16322	;# 
   781   003FC3                     TRISB           equ	16323	;# 
   782   003FC4                     TRISC           equ	16324	;# 
   783   003FC5                     TRISD           equ	16325	;# 
   784   003FC6                     TRISE           equ	16326	;# 
   785   003FCA                     PORTA           equ	16330	;# 
   786   003FCB                     PORTB           equ	16331	;# 
   787   003FCC                     PORTC           equ	16332	;# 
   788   003FCD                     PORTD           equ	16333	;# 
   789   003FCE                     PORTE           equ	16334	;# 
   790   003FD2                     INTCON0         equ	16338	;# 
   791   003FD3                     INTCON1         equ	16339	;# 
   792   003FD4                     IVTLOCK         equ	16340	;# 
   793   003FD5                     IVTBASE         equ	16341	;# 
   794   003FD5                     IVTBASEL        equ	16341	;# 
   795   003FD6                     IVTBASEH        equ	16342	;# 
   796   003FD7                     IVTBASEU        equ	16343	;# 
   797   003FD8                     STATUS          equ	16344	;# 
   798   003FD9                     FSR2            equ	16345	;# 
   799   003FD9                     FSR2L           equ	16345	;# 
   800   003FDA                     FSR2H           equ	16346	;# 
   801   003FDB                     PLUSW2          equ	16347	;# 
   802   003FDC                     PREINC2         equ	16348	;# 
   803   003FDD                     POSTDEC2        equ	16349	;# 
   804   003FDE                     POSTINC2        equ	16350	;# 
   805   003FDF                     INDF2           equ	16351	;# 
   806   003FE0                     BSR             equ	16352	;# 
   807   003FE1                     FSR1            equ	16353	;# 
   808   003FE1                     FSR1L           equ	16353	;# 
   809   003FE2                     FSR1H           equ	16354	;# 
   810   003FE3                     PLUSW1          equ	16355	;# 
   811   003FE4                     PREINC1         equ	16356	;# 
   812   003FE5                     POSTDEC1        equ	16357	;# 
   813   003FE6                     POSTINC1        equ	16358	;# 
   814   003FE7                     INDF1           equ	16359	;# 
   815   003FE8                     WREG            equ	16360	;# 
   816   003FE9                     FSR0            equ	16361	;# 
   817   003FE9                     FSR0L           equ	16361	;# 
   818   003FEA                     FSR0H           equ	16362	;# 
   819   003FEB                     PLUSW0          equ	16363	;# 
   820   003FEC                     PREINC0         equ	16364	;# 
   821   003FED                     POSTDEC0        equ	16365	;# 
   822   003FEE                     POSTINC0        equ	16366	;# 
   823   003FEF                     INDF0           equ	16367	;# 
   824   003FF0                     PCON0           equ	16368	;# 
   825   003FF1                     PCON1           equ	16369	;# 
   826   003FF3                     PROD            equ	16371	;# 
   827   003FF3                     PRODL           equ	16371	;# 
   828   003FF4                     PRODH           equ	16372	;# 
   829   003FF5                     TABLAT          equ	16373	;# 
   830   003FF6                     TBLPTR          equ	16374	;# 
   831   003FF6                     TBLPTRL         equ	16374	;# 
   832   003FF7                     TBLPTRH         equ	16375	;# 
   833   003FF8                     TBLPTRU         equ	16376	;# 
   834   003FF9                     PCLAT           equ	16377	;# 
   835   003FF9                     PCL             equ	16377	;# 
   836   003FFA                     PCLATH          equ	16378	;# 
   837   003FFB                     PCLATU          equ	16379	;# 
   838   003FFC                     STKPTR          equ	16380	;# 
   839   003FFD                     TOS             equ	16381	;# 
   840   003FFD                     TOSL            equ	16381	;# 
   841   003FFE                     TOSH            equ	16382	;# 
   842   003FFF                     TOSU            equ	16383	;# 
   843                           
   844                           ; 1 bytes @ 0x0
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 42 in file "calcmain.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels required when called: 2
   870 ;; This function calls:
   871 ;;		_check_keypad
   872 ;;		_initialize
   873 ;;		_op
   874 ;;		_solve
   875 ;; This function is called by:
   876 ;;		Startup code after reset
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text0
   881   0022D2                     __ptext0:
   882                           	callstack 0
   883   003A70                     _ANSELD         set	14960
   884   003A50                     _ANSELB         set	14928
   885   003FCB                     _PORTBbits      set	16331
   886   003FBD                     _LATD           set	16317
   887   003FC5                     _TRISD          set	16325
   888   003FBB                     _LATB           set	16315
   889   003FC3                     _TRISB          set	16323
   890   003FCB                     _PORTB          set	16331
   891   003FCD                     _PORTD          set	16333
   892   003FCD                     _PORTDbits      set	16333
   893   0022D2                     _main:
   894                           	callstack 29
   895   0022D2                     l55:
   896   0022D2                     
   897                           ;calcmain.c: 44:         initialize();
   898   0022D2  EC0B  F012         	call	_initialize	;wreg free
   899   0022D6                     
   900                           ;calcmain.c: 45:         check_keypad();
   901   0022D6  EC01  F010         	call	_check_keypad	;wreg free
   902   0022DA                     
   903                           ;calcmain.c: 46:         x_reg = x_reg + (button*10);
   904   0022DA  0100               	movlb	0	; () banked
   905   0022DC  5166               	movf	_button& (0+255),w,b
   906   0022DE  0D0A               	mullw	10
   907   0022E0  006F FFCC  F011    	movff	prodl,??_main
   908   0022E6  006F FFD0  F012    	movff	prodh,??_main+1
   909   0022EC  5001               	movf	1,w,c
   910   0022EE  2411               	addwf	??_main^0,w,c
   911   0022F0  6E01               	movwf	1,c
   912   0022F2  5002               	movf	2,w,c
   913   0022F4  2012               	addwfc	(??_main+1)^0,w,c
   914   0022F6  6E02               	movwf	2,c
   915   0022F8                     
   916                           ; BSR set to: 0
   917                           ;calcmain.c: 48:         check_keypad();
   918   0022F8  EC01  F010         	call	_check_keypad	;wreg free
   919   0022FC                     
   920                           ;calcmain.c: 49:         x_reg = x_reg + button;
   921   0022FC  0100               	movlb	0	; () banked
   922   0022FE  5166               	movf	_button& (0+255),w,b
   923   002300  2401               	addwf	1,w,c
   924   002302  6E01               	movwf	1,c
   925   002304  0E00               	movlw	0
   926   002306  2002               	addwfc	2,w,c
   927   002308  6E02               	movwf	2,c
   928   00230A                     
   929                           ; BSR set to: 0
   930                           ;calcmain.c: 50:         PORTDbits.RD0 = 1;
   931   00230A  80CD               	bsf	205,0,c	;volatile
   932   00230C                     
   933                           ; BSR set to: 0
   934                           ;calcmain.c: 51:         op();
   935   00230C  ECBA  F011         	call	_op	;wreg free
   936   002310                     
   937                           ;calcmain.c: 52:         check_keypad();
   938   002310  EC01  F010         	call	_check_keypad	;wreg free
   939   002314                     
   940                           ;calcmain.c: 53:         y_reg = y_reg + (button*10);
   941   002314  0100               	movlb	0	; () banked
   942   002316  5166               	movf	_button& (0+255),w,b
   943   002318  0D0A               	mullw	10
   944   00231A  006F FFCC  F011    	movff	prodl,??_main
   945   002320  006F FFD0  F012    	movff	prodh,??_main+1
   946   002326  5003               	movf	3,w,c
   947   002328  2411               	addwf	??_main^0,w,c
   948   00232A  6E03               	movwf	3,c
   949   00232C  5004               	movf	4,w,c
   950   00232E  2012               	addwfc	(??_main+1)^0,w,c
   951   002330  6E04               	movwf	4,c
   952   002332                     
   953                           ; BSR set to: 0
   954                           ;calcmain.c: 55:         check_keypad();
   955   002332  EC01  F010         	call	_check_keypad	;wreg free
   956   002336                     
   957                           ;calcmain.c: 56:         y_reg = y_reg + button;
   958   002336  0100               	movlb	0	; () banked
   959   002338  5166               	movf	_button& (0+255),w,b
   960   00233A  2403               	addwf	3,w,c
   961   00233C  6E03               	movwf	3,c
   962   00233E  0E00               	movlw	0
   963   002340  2004               	addwfc	4,w,c
   964   002342  6E04               	movwf	4,c
   965   002344                     
   966                           ; BSR set to: 0
   967                           ;calcmain.c: 57:         PORTDbits.RD0 = 0;
   968   002344  90CD               	bcf	205,0,c	;volatile
   969   002346                     
   970                           ; BSR set to: 0
   971                           ;calcmain.c: 58:         PORTDbits.RD1 = 1;
   972   002346  82CD               	bsf	205,1,c	;volatile
   973   002348                     
   974                           ; BSR set to: 0
   975                           ;calcmain.c: 59:         solve();
   976   002348  EC9C  F010         	call	_solve	;wreg free
   977   00234C                     
   978                           ;calcmain.c: 60:         PORTDbits.RD1 = 0;
   979   00234C  92CD               	bcf	205,1,c	;volatile
   980   00234E                     
   981                           ;calcmain.c: 61:         PORTD = display_reg;
   982   00234E  0060 F01F FFCD     	movff	7,16333	;volatile
   983   002354                     
   984                           ;calcmain.c: 62:         _delay((unsigned long)((5000)*(4000000/4000.0)));
   985   002354  0E1A               	movlw	26
   986   002356  6E12               	movwf	(??_main+1)^0,c
   987   002358  0E5E               	movlw	94
   988   00235A  6E11               	movwf	??_main^0,c
   989   00235C  0E6E               	movlw	110
   990   00235E                     u577:
   991   00235E  2EE8               	decfsz	wreg,f,c
   992   002360  D7FE               	bra	u577
   993   002362  2E11               	decfsz	??_main^0,f,c
   994   002364  D7FC               	bra	u577
   995   002366  2E12               	decfsz	(??_main+1)^0,f,c
   996   002368  D7FA               	bra	u577
   997   00236A  D000               	nop2	
   998   00236C  EF69  F011         	goto	l55
   999   002370  EFFE  F0FF         	goto	start
  1000   002374                     __end_of_main:
  1001                           	callstack 0
  1002                           
  1003                           ; #config settings
  1004                           
  1005                           	psect	cinit
  1006   00245A                     __pcinit:
  1007                           	callstack 0
  1008   00245A                     start_initialization:
  1009                           	callstack 0
  1010   00245A                     __initialization:
  1011                           	callstack 0
  1012                           
  1013                           ; Clear objects allocated to BANK0 (7 bytes)
  1014   00245A  EE00  F060         	lfsr	0,__pbssBANK0
  1015   00245E  0E07               	movlw	7
  1016   002460                     clear_0:
  1017   002460  6AEE               	clrf	postinc0,c
  1018   002462  06E8               	decf	wreg,f,c
  1019   002464  E1FD               	bnz	clear_0
  1020   002466                     end_of_initialization:
  1021                           	callstack 0
  1022   002466                     __end_of__initialization:
  1023                           	callstack 0
  1024   002466  0100               	movlb	0
  1025   002468  EF69  F011         	goto	_main	;jump to C main() function
  1026                           
  1027                           	psect	bssBANK0
  1028   000060                     __pbssBANK0:
  1029                           	callstack 0
  1030   000060                     _c:
  1031                           	callstack 0
  1032   000060                     	ds	2
  1033   000062                     _b:
  1034                           	callstack 0
  1035   000062                     	ds	2
  1036   000064                     _a:
  1037                           	callstack 0
  1038   000064                     	ds	2
  1039   000066                     _button:
  1040                           	callstack 0
  1041   000066                     	ds	1
  1042                           
  1043                           	psect	cstackCOMRAMh
  1044   000008                     __pcstackCOMRAMh:
  1045                           	callstack 0
  1046   000008                     ?___awdiv:
  1047                           	callstack 0
  1048   000008                     ___awdiv@dividend:
  1049                           	callstack 0
  1050   000008                     
  1051                           ; 1 bytes @ 0x0
  1052   000008                     	ds	2
  1053   00000A                     ___awdiv@divisor:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x2
  1057   00000A                     	ds	2
  1058   00000C                     ___awdiv@counter:
  1059                           	callstack 0
  1060   00000C                     
  1061                           ; 1 bytes @ 0x4
  1062   00000C                     	ds	1
  1063   00000D                     ___awdiv@sign:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x5
  1067   00000D                     	ds	1
  1068   00000E                     ___awdiv@quotient:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x6
  1072   00000E                     	ds	2
  1073   000010                     ??_solve:
  1074                           
  1075                           ; 1 bytes @ 0x8
  1076   000010                     	ds	1
  1077   000011                     ??_main:
  1078                           
  1079                           ; 1 bytes @ 0x9
  1080   000011                     	ds	2
  1081                           
  1082                           	psect	cstackCOMRAMl
  1083   000000                     __pcstackCOMRAMl:
  1084                           	callstack 0
  1085   000000                     
  1086 ;; *************** function _solve *****************
  1087 ;; Defined at:
  1088 ;;		line 141 in file "calcmain.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1106 ;;Total ram usage:        1 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		___awdiv
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text1
  1117   002138                     __ptext1:
  1118                           	callstack 0
  1119   002138                     _solve:
  1120                           	callstack 29
  1121   002138                     
  1122                           ;calcmain.c: 142:     c = 0;
  1123   002138  0E00               	movlw	0
  1124   00213A  0100               	movlb	0	; () banked
  1125   00213C  6F61               	movwf	(_c+1)& (0+255),b
  1126   00213E  0E00               	movlw	0
  1127   002140  6F60               	movwf	_c& (0+255),b
  1128                           
  1129                           ;calcmain.c: 143:     while (c<1) {
  1130   002142  EFB1  F010         	goto	l106
  1131   002146                     l107:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;calcmain.c: 144:         PORTBbits.RB2 = 1;
  1135   002146  84CB               	bsf	203,2,c	;volatile
  1136                           
  1137                           ;calcmain.c: 145:         if (PORTBbits.RB7 == 1) c = c+1;
  1138   002148  AECB               	btfss	203,7,c	;volatile
  1139   00214A  EFA9  F010         	goto	u511
  1140   00214E  EFAB  F010         	goto	u510
  1141   002152                     u511:
  1142   002152  EFB1  F010         	goto	l106
  1143   002156                     u510:
  1144   002156                     
  1145                           ; BSR set to: 0
  1146   002156  0E01               	movlw	1
  1147   002158  2560               	addwf	_c& (0+255),w,b
  1148   00215A  6F60               	movwf	_c& (0+255),b
  1149   00215C  0E00               	movlw	0
  1150   00215E  2161               	addwfc	(_c+1)& (0+255),w,b
  1151   002160  6F61               	movwf	(_c+1)& (0+255),b
  1152   002162                     l106:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;calcmain.c: 143:     while (c<1) {
  1156   002162  BF61               	btfsc	(_c+1)& (0+255),7,b
  1157   002164  EFBC  F010         	goto	u521
  1158   002168  5161               	movf	(_c+1)& (0+255),w,b
  1159   00216A  E108               	bnz	u520
  1160   00216C  0560               	decf	_c& (0+255),w,b
  1161   00216E  A0D8               	btfss	status,0,c
  1162   002170  EFBC  F010         	goto	u521
  1163   002174  EFBE  F010         	goto	u520
  1164   002178                     u521:
  1165   002178  EFA3  F010         	goto	l107
  1166   00217C                     u520:
  1167   00217C                     
  1168                           ; BSR set to: 0
  1169                           ;calcmain.c: 147:     if (op_reg == 1) display_reg = (x_reg + y_reg);
  1170   00217C  0405               	decf	5,w,c
  1171   00217E  1006               	iorwf	6,w,c
  1172   002180  A4D8               	btfss	status,2,c
  1173   002182  EFC5  F010         	goto	u531
  1174   002186  EFC7  F010         	goto	u530
  1175   00218A                     u531:
  1176   00218A  EFCC  F010         	goto	l1161
  1177   00218E                     u530:
  1178   00218E                     
  1179                           ; BSR set to: 0
  1180   00218E  5001               	movf	1,w,c
  1181   002190  2403               	addwf	3,w,c
  1182   002192  6E07               	movwf	7,c
  1183   002194  EF06  F011         	goto	l1173
  1184   002198                     l1161:
  1185                           
  1186                           ; BSR set to: 0
  1187   002198  0E02               	movlw	2
  1188   00219A  1805               	xorwf	5,w,c
  1189   00219C  1006               	iorwf	6,w,c
  1190   00219E  A4D8               	btfss	status,2,c
  1191   0021A0  EFD4  F010         	goto	u541
  1192   0021A4  EFD6  F010         	goto	u540
  1193   0021A8                     u541:
  1194   0021A8  EFDD  F010         	goto	l1165
  1195   0021AC                     u540:
  1196   0021AC                     
  1197                           ; BSR set to: 0
  1198   0021AC  5003               	movf	3,w,c
  1199   0021AE  5C01               	subwf	1,w,c
  1200   0021B0  6E10               	movwf	??_solve^0,c
  1201   0021B2  2810               	incf	??_solve^0,w,c
  1202   0021B4  6E07               	movwf	7,c
  1203   0021B6  EF06  F011         	goto	l1173
  1204   0021BA                     l1165:
  1205                           
  1206                           ; BSR set to: 0
  1207   0021BA  0E03               	movlw	3
  1208   0021BC  1805               	xorwf	5,w,c
  1209   0021BE  1006               	iorwf	6,w,c
  1210   0021C0  A4D8               	btfss	status,2,c
  1211   0021C2  EFE5  F010         	goto	u551
  1212   0021C6  EFE7  F010         	goto	u550
  1213   0021CA                     u551:
  1214   0021CA  EFEE  F010         	goto	l1169
  1215   0021CE                     u550:
  1216   0021CE                     
  1217                           ; BSR set to: 0
  1218   0021CE  5001               	movf	1,w,c
  1219   0021D0  0203               	mulwf	3,c
  1220   0021D2  006F FFCC F007     	movff	prodl,7
  1221   0021D8  EF06  F011         	goto	l1173
  1222   0021DC                     l1169:
  1223                           
  1224                           ; BSR set to: 0
  1225   0021DC  0E04               	movlw	4
  1226   0021DE  1805               	xorwf	5,w,c
  1227   0021E0  1006               	iorwf	6,w,c
  1228   0021E2  A4D8               	btfss	status,2,c
  1229   0021E4  EFF6  F010         	goto	u561
  1230   0021E8  EFF8  F010         	goto	u560
  1231   0021EC                     u561:
  1232   0021EC  EF06  F011         	goto	l113
  1233   0021F0                     u560:
  1234   0021F0                     
  1235                           ; BSR set to: 0
  1236   0021F0  C001 F008          	movff	1,___awdiv@dividend
  1237   0021F4  C002 F009          	movff	2,___awdiv@dividend+1
  1238   0021F8  C003 F00A          	movff	3,___awdiv@divisor
  1239   0021FC  C004 F00B          	movff	4,___awdiv@divisor+1
  1240   002200  EC08  F011         	call	___awdiv	;wreg free
  1241   002204  5008               	movf	?___awdiv^0,w,c
  1242   002206  6E07               	movwf	7,c
  1243   002208  EF06  F011         	goto	l1173
  1244   00220C                     l113:
  1245   00220C                     l1173:
  1246                           
  1247                           ;calcmain.c: 151:     PORTBbits.RB2 = 0;
  1248   00220C  94CB               	bcf	203,2,c	;volatile
  1249   00220E  0012               	return		;funcret
  1250   002210                     __end_of_solve:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function ___awdiv *****************
  1254 ;; Defined at:
  1255 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  dividend        2    0[COMRAM] int 
  1258 ;;  divisor         2    2[COMRAM] int 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  quotient        2    6[COMRAM] int 
  1261 ;;  sign            1    5[COMRAM] unsigned char 
  1262 ;;  counter         1    4[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    0[COMRAM] int 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1273 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1275 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1276 ;;Total ram usage:        8 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_solve
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text2
  1286   002210                     __ptext2:
  1287                           	callstack 0
  1288   002210                     ___awdiv:
  1289                           	callstack 29
  1290   002210  6A0D               	clrf	___awdiv@sign^0,c
  1291   002212  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
  1292   002214  EF10  F011         	goto	u290
  1293   002218  EF0E  F011         	goto	u291
  1294   00221C                     u291:
  1295   00221C  EF16  F011         	goto	l1019
  1296   002220                     u290:
  1297   002220  6C0A               	negf	___awdiv@divisor^0,c
  1298   002222  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1299   002224  B0D8               	btfsc	status,0,c
  1300   002226  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1301   002228  0E01               	movlw	1
  1302   00222A  6E0D               	movwf	___awdiv@sign^0,c
  1303   00222C                     l1019:
  1304   00222C  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
  1305   00222E  EF1D  F011         	goto	u300
  1306   002232  EF1B  F011         	goto	u301
  1307   002236                     u301:
  1308   002236  EF23  F011         	goto	l1025
  1309   00223A                     u300:
  1310   00223A  6C08               	negf	___awdiv@dividend^0,c
  1311   00223C  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1312   00223E  B0D8               	btfsc	status,0,c
  1313   002240  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1314   002242  0E01               	movlw	1
  1315   002244  1A0D               	xorwf	___awdiv@sign^0,f,c
  1316   002246                     l1025:
  1317   002246  0E00               	movlw	0
  1318   002248  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1319   00224A  0E00               	movlw	0
  1320   00224C  6E0E               	movwf	___awdiv@quotient^0,c
  1321   00224E  500A               	movf	___awdiv@divisor^0,w,c
  1322   002250  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1323   002252  B4D8               	btfsc	status,2,c
  1324   002254  EF2E  F011         	goto	u311
  1325   002258  EF30  F011         	goto	u310
  1326   00225C                     u311:
  1327   00225C  EF58  F011         	goto	l1047
  1328   002260                     u310:
  1329   002260  0E01               	movlw	1
  1330   002262  6E0C               	movwf	___awdiv@counter^0,c
  1331   002264  EF38  F011         	goto	l1033
  1332   002268                     l1031:
  1333   002268  90D8               	bcf	status,0,c
  1334   00226A  360A               	rlcf	___awdiv@divisor^0,f,c
  1335   00226C  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1336   00226E  2A0C               	incf	___awdiv@counter^0,f,c
  1337   002270                     l1033:
  1338   002270  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1339   002272  EF3D  F011         	goto	u321
  1340   002276  EF3F  F011         	goto	u320
  1341   00227A                     u321:
  1342   00227A  EF34  F011         	goto	l1031
  1343   00227E                     u320:
  1344   00227E                     l1035:
  1345   00227E  90D8               	bcf	status,0,c
  1346   002280  360E               	rlcf	___awdiv@quotient^0,f,c
  1347   002282  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1348   002284  500A               	movf	___awdiv@divisor^0,w,c
  1349   002286  5C08               	subwf	___awdiv@dividend^0,w,c
  1350   002288  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1351   00228A  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1352   00228C  A0D8               	btfss	status,0,c
  1353   00228E  EF4B  F011         	goto	u331
  1354   002292  EF4D  F011         	goto	u330
  1355   002296                     u331:
  1356   002296  EF52  F011         	goto	l1043
  1357   00229A                     u330:
  1358   00229A  500A               	movf	___awdiv@divisor^0,w,c
  1359   00229C  5E08               	subwf	___awdiv@dividend^0,f,c
  1360   00229E  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1361   0022A0  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1362   0022A2  800E               	bsf	___awdiv@quotient^0,0,c
  1363   0022A4                     l1043:
  1364   0022A4  90D8               	bcf	status,0,c
  1365   0022A6  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1366   0022A8  320A               	rrcf	___awdiv@divisor^0,f,c
  1367   0022AA  2E0C               	decfsz	___awdiv@counter^0,f,c
  1368   0022AC  EF3F  F011         	goto	l1035
  1369   0022B0                     l1047:
  1370   0022B0  500D               	movf	___awdiv@sign^0,w,c
  1371   0022B2  B4D8               	btfsc	status,2,c
  1372   0022B4  EF5E  F011         	goto	u341
  1373   0022B8  EF60  F011         	goto	u340
  1374   0022BC                     u341:
  1375   0022BC  EF64  F011         	goto	l1051
  1376   0022C0                     u340:
  1377   0022C0  6C0E               	negf	___awdiv@quotient^0,c
  1378   0022C2  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1379   0022C4  B0D8               	btfsc	status,0,c
  1380   0022C6  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1381   0022C8                     l1051:
  1382   0022C8  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1383   0022CC  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1384   0022D0  0012               	return		;funcret
  1385   0022D2                     __end_of___awdiv:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _op *****************
  1389 ;; Defined at:
  1390 ;;		line 127 in file "calcmain.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text3
  1418   002374                     __ptext3:
  1419                           	callstack 0
  1420   002374                     _op:
  1421                           	callstack 30
  1422   002374                     
  1423                           ;calcmain.c: 128:     b = 0;
  1424   002374  0E00               	movlw	0
  1425   002376  0100               	movlb	0	; () banked
  1426   002378  6F63               	movwf	(_b+1)& (0+255),b
  1427   00237A  0E00               	movlw	0
  1428   00237C  6F62               	movwf	_b& (0+255),b
  1429                           
  1430                           ;calcmain.c: 130:     while (b<1) {
  1431   00237E  EFFD  F011         	goto	l1151
  1432   002382                     l94:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;calcmain.c: 131:         PORTBbits.RB3 = 1;
  1436   002382  86CB               	bsf	203,3,c	;volatile
  1437                           
  1438                           ;calcmain.c: 132:         if (PORTBbits.RB4 == 1) op_reg = 1, b = b+1;
  1439   002384  A8CB               	btfss	203,4,c	;volatile
  1440   002386  EFC7  F011         	goto	u461
  1441   00238A  EFC9  F011         	goto	u460
  1442   00238E                     u461:
  1443   00238E  EFD5  F011         	goto	l95
  1444   002392                     u460:
  1445   002392                     
  1446                           ; BSR set to: 0
  1447   002392  0E00               	movlw	0
  1448   002394  6E06               	movwf	6,c
  1449   002396  0E01               	movlw	1
  1450   002398  6E05               	movwf	5,c
  1451   00239A                     l1135:
  1452                           
  1453                           ; BSR set to: 0
  1454   00239A  0E01               	movlw	1
  1455   00239C  2562               	addwf	_b& (0+255),w,b
  1456   00239E  6F62               	movwf	_b& (0+255),b
  1457   0023A0  0E00               	movlw	0
  1458   0023A2  2163               	addwfc	(_b+1)& (0+255),w,b
  1459   0023A4  6F63               	movwf	(_b+1)& (0+255),b
  1460   0023A6  EFFC  F011         	goto	l1149
  1461   0023AA                     l95:
  1462                           
  1463                           ; BSR set to: 0
  1464   0023AA  AACB               	btfss	203,5,c	;volatile
  1465   0023AC  EFDA  F011         	goto	u471
  1466   0023B0  EFDC  F011         	goto	u470
  1467   0023B4                     u471:
  1468   0023B4  EFE2  F011         	goto	l97
  1469   0023B8                     u470:
  1470   0023B8                     
  1471                           ; BSR set to: 0
  1472   0023B8  0E00               	movlw	0
  1473   0023BA  6E06               	movwf	6,c
  1474   0023BC  0E02               	movlw	2
  1475   0023BE  6E05               	movwf	5,c
  1476   0023C0  EFCD  F011         	goto	l1135
  1477   0023C4                     l97:
  1478                           
  1479                           ; BSR set to: 0
  1480   0023C4  ACCB               	btfss	203,6,c	;volatile
  1481   0023C6  EFE7  F011         	goto	u481
  1482   0023CA  EFE9  F011         	goto	u480
  1483   0023CE                     u481:
  1484   0023CE  EFEF  F011         	goto	l99
  1485   0023D2                     u480:
  1486   0023D2                     
  1487                           ; BSR set to: 0
  1488   0023D2  0E00               	movlw	0
  1489   0023D4  6E06               	movwf	6,c
  1490   0023D6  0E03               	movlw	3
  1491   0023D8  6E05               	movwf	5,c
  1492   0023DA  EFCD  F011         	goto	l1135
  1493   0023DE                     l99:
  1494                           
  1495                           ; BSR set to: 0
  1496   0023DE  AECB               	btfss	203,7,c	;volatile
  1497   0023E0  EFF4  F011         	goto	u491
  1498   0023E4  EFF6  F011         	goto	u490
  1499   0023E8                     u491:
  1500   0023E8  EFFC  F011         	goto	l98
  1501   0023EC                     u490:
  1502   0023EC                     
  1503                           ; BSR set to: 0
  1504   0023EC  0E00               	movlw	0
  1505   0023EE  6E06               	movwf	6,c
  1506   0023F0  0E04               	movlw	4
  1507   0023F2  6E05               	movwf	5,c
  1508   0023F4  EFCD  F011         	goto	l1135
  1509   0023F8                     l98:
  1510   0023F8                     l1149:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;calcmain.c: 136:         PORTBbits.RB3 = 0;
  1514   0023F8  96CB               	bcf	203,3,c	;volatile
  1515   0023FA                     l1151:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;calcmain.c: 130:     while (b<1) {
  1519   0023FA  BF63               	btfsc	(_b+1)& (0+255),7,b
  1520   0023FC  EF08  F012         	goto	u501
  1521   002400  5163               	movf	(_b+1)& (0+255),w,b
  1522   002402  E108               	bnz	u500
  1523   002404  0562               	decf	_b& (0+255),w,b
  1524   002406  A0D8               	btfss	status,0,c
  1525   002408  EF08  F012         	goto	u501
  1526   00240C  EF0A  F012         	goto	u500
  1527   002410                     u501:
  1528   002410  EFC1  F011         	goto	l94
  1529   002414                     u500:
  1530   002414                     
  1531                           ; BSR set to: 0
  1532   002414  0012               	return		;funcret
  1533   002416                     __end_of_op:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _initialize *****************
  1537 ;; Defined at:
  1538 ;;		line 68 in file "calcmain.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 1
  1559 ;; This function calls:
  1560 ;;		_setupB
  1561 ;;		_setupD
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text4
  1568   002416                     __ptext4:
  1569                           	callstack 0
  1570   002416                     _initialize:
  1571                           	callstack 29
  1572   002416                     
  1573                           ;calcmain.c: 69:     x_reg = 0;
  1574   002416  0E00               	movlw	0
  1575   002418  6E02               	movwf	2,c
  1576   00241A  0E00               	movlw	0
  1577   00241C  6E01               	movwf	1,c
  1578                           
  1579                           ;calcmain.c: 70:     y_reg = 0;
  1580   00241E  0E00               	movlw	0
  1581   002420  6E04               	movwf	4,c
  1582   002422  0E00               	movlw	0
  1583   002424  6E03               	movwf	3,c
  1584   002426                     
  1585                           ;calcmain.c: 71:     button = 0;
  1586   002426  0100               	movlb	0	; () banked
  1587   002428  6B66               	clrf	_button& (0+255),b
  1588                           
  1589                           ;calcmain.c: 72:     op_reg = 0;
  1590   00242A  0E00               	movlw	0
  1591   00242C  6E06               	movwf	6,c
  1592   00242E  0E00               	movlw	0
  1593   002430  6E05               	movwf	5,c
  1594   002432                     
  1595                           ; BSR set to: 0
  1596                           ;calcmain.c: 73:     display_reg = 0;
  1597   002432  6A07               	clrf	7,c
  1598   002434                     
  1599                           ; BSR set to: 0
  1600                           ;calcmain.c: 74:     setupB();
  1601   002434  EC36  F012         	call	_setupB	;wreg free
  1602                           
  1603                           ;calcmain.c: 75:     setupD();
  1604   002438  EC3D  F012         	call	_setupD	;wreg free
  1605   00243C                     
  1606                           ;calcmain.c: 76:     a = 0;
  1607   00243C  0E00               	movlw	0
  1608   00243E  0100               	movlb	0	; () banked
  1609   002440  6F65               	movwf	(_a+1)& (0+255),b
  1610   002442  0E00               	movlw	0
  1611   002444  6F64               	movwf	_a& (0+255),b
  1612   002446                     
  1613                           ; BSR set to: 0
  1614                           ;calcmain.c: 77:     b = 0;
  1615   002446  0E00               	movlw	0
  1616   002448  6F63               	movwf	(_b+1)& (0+255),b
  1617   00244A  0E00               	movlw	0
  1618   00244C  6F62               	movwf	_b& (0+255),b
  1619   00244E                     
  1620                           ; BSR set to: 0
  1621                           ;calcmain.c: 78:     c = 0;
  1622   00244E  0E00               	movlw	0
  1623   002450  6F61               	movwf	(_c+1)& (0+255),b
  1624   002452  0E00               	movlw	0
  1625   002454  6F60               	movwf	_c& (0+255),b
  1626   002456                     
  1627                           ; BSR set to: 0
  1628                           ;calcmain.c: 79:     button = 0;
  1629   002456  6B66               	clrf	_button& (0+255),b
  1630   002458                     
  1631                           ; BSR set to: 0
  1632   002458  0012               	return		;funcret
  1633   00245A                     __end_of_initialize:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _setupD *****************
  1637 ;; Defined at:
  1638 ;;		line 92 in file "calcmain.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		None
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_initialize
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text5
  1666   00247A                     __ptext5:
  1667                           	callstack 0
  1668   00247A                     _setupD:
  1669                           	callstack 29
  1670   00247A                     
  1671                           ;calcmain.c: 93:     PORTD = 0x00;
  1672   00247A  6ACD               	clrf	205,c	;volatile
  1673                           
  1674                           ;calcmain.c: 94:     TRISD = 0x00;
  1675   00247C  6AC5               	clrf	197,c	;volatile
  1676                           
  1677                           ;calcmain.c: 95:     LATD = 0x00;
  1678   00247E  6ABD               	clrf	189,c	;volatile
  1679                           
  1680                           ;calcmain.c: 96:     ANSELD = 0x00;
  1681   002480  013A               	movlb	58	; () banked
  1682   002482  6B70               	clrf	112,b	;volatile
  1683   002484                     
  1684                           ; BSR set to: 58
  1685   002484  0012               	return		;funcret
  1686   002486                     __end_of_setupD:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _setupB *****************
  1690 ;; Defined at:
  1691 ;;		line 85 in file "calcmain.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_initialize
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text6
  1719   00246C                     __ptext6:
  1720                           	callstack 0
  1721   00246C                     _setupB:
  1722                           	callstack 29
  1723   00246C                     
  1724                           ;calcmain.c: 86:     PORTB = 0x00;
  1725   00246C  6ACB               	clrf	203,c	;volatile
  1726   00246E                     
  1727                           ;calcmain.c: 87:     TRISB = 0b11110000;
  1728   00246E  0EF0               	movlw	240
  1729   002470  6EC3               	movwf	195,c	;volatile
  1730   002472                     
  1731                           ;calcmain.c: 88:     LATB = 0x00;
  1732   002472  6ABB               	clrf	187,c	;volatile
  1733   002474                     
  1734                           ;calcmain.c: 89:     ANSELB = 0x00;
  1735   002474  013A               	movlb	58	; () banked
  1736   002476  6B50               	clrf	80,b	;volatile
  1737   002478                     
  1738                           ; BSR set to: 58
  1739   002478  0012               	return		;funcret
  1740   00247A                     __end_of_setupB:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _check_keypad *****************
  1744 ;; Defined at:
  1745 ;;		line 101 in file "calcmain.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:    COMRAMh   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text7
  1773   002002                     __ptext7:
  1774                           	callstack 0
  1775   002002                     _check_keypad:
  1776                           	callstack 30
  1777   002002                     
  1778                           ;calcmain.c: 102:     a = 0;
  1779   002002  0E00               	movlw	0
  1780   002004  0100               	movlb	0	; () banked
  1781   002006  6F65               	movwf	(_a+1)& (0+255),b
  1782   002008  0E00               	movlw	0
  1783   00200A  6F64               	movwf	_a& (0+255),b
  1784   00200C                     
  1785                           ; BSR set to: 0
  1786                           ;calcmain.c: 103:     button = 0;
  1787   00200C  6B66               	clrf	_button& (0+255),b
  1788                           
  1789                           ;calcmain.c: 104:     while (a<1) {
  1790   00200E  EF8E  F010         	goto	l1129
  1791   002012                     l71:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;calcmain.c: 105:         PORTBbits.RB0 = 1;
  1795   002012  80CB               	bsf	203,0,c	;volatile
  1796                           
  1797                           ;calcmain.c: 106:         if (PORTBbits.RB4 == 1) button = 1, a = a+1;
  1798   002014  A8CB               	btfss	203,4,c	;volatile
  1799   002016  EF0F  F010         	goto	u351
  1800   00201A  EF11  F010         	goto	u350
  1801   00201E                     u351:
  1802   00201E  EF1B  F010         	goto	l72
  1803   002022                     u350:
  1804   002022                     
  1805                           ; BSR set to: 0
  1806   002022  0E01               	movlw	1
  1807   002024  6F66               	movwf	_button& (0+255),b
  1808   002026                     l1077:
  1809                           
  1810                           ; BSR set to: 0
  1811   002026  0E01               	movlw	1
  1812   002028  2564               	addwf	_a& (0+255),w,b
  1813   00202A  6F64               	movwf	_a& (0+255),b
  1814   00202C  0E00               	movlw	0
  1815   00202E  2165               	addwfc	(_a+1)& (0+255),w,b
  1816   002030  6F65               	movwf	(_a+1)& (0+255),b
  1817   002032  EF31  F010         	goto	l1087
  1818   002036                     l72:
  1819                           
  1820                           ; BSR set to: 0
  1821   002036  AACB               	btfss	203,5,c	;volatile
  1822   002038  EF20  F010         	goto	u361
  1823   00203C  EF22  F010         	goto	u360
  1824   002040                     u361:
  1825   002040  EF26  F010         	goto	l74
  1826   002044                     u360:
  1827   002044                     
  1828                           ; BSR set to: 0
  1829   002044  0E04               	movlw	4
  1830   002046  6F66               	movwf	_button& (0+255),b
  1831   002048  EF13  F010         	goto	l1077
  1832   00204C                     l74:
  1833                           
  1834                           ; BSR set to: 0
  1835   00204C  ACCB               	btfss	203,6,c	;volatile
  1836   00204E  EF2B  F010         	goto	u371
  1837   002052  EF2D  F010         	goto	u370
  1838   002056                     u371:
  1839   002056  EF31  F010         	goto	l1087
  1840   00205A                     u370:
  1841   00205A                     
  1842                           ; BSR set to: 0
  1843   00205A  0E07               	movlw	7
  1844   00205C  6F66               	movwf	_button& (0+255),b
  1845   00205E  EF13  F010         	goto	l1077
  1846   002062                     l1087:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;calcmain.c: 109:         PORTBbits.RB0 = 0;
  1850   002062  90CB               	bcf	203,0,c	;volatile
  1851   002064                     
  1852                           ; BSR set to: 0
  1853                           ;calcmain.c: 111:         PORTBbits.RB1 = 1;
  1854   002064  82CB               	bsf	203,1,c	;volatile
  1855   002066                     
  1856                           ; BSR set to: 0
  1857                           ;calcmain.c: 112:         if (PORTBbits.RB4 == 1) button = 2, a = a+1;
  1858   002066  A8CB               	btfss	203,4,c	;volatile
  1859   002068  EF38  F010         	goto	u381
  1860   00206C  EF3A  F010         	goto	u380
  1861   002070                     u381:
  1862   002070  EF44  F010         	goto	l77
  1863   002074                     u380:
  1864   002074                     
  1865                           ; BSR set to: 0
  1866   002074  0E02               	movlw	2
  1867   002076  6F66               	movwf	_button& (0+255),b
  1868   002078                     l1095:
  1869                           
  1870                           ; BSR set to: 0
  1871   002078  0E01               	movlw	1
  1872   00207A  2564               	addwf	_a& (0+255),w,b
  1873   00207C  6F64               	movwf	_a& (0+255),b
  1874   00207E  0E00               	movlw	0
  1875   002080  2165               	addwfc	(_a+1)& (0+255),w,b
  1876   002082  6F65               	movwf	(_a+1)& (0+255),b
  1877   002084  EF64  F010         	goto	l1109
  1878   002088                     l77:
  1879                           
  1880                           ; BSR set to: 0
  1881   002088  AACB               	btfss	203,5,c	;volatile
  1882   00208A  EF49  F010         	goto	u391
  1883   00208E  EF4B  F010         	goto	u390
  1884   002092                     u391:
  1885   002092  EF4F  F010         	goto	l79
  1886   002096                     u390:
  1887   002096                     
  1888                           ; BSR set to: 0
  1889   002096  0E05               	movlw	5
  1890   002098  6F66               	movwf	_button& (0+255),b
  1891   00209A  EF3C  F010         	goto	l1095
  1892   00209E                     l79:
  1893                           
  1894                           ; BSR set to: 0
  1895   00209E  ACCB               	btfss	203,6,c	;volatile
  1896   0020A0  EF54  F010         	goto	u401
  1897   0020A4  EF56  F010         	goto	u400
  1898   0020A8                     u401:
  1899   0020A8  EF5A  F010         	goto	l81
  1900   0020AC                     u400:
  1901   0020AC                     
  1902                           ; BSR set to: 0
  1903   0020AC  0E08               	movlw	8
  1904   0020AE  6F66               	movwf	_button& (0+255),b
  1905   0020B0  EF3C  F010         	goto	l1095
  1906   0020B4                     l81:
  1907                           
  1908                           ; BSR set to: 0
  1909   0020B4  AECB               	btfss	203,7,c	;volatile
  1910   0020B6  EF5F  F010         	goto	u411
  1911   0020BA  EF61  F010         	goto	u410
  1912   0020BE                     u411:
  1913   0020BE  EF64  F010         	goto	l80
  1914   0020C2                     u410:
  1915   0020C2                     
  1916                           ; BSR set to: 0
  1917   0020C2  6B66               	clrf	_button& (0+255),b
  1918   0020C4  EF3C  F010         	goto	l1095
  1919   0020C8                     l80:
  1920   0020C8                     l1109:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;calcmain.c: 116:         PORTBbits.RB1 = 0;
  1924   0020C8  92CB               	bcf	203,1,c	;volatile
  1925   0020CA                     
  1926                           ; BSR set to: 0
  1927                           ;calcmain.c: 118:         PORTBbits.RB2 = 1;
  1928   0020CA  84CB               	bsf	203,2,c	;volatile
  1929   0020CC                     
  1930                           ; BSR set to: 0
  1931                           ;calcmain.c: 119:         if (PORTBbits.RB4 == 1) button = 3, a = a+1;
  1932   0020CC  A8CB               	btfss	203,4,c	;volatile
  1933   0020CE  EF6B  F010         	goto	u421
  1934   0020D2  EF6D  F010         	goto	u420
  1935   0020D6                     u421:
  1936   0020D6  EF77  F010         	goto	l84
  1937   0020DA                     u420:
  1938   0020DA                     
  1939                           ; BSR set to: 0
  1940   0020DA  0E03               	movlw	3
  1941   0020DC  6F66               	movwf	_button& (0+255),b
  1942   0020DE                     l1117:
  1943                           
  1944                           ; BSR set to: 0
  1945   0020DE  0E01               	movlw	1
  1946   0020E0  2564               	addwf	_a& (0+255),w,b
  1947   0020E2  6F64               	movwf	_a& (0+255),b
  1948   0020E4  0E00               	movlw	0
  1949   0020E6  2165               	addwfc	(_a+1)& (0+255),w,b
  1950   0020E8  6F65               	movwf	(_a+1)& (0+255),b
  1951   0020EA  EF8D  F010         	goto	l1127
  1952   0020EE                     l84:
  1953                           
  1954                           ; BSR set to: 0
  1955   0020EE  AACB               	btfss	203,5,c	;volatile
  1956   0020F0  EF7C  F010         	goto	u431
  1957   0020F4  EF7E  F010         	goto	u430
  1958   0020F8                     u431:
  1959   0020F8  EF82  F010         	goto	l86
  1960   0020FC                     u430:
  1961   0020FC                     
  1962                           ; BSR set to: 0
  1963   0020FC  0E06               	movlw	6
  1964   0020FE  6F66               	movwf	_button& (0+255),b
  1965   002100  EF6F  F010         	goto	l1117
  1966   002104                     l86:
  1967                           
  1968                           ; BSR set to: 0
  1969   002104  ACCB               	btfss	203,6,c	;volatile
  1970   002106  EF87  F010         	goto	u441
  1971   00210A  EF89  F010         	goto	u440
  1972   00210E                     u441:
  1973   00210E  EF8D  F010         	goto	l1127
  1974   002112                     u440:
  1975   002112                     
  1976                           ; BSR set to: 0
  1977   002112  0E09               	movlw	9
  1978   002114  6F66               	movwf	_button& (0+255),b
  1979   002116  EF6F  F010         	goto	l1117
  1980   00211A                     l1127:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;calcmain.c: 122:         PORTBbits.RB2 = 0;
  1984   00211A  94CB               	bcf	203,2,c	;volatile
  1985   00211C                     l1129:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;calcmain.c: 104:     while (a<1) {
  1989   00211C  BF65               	btfsc	(_a+1)& (0+255),7,b
  1990   00211E  EF99  F010         	goto	u451
  1991   002122  5165               	movf	(_a+1)& (0+255),w,b
  1992   002124  E108               	bnz	u450
  1993   002126  0564               	decf	_a& (0+255),w,b
  1994   002128  A0D8               	btfss	status,0,c
  1995   00212A  EF99  F010         	goto	u451
  1996   00212E  EF9B  F010         	goto	u450
  1997   002132                     u451:
  1998   002132  EF09  F010         	goto	l71
  1999   002136                     u450:
  2000   002136                     
  2001                           ; BSR set to: 0
  2002   002136  0012               	return		;funcret
  2003   002138                     __end_of_check_keypad:
  2004                           	callstack 0
  2005                           
  2006                           	psect	smallconst
  2007   002000                     __psmallconst:
  2008                           	callstack 0
  2009   002000  00                 	db	0
  2010   002001  00                 	db	0	; dummy byte at the end
  2011   002000                     __smallconst    set	__psmallconst
  2012   002000                     __mediumconst   set	__psmallconst
  2013   000000                     __activetblptr  equ	0
  2014                           
  2015                           	psect	rparam
  2016   000001                     ___rparam_used  equ	1
  2017   000000                     ___param_bank   equ	0
  2018   000000                     __Lparam        equ	__Lrparam
  2019   000000                     __Hparam        equ	__Hrparam
  2020                           
  2021                           	psect	config
  2022                           
  2023                           ;Config register CONFIG1L @ 0x300000
  2024                           ;	External Oscillator Selection
  2025                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2026                           ;	Reset Oscillator Selection
  2027                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2028   300000                     	org	3145728
  2029   300000  F8                 	db	248
  2030                           
  2031                           ;Config register CONFIG1H @ 0x300001
  2032                           ;	Clock out Enable bit
  2033                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2034                           ;	PRLOCKED One-Way Set Enable bit
  2035                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2036                           ;	Clock Switch Enable bit
  2037                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2038                           ;	Fail-Safe Clock Monitor Enable bit
  2039                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2040   300001                     	org	3145729
  2041   300001  FF                 	db	255
  2042                           
  2043                           ;Config register CONFIG2L @ 0x300002
  2044                           ;	MCLR Enable bit
  2045                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2046                           ;	Power-up timer selection bits
  2047                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2048                           ;	Multi-vector enable bit
  2049                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2050                           ;	IVTLOCK bit One-way set enable bit
  2051                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2052                           ;	Low Power BOR Enable bit
  2053                           ;	LPBOREN = OFF, ULPBOR disabled
  2054                           ;	Brown-out Reset Enable bits
  2055                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2056   300002                     	org	3145730
  2057   300002  FF                 	db	255
  2058                           
  2059                           ;Config register CONFIG2H @ 0x300003
  2060                           ;	Brown-out Reset Voltage Selection bits
  2061                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2062                           ;	ZCD Disable bit
  2063                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2064                           ;	PPSLOCK bit One-Way Set Enable bit
  2065                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2066                           ;	Stack Full/Underflow Reset Enable bit
  2067                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2068                           ;	Debugger Enable bit
  2069                           ;	DEBUG = OFF, Background debugger disabled
  2070                           ;	Extended Instruction Set Enable bit
  2071                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2072   300003                     	org	3145731
  2073   300003  FF                 	db	255
  2074                           
  2075                           ;Config register CONFIG3L @ 0x300004
  2076                           ;	WDT Period selection bits
  2077                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2078                           ;	WDT operating mode
  2079                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2080   300004                     	org	3145732
  2081   300004  9F                 	db	159
  2082                           
  2083                           ;Config register CONFIG3H @ 0x300005
  2084                           ;	WDT Window Select bits
  2085                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2086                           ;	WDT input clock selector
  2087                           ;	WDTCCS = SC, Software Control
  2088   300005                     	org	3145733
  2089   300005  FF                 	db	255
  2090                           
  2091                           ;Config register CONFIG4L @ 0x300006
  2092                           ;	Boot Block Size selection bits
  2093                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2094                           ;	Boot Block enable bit
  2095                           ;	BBEN = OFF, Boot block disabled
  2096                           ;	Storage Area Flash enable bit
  2097                           ;	SAFEN = OFF, SAF disabled
  2098                           ;	Application Block write protection bit
  2099                           ;	WRTAPP = OFF, Application Block not write protected
  2100   300006                     	org	3145734
  2101   300006  FF                 	db	255
  2102                           
  2103                           ;Config register CONFIG4H @ 0x300007
  2104                           ;	Boot Block Write Protection bit
  2105                           ;	WRTB = OFF, Boot Block not write-protected
  2106                           ;	Configuration Register Write Protection bit
  2107                           ;	WRTC = OFF, Configuration registers not write-protected
  2108                           ;	Data EEPROM Write Protection bit
  2109                           ;	WRTD = OFF, Data EEPROM not write-protected
  2110                           ;	SAF Write protection bit
  2111                           ;	WRTSAF = OFF, SAF not Write Protected
  2112                           ;	Low Voltage Programming Enable bit
  2113                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2114   300007                     	org	3145735
  2115   300007  FF                 	db	255
  2116                           
  2117                           ;Config register CONFIG5L @ 0x300008
  2118                           ;	PFM and Data EEPROM Code Protection bit
  2119                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2120   300008                     	org	3145736
  2121   300008  FF                 	db	255
  2122                           
  2123                           ;Config register CONFIG5H @ 0x300009
  2124                           ;	unspecified, using default values
  2125   300009                     	org	3145737
  2126   300009  FF                 	db	255
  2127                           tosu	equ	0x3FFF
  2128                           tosh	equ	0x3FFE
  2129                           tosl	equ	0x3FFD
  2130                           stkptr	equ	0x3FFC
  2131                           pclatu	equ	0x3FFB
  2132                           pclath	equ	0x3FFA
  2133                           pcl	equ	0x3FF9
  2134                           tblptru	equ	0x3FF8
  2135                           tblptrh	equ	0x3FF7
  2136                           tblptrl	equ	0x3FF6
  2137                           tablat	equ	0x3FF5
  2138                           prodh	equ	0x3FF4
  2139                           prodl	equ	0x3FF3
  2140                           indf0	equ	0x3FEF
  2141                           postinc0	equ	0x3FEE
  2142                           postdec0	equ	0x3FED
  2143                           preinc0	equ	0x3FEC
  2144                           plusw0	equ	0x3FEB
  2145                           fsr0h	equ	0x3FEA
  2146                           fsr0l	equ	0x3FE9
  2147                           wreg	equ	0x3FE8
  2148                           indf1	equ	0x3FE7
  2149                           postinc1	equ	0x3FE6
  2150                           postdec1	equ	0x3FE5
  2151                           preinc1	equ	0x3FE4
  2152                           plusw1	equ	0x3FE3
  2153                           fsr1h	equ	0x3FE2
  2154                           fsr1l	equ	0x3FE1
  2155                           bsr	equ	0x3FE0
  2156                           indf2	equ	0x3FDF
  2157                           postinc2	equ	0x3FDE
  2158                           postdec2	equ	0x3FDD
  2159                           preinc2	equ	0x3FDC
  2160                           plusw2	equ	0x3FDB
  2161                           fsr2h	equ	0x3FDA
  2162                           fsr2l	equ	0x3FD9
  2163                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          88     11      11
    BANK0           160      0       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAMh

    _main->_solve
    _solve->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     302
                                              9 COMRAMh    2     2      0
                       _check_keypad
                         _initialize
                                 _op
                              _solve
 ---------------------------------------------------------------------------------
 (1) _solve                                                1     1      0     302
                                              8 COMRAMh    1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAMh    8     4      4
 ---------------------------------------------------------------------------------
 (1) _op                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                             _setupB
                             _setupD
 ---------------------------------------------------------------------------------
 (2) _setupD                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupB                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_keypad                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_keypad
   _initialize
     _setupB
     _setupD
   _op
   _solve
     ___awdiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAMh           8184      0       0      0.0%
BITBIGSFRllh      1386      0       0      0.0%
BITBIGSFRlll       592      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       7      4.4%
COMRAMh             88     11      11     12.5%
BITCOMRAMh          88      0       0      0.0%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Apr 06 22:26:23 2025

                      _a 0064                        _b 0062                        _c 0060  
                     l61 2458                       l71 2012                       l55 22D2  
                     l80 20C8                       l72 2036                       l64 2478  
                     l81 20B4                       l90 2136                       l74 204C  
                     l67 2484                       l84 20EE                       l77 2088  
                     l86 2104                       l94 2382                       l79 209E  
                     l95 23AA                       l97 23C4                       l98 23F8  
                     l99 23DE             ___awdiv@sign 000D                       _op 2374  
                    l103 2414                      l113 220C                      l106 2162  
                    l107 2146                      l117 220E                      ?_op 0000  
                    l351 22D0                      u300 223A                      u301 2236  
                    u310 2260                      u311 225C                      u400 20AC  
                    u320 227E                      u401 20A8                      u321 227A  
                    u410 20C2                      u330 229A                      u411 20BE  
                    u331 2296                      u420 20DA                      u500 2414  
                    u340 22C0                      u421 20D6                      u501 2410  
                    u341 22BC                      u430 20FC                      u350 2022  
                    u510 2156                      u431 20F8                      u351 201E  
                    u511 2152                      u440 2112                      u360 2044  
                    u520 217C                      u441 210E                      u361 2040  
                    u521 2178                      u450 2136                      u370 205A  
                    u290 2220                      u530 218E                      u451 2132  
                    u371 2056                      u291 221C                      u531 218A  
                    u380 2074                      u460 2392                      u540 21AC  
                    u381 2070                      u461 238E                      u541 21A8  
                    u390 2096                      u470 23B8                      u550 21CE  
   __end_of_check_keypad 2138                      u391 2092                      u471 23B4  
                    u551 21CA                      u480 23D2                      u560 21F0  
                    u481 23CE                      u561 21EC                      u490 23EC  
                    u491 23E8                      u577 235E                      wreg 3FE8  
                   ??_op 0008                     l1001 246C                     l1003 246E  
                   l1011 2210                     l1101 20AC                     l1005 2472  
                   l1021 223A                     l1013 2212                     l1111 20CA  
                   l1007 2474                     l1031 2268                     l1023 2242  
                   l1015 2220                     l1113 20CC                     l1105 20C2  
                   l1009 247A                     l1041 22A2                     l1033 2270  
                   l1025 2246                     l1017 2228                     l1201 2348  
                   l1123 2112                     l1115 20DA                     l1131 2374  
                   l1051 22C8                     l1043 22A4                     l1035 227E  
                   l1027 224E                     l1019 222C                     l1203 234C  
                   l1117 20DE                     l1109 20C8                     l1061 2434  
                   l1141 23D2                     l1133 2392                     l1045 22AA  
                   l1037 2284                     l1029 2260                     l1205 234E  
                   l1119 20FC                     l1127 211A                     l1071 2002  
                   l1063 243C                     l1055 2416                     l1135 239A  
                   l1151 23FA                     l1039 229A                     l1047 22B0  
                   l1207 2354                     l1129 211C                     l1073 200C  
                   l1065 2446                     l1057 2426                     l1145 23EC  
                   l1137 23B8                     l1049 22C0                     l1161 2198  
                   l1153 2138                     l1091 2066                     l1083 205A  
                   l1075 2022                     l1067 244E                     l1059 2432  
                   l1171 21F0                     l1163 21AC                     l1155 2156  
                   l1093 2074                     l1077 2026                     l1069 2456  
                   l1149 23F8                     l1165 21BA                     l1173 220C  
                   l1157 217C                     l1181 22F8                     l1095 2078  
                   l1079 2044                     l1087 2062                     l1167 21CE  
                   l1159 218E                     l1191 2314                     l1183 22FC  
                   l1175 22D2                     l1097 2096                     l1089 2064  
                   l1169 21DC                     l1193 2332                     l1185 230A  
                   l1177 22D6                     l1195 2336                     l1187 230C  
                   l1179 22DA                     l1197 2344                     l1189 2310  
                   l1199 2346                     _LATB 3FBB                     _LATD 3FBD  
                   _main 22D2                     prodh 3FF4                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0008  
        __end_of___awdiv 22D2          ___awdiv@divisor 000A          ___awdiv@counter 000C  
                  _PORTB 3FCB                    _PORTD 3FCD                    _TRISB 3FC3  
                  _TRISD 3FC5                    _x_reg 0001                    _y_reg 0003  
                  _solve 2138                    status 3FD8          __initialization 245A  
           __end_of_main 2374                   ??_main 0011            __activetblptr 0000  
       ___awdiv@dividend 0008                   _ANSELB 3A50                   _ANSELD 3A70  
                 ?_solve 0000                ??___awdiv 000C                   _button 0066  
                 clear_0 2460         ___awdiv@quotient 000E                   _op_reg 0005  
                 isa$std 0001                   _setupB 246C                   _setupD 247A  
           __mediumconst 2000               __accesstop 0060  __end_of__initialization 2466  
          ___rparam_used 0001             _check_keypad 2002            __end_of_solve 2210  
             __end_of_op 2416                  ??_solve 0010               __pbssBANK0 0060  
                ?_setupB 0000                  ?_setupD 0000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 2210             __psmallconst 2000  
                __pcinit 245A                  __ramtop 2000               _initialize 2416  
                __ptext0 22D2                  __ptext1 2138                  __ptext2 2210  
                __ptext3 2374                  __ptext4 2416                  __ptext5 247A  
                __ptext6 246C                  __ptext7 2002     end_of_initialization 2466  
                postinc0 3FEE                _PORTBbits 3FCB                _PORTDbits 3FCD  
        __pcstackCOMRAMh 0008          __pcstackCOMRAMl 0000              ?_initialize 0000  
         __end_of_setupB 247A           __end_of_setupD 2486      start_initialization 245A  
               ??_setupB 0008                 ??_setupD 0008                 ?___awdiv 0008  
            __smallconst 2000              _display_reg 0007            ?_check_keypad 0000  
               __Hrparam 0000                 __Lrparam 0000             ??_initialize 0008  
         ??_check_keypad 0008       __end_of_initialize 245A                 isa$xinst 0000  
