

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 16 00:35:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	_seg_code_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=4,class=CODE,space=0,delta=1
    15                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   003FE0                     bsr             equ	16352
    56   003FE9                     fsr0            equ	16361
    57   003FEA                     fsr0h           equ	16362
    58   003FE9                     fsr0l           equ	16361
    59   003FE1                     fsr1            equ	16353
    60   003FE2                     fsr1h           equ	16354
    61   003FE1                     fsr1l           equ	16353
    62   003FD9                     fsr2            equ	16345
    63   003FDA                     fsr2h           equ	16346
    64   003FD9                     fsr2l           equ	16345
    65   003FEF                     indf0           equ	16367
    66   003FE7                     indf1           equ	16359
    67   003FDF                     indf2           equ	16351
    68   003FD2                     intcon          equ	16338
    69   0039E5                     nvmcon          equ	14821
    70   003FF9                     pcl             equ	16377
    71   003FFA                     pclath          equ	16378
    72   003FFB                     pclatu          equ	16379
    73   003FEB                     plusw0          equ	16363
    74   003FE3                     plusw1          equ	16355
    75   003FDB                     plusw2          equ	16347
    76   003FED                     postdec0        equ	16365
    77   003FE5                     postdec1        equ	16357
    78   003FDD                     postdec2        equ	16349
    79   003FEE                     postinc0        equ	16366
    80   003FE6                     postinc1        equ	16358
    81   003FDE                     postinc2        equ	16350
    82   003FEC                     preinc0         equ	16364
    83   003FE4                     preinc1         equ	16356
    84   003FDC                     preinc2         equ	16348
    85   003FF3                     prod            equ	16371
    86   003FF4                     prodh           equ	16372
    87   003FF3                     prodl           equ	16371
    88   003FD8                     status          equ	16344
    89   003FF5                     tablat          equ	16373
    90   003FF6                     tblptr          equ	16374
    91   003FF7                     tblptrh         equ	16375
    92   003FF6                     tblptrl         equ	16374
    93   003FF8                     tblptru         equ	16376
    94   003FFD                     tosl            equ	16381
    95   003FE8                     wreg            equ	16360
    96   003880                     STATUS_CSHAD    equ	14464	;# 
    97   003881                     WREG_CSHAD      equ	14465	;# 
    98   003882                     BSR_CSHAD       equ	14466	;# 
    99   003883                     SHADCON         equ	14467	;# 
   100   003884                     STATUS_SHAD     equ	14468	;# 
   101   003885                     WREG_SHAD       equ	14469	;# 
   102   003886                     BSR_SHAD        equ	14470	;# 
   103   003887                     PCLATH_SHAD     equ	14471	;# 
   104   003888                     PCLATU_SHAD     equ	14472	;# 
   105   003889                     FSR0SH          equ	14473	;# 
   106   003889                     FSR0L_SHAD      equ	14473	;# 
   107   00388A                     FSR0H_SHAD      equ	14474	;# 
   108   00388B                     FSR1SH          equ	14475	;# 
   109   00388B                     FSR1L_SHAD      equ	14475	;# 
   110   00388C                     FSR1H_SHAD      equ	14476	;# 
   111   00388D                     FSR2SH          equ	14477	;# 
   112   00388D                     FSR2L_SHAD      equ	14477	;# 
   113   00388E                     FSR2H_SHAD      equ	14478	;# 
   114   00388F                     PRODSH          equ	14479	;# 
   115   00388F                     PRODL_SHAD      equ	14479	;# 
   116   003890                     PRODH_SHAD      equ	14480	;# 
   117   00389D                     IVTADL          equ	14493	;# 
   118   00389E                     IVTADH          equ	14494	;# 
   119   00389F                     IVTADU          equ	14495	;# 
   120   00395B                     WDTCON0         equ	14683	;# 
   121   00395C                     WDTCON1         equ	14684	;# 
   122   00395D                     WDTPSL          equ	14685	;# 
   123   00395E                     WDTPSH          equ	14686	;# 
   124   00395F                     WDTTMR          equ	14687	;# 
   125   003960                     CRCDATA         equ	14688	;# 
   126   003960                     CRCDATL         equ	14688	;# 
   127   003961                     CRCDATH         equ	14689	;# 
   128   003962                     CRCACC          equ	14690	;# 
   129   003962                     CRCACCL         equ	14690	;# 
   130   003963                     CRCACCH         equ	14691	;# 
   131   003964                     CRCSHFT         equ	14692	;# 
   132   003964                     CRCSHIFTL       equ	14692	;# 
   133   003965                     CRCSHIFTH       equ	14693	;# 
   134   003966                     CRCXOR          equ	14694	;# 
   135   003966                     CRCXORL         equ	14694	;# 
   136   003967                     CRCXORH         equ	14695	;# 
   137   003968                     CRCCON0         equ	14696	;# 
   138   003969                     CRCCON1         equ	14697	;# 
   139   003976                     SCANLADR        equ	14710	;# 
   140   003976                     SCANLADRL       equ	14710	;# 
   141   003977                     SCANLADRH       equ	14711	;# 
   142   003978                     SCANLADRU       equ	14712	;# 
   143   003979                     SCANHADR        equ	14713	;# 
   144   003979                     SCANHADRL       equ	14713	;# 
   145   00397A                     SCANHADRH       equ	14714	;# 
   146   00397B                     SCANHADRU       equ	14715	;# 
   147   00397C                     SCANCON0        equ	14716	;# 
   148   00397D                     SCANTRIG        equ	14717	;# 
   149   003980                     IPR0            equ	14720	;# 
   150   003981                     IPR1            equ	14721	;# 
   151   003982                     IPR2            equ	14722	;# 
   152   003983                     IPR3            equ	14723	;# 
   153   003984                     IPR4            equ	14724	;# 
   154   003985                     IPR5            equ	14725	;# 
   155   003986                     IPR6            equ	14726	;# 
   156   003987                     IPR7            equ	14727	;# 
   157   003988                     IPR8            equ	14728	;# 
   158   003989                     IPR9            equ	14729	;# 
   159   00398A                     IPR10           equ	14730	;# 
   160   003990                     PIE0            equ	14736	;# 
   161   003991                     PIE1            equ	14737	;# 
   162   003992                     PIE2            equ	14738	;# 
   163   003993                     PIE3            equ	14739	;# 
   164   003994                     PIE4            equ	14740	;# 
   165   003995                     PIE5            equ	14741	;# 
   166   003996                     PIE6            equ	14742	;# 
   167   003997                     PIE7            equ	14743	;# 
   168   003998                     PIE8            equ	14744	;# 
   169   003999                     PIE9            equ	14745	;# 
   170   00399A                     PIE10           equ	14746	;# 
   171   0039A0                     PIR0            equ	14752	;# 
   172   0039A1                     PIR1            equ	14753	;# 
   173   0039A2                     PIR2            equ	14754	;# 
   174   0039A3                     PIR3            equ	14755	;# 
   175   0039A4                     PIR4            equ	14756	;# 
   176   0039A5                     PIR5            equ	14757	;# 
   177   0039A6                     PIR6            equ	14758	;# 
   178   0039A7                     PIR7            equ	14759	;# 
   179   0039A8                     PIR8            equ	14760	;# 
   180   0039A9                     PIR9            equ	14761	;# 
   181   0039AA                     PIR10           equ	14762	;# 
   182   0039C0                     PMD0            equ	14784	;# 
   183   0039C1                     PMD1            equ	14785	;# 
   184   0039C2                     PMD2            equ	14786	;# 
   185   0039C3                     PMD3            equ	14787	;# 
   186   0039C4                     PMD4            equ	14788	;# 
   187   0039C5                     PMD5            equ	14789	;# 
   188   0039C6                     PMD6            equ	14790	;# 
   189   0039C7                     PMD7            equ	14791	;# 
   190   0039D0                     BORCON          equ	14800	;# 
   191   0039D1                     VREGCON         equ	14801	;# 
   192   0039D8                     CPUDOZE         equ	14808	;# 
   193   0039D9                     OSCCON1         equ	14809	;# 
   194   0039DA                     OSCCON2         equ	14810	;# 
   195   0039DB                     OSCCON3         equ	14811	;# 
   196   0039DC                     OSCSTAT         equ	14812	;# 
   197   0039DC                     OSCSTAT1        equ	14812	;# 
   198   0039DD                     OSCEN           equ	14813	;# 
   199   0039DE                     OSCTUNE         equ	14814	;# 
   200   0039DF                     OSCFRQ          equ	14815	;# 
   201   0039E0                     NVMADRL         equ	14816	;# 
   202   0039E1                     NVMADRH         equ	14817	;# 
   203   0039E3                     NVMDAT          equ	14819	;# 
   204   0039E5                     NVMCON1         equ	14821	;# 
   205   0039E6                     NVMCON2         equ	14822	;# 
   206   0039EF                     PRLOCK          equ	14831	;# 
   207   0039F1                     ISRPR           equ	14833	;# 
   208   0039F2                     MAINPR          equ	14834	;# 
   209   0039F3                     DMA1PR          equ	14835	;# 
   210   0039F4                     DMA2PR          equ	14836	;# 
   211   0039F7                     SCANPR          equ	14839	;# 
   212   003A00                     RA0PPS          equ	14848	;# 
   213   003A01                     RA1PPS          equ	14849	;# 
   214   003A02                     RA2PPS          equ	14850	;# 
   215   003A03                     RA3PPS          equ	14851	;# 
   216   003A04                     RA4PPS          equ	14852	;# 
   217   003A05                     RA5PPS          equ	14853	;# 
   218   003A06                     RA6PPS          equ	14854	;# 
   219   003A07                     RA7PPS          equ	14855	;# 
   220   003A08                     RB0PPS          equ	14856	;# 
   221   003A09                     RB1PPS          equ	14857	;# 
   222   003A0A                     RB2PPS          equ	14858	;# 
   223   003A0B                     RB3PPS          equ	14859	;# 
   224   003A0C                     RB4PPS          equ	14860	;# 
   225   003A0D                     RB5PPS          equ	14861	;# 
   226   003A0E                     RB6PPS          equ	14862	;# 
   227   003A0F                     RB7PPS          equ	14863	;# 
   228   003A10                     RC0PPS          equ	14864	;# 
   229   003A11                     RC1PPS          equ	14865	;# 
   230   003A12                     RC2PPS          equ	14866	;# 
   231   003A13                     RC3PPS          equ	14867	;# 
   232   003A14                     RC4PPS          equ	14868	;# 
   233   003A15                     RC5PPS          equ	14869	;# 
   234   003A16                     RC6PPS          equ	14870	;# 
   235   003A17                     RC7PPS          equ	14871	;# 
   236   003A18                     RD0PPS          equ	14872	;# 
   237   003A19                     RD1PPS          equ	14873	;# 
   238   003A1A                     RD2PPS          equ	14874	;# 
   239   003A1B                     RD3PPS          equ	14875	;# 
   240   003A1C                     RD4PPS          equ	14876	;# 
   241   003A1D                     RD5PPS          equ	14877	;# 
   242   003A1E                     RD6PPS          equ	14878	;# 
   243   003A1F                     RD7PPS          equ	14879	;# 
   244   003A20                     RE0PPS          equ	14880	;# 
   245   003A21                     RE1PPS          equ	14881	;# 
   246   003A22                     RE2PPS          equ	14882	;# 
   247   003A40                     ANSELA          equ	14912	;# 
   248   003A41                     WPUA            equ	14913	;# 
   249   003A42                     ODCONA          equ	14914	;# 
   250   003A43                     SLRCONA         equ	14915	;# 
   251   003A44                     INLVLA          equ	14916	;# 
   252   003A45                     IOCAP           equ	14917	;# 
   253   003A46                     IOCAN           equ	14918	;# 
   254   003A47                     IOCAF           equ	14919	;# 
   255   003A50                     ANSELB          equ	14928	;# 
   256   003A51                     WPUB            equ	14929	;# 
   257   003A52                     ODCONB          equ	14930	;# 
   258   003A53                     SLRCONB         equ	14931	;# 
   259   003A54                     INLVLB          equ	14932	;# 
   260   003A55                     IOCBP           equ	14933	;# 
   261   003A56                     IOCBN           equ	14934	;# 
   262   003A57                     IOCBF           equ	14935	;# 
   263   003A5A                     RB1I2C          equ	14938	;# 
   264   003A5B                     RB2I2C          equ	14939	;# 
   265   003A60                     ANSELC          equ	14944	;# 
   266   003A61                     WPUC            equ	14945	;# 
   267   003A62                     ODCONC          equ	14946	;# 
   268   003A63                     SLRCONC         equ	14947	;# 
   269   003A64                     INLVLC          equ	14948	;# 
   270   003A65                     IOCCP           equ	14949	;# 
   271   003A66                     IOCCN           equ	14950	;# 
   272   003A67                     IOCCF           equ	14951	;# 
   273   003A6A                     RC3I2C          equ	14954	;# 
   274   003A6B                     RC4I2C          equ	14955	;# 
   275   003A70                     ANSELD          equ	14960	;# 
   276   003A71                     WPUD            equ	14961	;# 
   277   003A72                     ODCOND          equ	14962	;# 
   278   003A73                     SLRCOND         equ	14963	;# 
   279   003A74                     INLVLD          equ	14964	;# 
   280   003A7A                     RD0I2C          equ	14970	;# 
   281   003A7B                     RD1I2C          equ	14971	;# 
   282   003A80                     ANSELE          equ	14976	;# 
   283   003A81                     WPUE            equ	14977	;# 
   284   003A82                     ODCONE          equ	14978	;# 
   285   003A83                     SLRCONE         equ	14979	;# 
   286   003A84                     INLVLE          equ	14980	;# 
   287   003A85                     IOCEP           equ	14981	;# 
   288   003A86                     IOCEN           equ	14982	;# 
   289   003A87                     IOCEF           equ	14983	;# 
   290   003ABF                     PPSLOCK         equ	15039	;# 
   291   003AC0                     INT0PPS         equ	15040	;# 
   292   003AC1                     INT1PPS         equ	15041	;# 
   293   003AC2                     INT2PPS         equ	15042	;# 
   294   003AC3                     T0CKIPPS        equ	15043	;# 
   295   003AC4                     T1CKIPPS        equ	15044	;# 
   296   003AC5                     T1GPPS          equ	15045	;# 
   297   003AC6                     T3CKIPPS        equ	15046	;# 
   298   003AC7                     T3GPPS          equ	15047	;# 
   299   003AC8                     T5CKIPPS        equ	15048	;# 
   300   003AC9                     T5GPPS          equ	15049	;# 
   301   003ACA                     T2INPPS         equ	15050	;# 
   302   003ACB                     T4INPPS         equ	15051	;# 
   303   003ACC                     T6INPPS         equ	15052	;# 
   304   003ACD                     CCP1PPS         equ	15053	;# 
   305   003ACE                     CCP2PPS         equ	15054	;# 
   306   003ACF                     CCP3PPS         equ	15055	;# 
   307   003AD0                     CCP4PPS         equ	15056	;# 
   308   003AD1                     SMT1WINPPS      equ	15057	;# 
   309   003AD2                     SMT1SIGPPS      equ	15058	;# 
   310   003AD3                     CWG1INPPS       equ	15059	;# 
   311   003AD4                     CWG2INPPS       equ	15060	;# 
   312   003AD5                     CWG3INPPS       equ	15061	;# 
   313   003AD6                     MD1CARLPPS      equ	15062	;# 
   314   003AD7                     MD1CARHPPS      equ	15063	;# 
   315   003AD8                     MD1SRCPPS       equ	15064	;# 
   316   003AD9                     CLCIN0PPS       equ	15065	;# 
   317   003ADA                     CLCIN1PPS       equ	15066	;# 
   318   003ADB                     CLCIN2PPS       equ	15067	;# 
   319   003ADC                     CLCIN3PPS       equ	15068	;# 
   320   003ADD                     ADACTPPS        equ	15069	;# 
   321   003ADE                     SPI1SCKPPS      equ	15070	;# 
   322   003ADF                     SPI1SDIPPS      equ	15071	;# 
   323   003AE0                     SPI1SSPPS       equ	15072	;# 
   324   003AE1                     I2C1SCLPPS      equ	15073	;# 
   325   003AE2                     I2C1SDAPPS      equ	15074	;# 
   326   003AE3                     I2C2SCLPPS      equ	15075	;# 
   327   003AE4                     I2C2SDAPPS      equ	15076	;# 
   328   003AE5                     U1RXPPS         equ	15077	;# 
   329   003AE6                     U1CTSPPS        equ	15078	;# 
   330   003AE8                     U2RXPPS         equ	15080	;# 
   331   003AE9                     U2CTSPPS        equ	15081	;# 
   332   003BC9                     DMA2BUF         equ	15305	;# 
   333   003BCA                     DMA2DCNT        equ	15306	;# 
   334   003BCA                     DMA2DCNTL       equ	15306	;# 
   335   003BCB                     DMA2DCNTH       equ	15307	;# 
   336   003BCC                     DMA2DPTR        equ	15308	;# 
   337   003BCC                     DMA2DPTRL       equ	15308	;# 
   338   003BCD                     DMA2DPTRH       equ	15309	;# 
   339   003BCE                     DMA2DSZ         equ	15310	;# 
   340   003BCE                     DMA2DSZL        equ	15310	;# 
   341   003BCF                     DMA2DSZH        equ	15311	;# 
   342   003BD0                     DMA2DSA         equ	15312	;# 
   343   003BD0                     DMA2DSAL        equ	15312	;# 
   344   003BD1                     DMA2DSAH        equ	15313	;# 
   345   003BD2                     DMA2SCNT        equ	15314	;# 
   346   003BD2                     DMA2SCNTL       equ	15314	;# 
   347   003BD3                     DMA2SCNTH       equ	15315	;# 
   348   003BD4                     DMA2SPTR        equ	15316	;# 
   349   003BD4                     DMA2SPTRL       equ	15316	;# 
   350   003BD5                     DMA2SPTRH       equ	15317	;# 
   351   003BD6                     DMA2SPTRU       equ	15318	;# 
   352   003BD7                     DMA2SSZ         equ	15319	;# 
   353   003BD7                     DMA2SSZL        equ	15319	;# 
   354   003BD8                     DMA2SSZH        equ	15320	;# 
   355   003BD9                     DMA2SSA         equ	15321	;# 
   356   003BD9                     DMA2SSAL        equ	15321	;# 
   357   003BDA                     DMA2SSAH        equ	15322	;# 
   358   003BDB                     DMA2SSAU        equ	15323	;# 
   359   003BDC                     DMA2CON0        equ	15324	;# 
   360   003BDD                     DMA2CON1        equ	15325	;# 
   361   003BDE                     DMA2AIRQ        equ	15326	;# 
   362   003BDF                     DMA2SIRQ        equ	15327	;# 
   363   003BE9                     DMA1BUF         equ	15337	;# 
   364   003BEA                     DMA1DCNT        equ	15338	;# 
   365   003BEA                     DMA1DCNTL       equ	15338	;# 
   366   003BEB                     DMA1DCNTH       equ	15339	;# 
   367   003BEC                     DMA1DPTR        equ	15340	;# 
   368   003BEC                     DMA1DPTRL       equ	15340	;# 
   369   003BED                     DMA1DPTRH       equ	15341	;# 
   370   003BEE                     DMA1DSZ         equ	15342	;# 
   371   003BEE                     DMA1DSZL        equ	15342	;# 
   372   003BEF                     DMA1DSZH        equ	15343	;# 
   373   003BF0                     DMA1DSA         equ	15344	;# 
   374   003BF0                     DMA1DSAL        equ	15344	;# 
   375   003BF1                     DMA1DSAH        equ	15345	;# 
   376   003BF2                     DMA1SCNT        equ	15346	;# 
   377   003BF2                     DMA1SCNTL       equ	15346	;# 
   378   003BF3                     DMA1SCNTH       equ	15347	;# 
   379   003BF4                     DMA1SPTR        equ	15348	;# 
   380   003BF4                     DMA1SPTRL       equ	15348	;# 
   381   003BF5                     DMA1SPTRH       equ	15349	;# 
   382   003BF6                     DMA1SPTRU       equ	15350	;# 
   383   003BF7                     DMA1SSZ         equ	15351	;# 
   384   003BF7                     DMA1SSZL        equ	15351	;# 
   385   003BF8                     DMA1SSZH        equ	15352	;# 
   386   003BF9                     DMA1SSA         equ	15353	;# 
   387   003BF9                     DMA1SSAL        equ	15353	;# 
   388   003BFA                     DMA1SSAH        equ	15354	;# 
   389   003BFB                     DMA1SSAU        equ	15355	;# 
   390   003BFC                     DMA1CON0        equ	15356	;# 
   391   003BFD                     DMA1CON1        equ	15357	;# 
   392   003BFE                     DMA1AIRQ        equ	15358	;# 
   393   003BFF                     DMA1SIRQ        equ	15359	;# 
   394   003C56                     CLC4CON         equ	15446	;# 
   395   003C57                     CLC4POL         equ	15447	;# 
   396   003C58                     CLC4SEL0        equ	15448	;# 
   397   003C59                     CLC4SEL1        equ	15449	;# 
   398   003C5A                     CLC4SEL2        equ	15450	;# 
   399   003C5B                     CLC4SEL3        equ	15451	;# 
   400   003C5C                     CLC4GLS0        equ	15452	;# 
   401   003C5D                     CLC4GLS1        equ	15453	;# 
   402   003C5E                     CLC4GLS2        equ	15454	;# 
   403   003C5F                     CLC4GLS3        equ	15455	;# 
   404   003C60                     CLC3CON         equ	15456	;# 
   405   003C61                     CLC3POL         equ	15457	;# 
   406   003C62                     CLC3SEL0        equ	15458	;# 
   407   003C63                     CLC3SEL1        equ	15459	;# 
   408   003C64                     CLC3SEL2        equ	15460	;# 
   409   003C65                     CLC3SEL3        equ	15461	;# 
   410   003C66                     CLC3GLS0        equ	15462	;# 
   411   003C67                     CLC3GLS1        equ	15463	;# 
   412   003C68                     CLC3GLS2        equ	15464	;# 
   413   003C69                     CLC3GLS3        equ	15465	;# 
   414   003C6A                     CLC2CON         equ	15466	;# 
   415   003C6B                     CLC2POL         equ	15467	;# 
   416   003C6C                     CLC2SEL0        equ	15468	;# 
   417   003C6D                     CLC2SEL1        equ	15469	;# 
   418   003C6E                     CLC2SEL2        equ	15470	;# 
   419   003C6F                     CLC2SEL3        equ	15471	;# 
   420   003C70                     CLC2GLS0        equ	15472	;# 
   421   003C71                     CLC2GLS1        equ	15473	;# 
   422   003C72                     CLC2GLS2        equ	15474	;# 
   423   003C73                     CLC2GLS3        equ	15475	;# 
   424   003C74                     CLC1CON         equ	15476	;# 
   425   003C75                     CLC1POL         equ	15477	;# 
   426   003C76                     CLC1SEL0        equ	15478	;# 
   427   003C77                     CLC1SEL1        equ	15479	;# 
   428   003C78                     CLC1SEL2        equ	15480	;# 
   429   003C79                     CLC1SEL3        equ	15481	;# 
   430   003C7A                     CLC1GLS0        equ	15482	;# 
   431   003C7B                     CLC1GLS1        equ	15483	;# 
   432   003C7C                     CLC1GLS2        equ	15484	;# 
   433   003C7D                     CLC1GLS3        equ	15485	;# 
   434   003C7E                     CLCDATA0        equ	15486	;# 
   435   003CE5                     CLKRCON         equ	15589	;# 
   436   003CE6                     CLKRCLK         equ	15590	;# 
   437   003CFA                     MD1CON0         equ	15610	;# 
   438   003CFB                     MD1CON1         equ	15611	;# 
   439   003CFC                     MD1SRC          equ	15612	;# 
   440   003CFD                     MD1CARL         equ	15613	;# 
   441   003CFE                     MD1CARH         equ	15614	;# 
   442   003D10                     SPI1RXB         equ	15632	;# 
   443   003D11                     SPI1TXB         equ	15633	;# 
   444   003D12                     SPI1TCNT        equ	15634	;# 
   445   003D12                     SPI1TCNTL       equ	15634	;# 
   446   003D13                     SPI1TCNTH       equ	15635	;# 
   447   003D14                     SPI1CON0        equ	15636	;# 
   448   003D15                     SPI1CON1        equ	15637	;# 
   449   003D16                     SPI1CON2        equ	15638	;# 
   450   003D17                     SPI1STATUS      equ	15639	;# 
   451   003D18                     SPI1TWIDTH      equ	15640	;# 
   452   003D19                     SPI1BAUD        equ	15641	;# 
   453   003D1A                     SPI1INTF        equ	15642	;# 
   454   003D1B                     SPI1INTE        equ	15643	;# 
   455   003D1C                     SPI1CLK         equ	15644	;# 
   456   003D54                     I2C2RXB         equ	15700	;# 
   457   003D55                     I2C2TXB         equ	15701	;# 
   458   003D56                     I2C2CNT         equ	15702	;# 
   459   003D57                     I2C2ADB0        equ	15703	;# 
   460   003D58                     I2C2ADB1        equ	15704	;# 
   461   003D59                     I2C2ADR0        equ	15705	;# 
   462   003D5A                     I2C2ADR1        equ	15706	;# 
   463   003D5B                     I2C2ADR2        equ	15707	;# 
   464   003D5C                     I2C2ADR3        equ	15708	;# 
   465   003D5D                     I2C2CON0        equ	15709	;# 
   466   003D5E                     I2C2CON1        equ	15710	;# 
   467   003D5F                     I2C2CON2        equ	15711	;# 
   468   003D60                     I2C2ERR         equ	15712	;# 
   469   003D61                     I2C2STAT0       equ	15713	;# 
   470   003D62                     I2C2STAT1       equ	15714	;# 
   471   003D63                     I2C2PIR         equ	15715	;# 
   472   003D64                     I2C2PIE         equ	15716	;# 
   473   003D65                     I2C2CLK         equ	15717	;# 
   474   003D66                     I2C2BTO         equ	15718	;# 
   475   003D6A                     I2C1RXB         equ	15722	;# 
   476   003D6B                     I2C1TXB         equ	15723	;# 
   477   003D6C                     I2C1CNT         equ	15724	;# 
   478   003D6D                     I2C1ADB0        equ	15725	;# 
   479   003D6E                     I2C1ADB1        equ	15726	;# 
   480   003D6F                     I2C1ADR0        equ	15727	;# 
   481   003D70                     I2C1ADR1        equ	15728	;# 
   482   003D71                     I2C1ADR2        equ	15729	;# 
   483   003D72                     I2C1ADR3        equ	15730	;# 
   484   003D73                     I2C1CON0        equ	15731	;# 
   485   003D74                     I2C1CON1        equ	15732	;# 
   486   003D75                     I2C1CON2        equ	15733	;# 
   487   003D76                     I2C1ERR         equ	15734	;# 
   488   003D77                     I2C1STAT0       equ	15735	;# 
   489   003D78                     I2C1STAT1       equ	15736	;# 
   490   003D79                     I2C1PIR         equ	15737	;# 
   491   003D7A                     I2C1PIE         equ	15738	;# 
   492   003D7B                     I2C1CLK         equ	15739	;# 
   493   003D7C                     I2C1BTO         equ	15740	;# 
   494   003DD0                     U2RXB           equ	15824	;# 
   495   003DD0                     U2RXBL          equ	15824	;# 
   496   003DD2                     U2TXB           equ	15826	;# 
   497   003DD2                     U2TXBL          equ	15826	;# 
   498   003DD4                     U2P1            equ	15828	;# 
   499   003DD4                     U2P1L           equ	15828	;# 
   500   003DD6                     U2P2            equ	15830	;# 
   501   003DD6                     U2P2L           equ	15830	;# 
   502   003DD8                     U2P3            equ	15832	;# 
   503   003DD8                     U2P3L           equ	15832	;# 
   504   003DDA                     U2CON0          equ	15834	;# 
   505   003DDB                     U2CON1          equ	15835	;# 
   506   003DDC                     U2CON2          equ	15836	;# 
   507   003DDD                     U2BRG           equ	15837	;# 
   508   003DDD                     U2BRGL          equ	15837	;# 
   509   003DDE                     U2BRGH          equ	15838	;# 
   510   003DDF                     U2FIFO          equ	15839	;# 
   511   003DE0                     U2UIR           equ	15840	;# 
   512   003DE1                     U2ERRIR         equ	15841	;# 
   513   003DE2                     U2ERRIE         equ	15842	;# 
   514   003DE8                     U1RXB           equ	15848	;# 
   515   003DE8                     U1RXBL          equ	15848	;# 
   516   003DE9                     U1RXCHK         equ	15849	;# 
   517   003DEA                     U1TXB           equ	15850	;# 
   518   003DEA                     U1TXBL          equ	15850	;# 
   519   003DEB                     U1TXCHK         equ	15851	;# 
   520   003DEC                     U1P1            equ	15852	;# 
   521   003DEC                     U1P1L           equ	15852	;# 
   522   003DED                     U1P1H           equ	15853	;# 
   523   003DEE                     U1P2            equ	15854	;# 
   524   003DEE                     U1P2L           equ	15854	;# 
   525   003DEF                     U1P2H           equ	15855	;# 
   526   003DF0                     U1P3            equ	15856	;# 
   527   003DF0                     U1P3L           equ	15856	;# 
   528   003DF1                     U1P3H           equ	15857	;# 
   529   003DF2                     U1CON0          equ	15858	;# 
   530   003DF3                     U1CON1          equ	15859	;# 
   531   003DF4                     U1CON2          equ	15860	;# 
   532   003DF5                     U1BRG           equ	15861	;# 
   533   003DF5                     U1BRGL          equ	15861	;# 
   534   003DF6                     U1BRGH          equ	15862	;# 
   535   003DF7                     U1FIFO          equ	15863	;# 
   536   003DF8                     U1UIR           equ	15864	;# 
   537   003DF9                     U1ERRIR         equ	15865	;# 
   538   003DFA                     U1ERRIE         equ	15866	;# 
   539   003E9C                     DAC1CON1        equ	16028	;# 
   540   003E9E                     DAC1CON0        equ	16030	;# 
   541   003EB8                     CM2CON0         equ	16056	;# 
   542   003EB9                     CM2CON1         equ	16057	;# 
   543   003EBA                     CM2NCH          equ	16058	;# 
   544   003EBB                     CM2PCH          equ	16059	;# 
   545   003EBC                     CM1CON0         equ	16060	;# 
   546   003EBD                     CM1CON1         equ	16061	;# 
   547   003EBE                     CM1NCH          equ	16062	;# 
   548   003EBF                     CM1PCH          equ	16063	;# 
   549   003EC0                     CMOUT           equ	16064	;# 
   550   003EC1                     FVRCON          equ	16065	;# 
   551   003EC3                     ZCDCON          equ	16067	;# 
   552   003EC9                     HLVDCON0        equ	16073	;# 
   553   003ECA                     HLVDCON1        equ	16074	;# 
   554   003ED7                     ADCP            equ	16087	;# 
   555   003EDE                     ADLTH           equ	16094	;# 
   556   003EDE                     ADLTHL          equ	16094	;# 
   557   003EDF                     ADLTHH          equ	16095	;# 
   558   003EE0                     ADUTH           equ	16096	;# 
   559   003EE0                     ADUTHL          equ	16096	;# 
   560   003EE1                     ADUTHH          equ	16097	;# 
   561   003EE2                     ADERR           equ	16098	;# 
   562   003EE2                     ADERRL          equ	16098	;# 
   563   003EE3                     ADERRH          equ	16099	;# 
   564   003EE4                     ADSTPT          equ	16100	;# 
   565   003EE4                     ADSTPTL         equ	16100	;# 
   566   003EE5                     ADSTPTH         equ	16101	;# 
   567   003EE6                     ADFLTR          equ	16102	;# 
   568   003EE6                     ADFLTRL         equ	16102	;# 
   569   003EE7                     ADFLTRH         equ	16103	;# 
   570   003EE8                     ADACC           equ	16104	;# 
   571   003EE8                     ADACCL          equ	16104	;# 
   572   003EE9                     ADACCH          equ	16105	;# 
   573   003EEA                     ADACCU          equ	16106	;# 
   574   003EEB                     ADCNT           equ	16107	;# 
   575   003EEC                     ADRPT           equ	16108	;# 
   576   003EED                     ADPREV          equ	16109	;# 
   577   003EED                     ADPREVL         equ	16109	;# 
   578   003EEE                     ADPREVH         equ	16110	;# 
   579   003EEF                     ADRES           equ	16111	;# 
   580   003EEF                     ADRESL          equ	16111	;# 
   581   003EF0                     ADRESH          equ	16112	;# 
   582   003EF1                     ADPCH           equ	16113	;# 
   583   003EF3                     ADACQ           equ	16115	;# 
   584   003EF3                     ADACQL          equ	16115	;# 
   585   003EF4                     ADACQH          equ	16116	;# 
   586   003EF5                     ADCAP           equ	16117	;# 
   587   003EF6                     ADPRE           equ	16118	;# 
   588   003EF6                     ADPREL          equ	16118	;# 
   589   003EF7                     ADPREH          equ	16119	;# 
   590   003EF8                     ADCON0          equ	16120	;# 
   591   003EF9                     ADCON1          equ	16121	;# 
   592   003EFA                     ADCON2          equ	16122	;# 
   593   003EFB                     ADCON3          equ	16123	;# 
   594   003EFC                     ADSTAT          equ	16124	;# 
   595   003EFD                     ADREF           equ	16125	;# 
   596   003EFE                     ADACT           equ	16126	;# 
   597   003EFF                     ADCLK           equ	16127	;# 
   598   003F12                     SMT1TMR         equ	16146	;# 
   599   003F12                     SMT1TMRL        equ	16146	;# 
   600   003F13                     SMT1TMRH        equ	16147	;# 
   601   003F14                     SMT1TMRU        equ	16148	;# 
   602   003F15                     SMT1CPR         equ	16149	;# 
   603   003F15                     SMT1CPRL        equ	16149	;# 
   604   003F16                     SMT1CPRH        equ	16150	;# 
   605   003F17                     SMT1CPRU        equ	16151	;# 
   606   003F18                     SMT1CPW         equ	16152	;# 
   607   003F18                     SMT1CPWL        equ	16152	;# 
   608   003F19                     SMT1CPWH        equ	16153	;# 
   609   003F1A                     SMT1CPWU        equ	16154	;# 
   610   003F1B                     SMT1PR          equ	16155	;# 
   611   003F1B                     SMT1PRL         equ	16155	;# 
   612   003F1C                     SMT1PRH         equ	16156	;# 
   613   003F1D                     SMT1PRU         equ	16157	;# 
   614   003F1E                     SMT1CON0        equ	16158	;# 
   615   003F1F                     SMT1CON1        equ	16159	;# 
   616   003F20                     SMT1STAT        equ	16160	;# 
   617   003F21                     SMT1CLK         equ	16161	;# 
   618   003F22                     SMT1SIG         equ	16162	;# 
   619   003F23                     SMT1WIN         equ	16163	;# 
   620   003F38                     NCO1ACC         equ	16184	;# 
   621   003F38                     NCO1ACCL        equ	16184	;# 
   622   003F39                     NCO1ACCH        equ	16185	;# 
   623   003F3A                     NCO1ACCU        equ	16186	;# 
   624   003F3B                     NCO1INC         equ	16187	;# 
   625   003F3B                     NCO1INCL        equ	16187	;# 
   626   003F3C                     NCO1INCH        equ	16188	;# 
   627   003F3D                     NCO1INCU        equ	16189	;# 
   628   003F3E                     NCO1CON         equ	16190	;# 
   629   003F3F                     NCO1CLK         equ	16191	;# 
   630   003F40                     CWG3CLK         equ	16192	;# 
   631   003F40                     CWG3CLKCON      equ	16192	;# 
   632   003F41                     CWG3ISM         equ	16193	;# 
   633   003F41                     CWG3DAT         equ	16193	;# 
   634   003F42                     CWG3DBR         equ	16194	;# 
   635   003F43                     CWG3DBF         equ	16195	;# 
   636   003F44                     CWG3CON0        equ	16196	;# 
   637   003F45                     CWG3CON1        equ	16197	;# 
   638   003F46                     CWG3AS0         equ	16198	;# 
   639   003F47                     CWG3AS1         equ	16199	;# 
   640   003F48                     CWG3STR         equ	16200	;# 
   641   003F49                     CWG2CLK         equ	16201	;# 
   642   003F49                     CWG2CLKCON      equ	16201	;# 
   643   003F4A                     CWG2ISM         equ	16202	;# 
   644   003F4A                     CWG2DAT         equ	16202	;# 
   645   003F4B                     CWG2DBR         equ	16203	;# 
   646   003F4C                     CWG2DBF         equ	16204	;# 
   647   003F4D                     CWG2CON0        equ	16205	;# 
   648   003F4E                     CWG2CON1        equ	16206	;# 
   649   003F4F                     CWG2AS0         equ	16207	;# 
   650   003F50                     CWG2AS1         equ	16208	;# 
   651   003F51                     CWG2STR         equ	16209	;# 
   652   003F52                     CWG1CLK         equ	16210	;# 
   653   003F52                     CWG1CLKCON      equ	16210	;# 
   654   003F53                     CWG1ISM         equ	16211	;# 
   655   003F53                     CWG1DAT         equ	16211	;# 
   656   003F54                     CWG1DBR         equ	16212	;# 
   657   003F55                     CWG1DBF         equ	16213	;# 
   658   003F56                     CWG1CON0        equ	16214	;# 
   659   003F57                     CWG1CON1        equ	16215	;# 
   660   003F58                     CWG1AS0         equ	16216	;# 
   661   003F59                     CWG1AS1         equ	16217	;# 
   662   003F5A                     CWG1STR         equ	16218	;# 
   663   003F5E                     CCPTMRS0        equ	16222	;# 
   664   003F5F                     CCPTMRS1        equ	16223	;# 
   665   003F60                     PWM8DC          equ	16224	;# 
   666   003F60                     PWM8DCL         equ	16224	;# 
   667   003F61                     PWM8DCH         equ	16225	;# 
   668   003F62                     PWM8CON         equ	16226	;# 
   669   003F64                     PWM7DC          equ	16228	;# 
   670   003F64                     PWM7DCL         equ	16228	;# 
   671   003F65                     PWM7DCH         equ	16229	;# 
   672   003F66                     PWM7CON         equ	16230	;# 
   673   003F68                     PWM6DC          equ	16232	;# 
   674   003F68                     PWM6DCL         equ	16232	;# 
   675   003F69                     PWM6DCH         equ	16233	;# 
   676   003F6A                     PWM6CON         equ	16234	;# 
   677   003F6C                     PWM5DC          equ	16236	;# 
   678   003F6C                     PWM5DCL         equ	16236	;# 
   679   003F6D                     PWM5DCH         equ	16237	;# 
   680   003F6E                     PWM5CON         equ	16238	;# 
   681   003F70                     CCPR4           equ	16240	;# 
   682   003F70                     CCPR4L          equ	16240	;# 
   683   003F71                     CCPR4H          equ	16241	;# 
   684   003F72                     CCP4CON         equ	16242	;# 
   685   003F73                     CCP4CAP         equ	16243	;# 
   686   003F74                     CCPR3           equ	16244	;# 
   687   003F74                     CCPR3L          equ	16244	;# 
   688   003F75                     CCPR3H          equ	16245	;# 
   689   003F76                     CCP3CON         equ	16246	;# 
   690   003F77                     CCP3CAP         equ	16247	;# 
   691   003F78                     CCPR2           equ	16248	;# 
   692   003F78                     CCPR2L          equ	16248	;# 
   693   003F79                     CCPR2H          equ	16249	;# 
   694   003F7A                     CCP2CON         equ	16250	;# 
   695   003F7B                     CCP2CAP         equ	16251	;# 
   696   003F7C                     CCPR1           equ	16252	;# 
   697   003F7C                     CCPR1L          equ	16252	;# 
   698   003F7D                     CCPR1H          equ	16253	;# 
   699   003F7E                     CCP1CON         equ	16254	;# 
   700   003F7F                     CCP1CAP         equ	16255	;# 
   701   003F92                     T6TMR           equ	16274	;# 
   702   003F92                     TMR6            equ	16274	;# 
   703   003F93                     T6PR            equ	16275	;# 
   704   003F93                     PR6             equ	16275	;# 
   705   003F94                     T6CON           equ	16276	;# 
   706   003F95                     T6HLT           equ	16277	;# 
   707   003F96                     T6CLKCON        equ	16278	;# 
   708   003F96                     T6CLK           equ	16278	;# 
   709   003F97                     T6RST           equ	16279	;# 
   710   003F98                     TMR5            equ	16280	;# 
   711   003F98                     TMR5L           equ	16280	;# 
   712   003F99                     TMR5H           equ	16281	;# 
   713   003F9A                     T5CON           equ	16282	;# 
   714   003F9A                     TMR5CON         equ	16282	;# 
   715   003F9B                     T5GCON          equ	16283	;# 
   716   003F9B                     TMR5GCON        equ	16283	;# 
   717   003F9C                     T5GATE          equ	16284	;# 
   718   003F9C                     TMR5GATE        equ	16284	;# 
   719   003F9D                     T5CLK           equ	16285	;# 
   720   003F9D                     TMR5CLK         equ	16285	;# 
   721   003F9D                     PR5             equ	16285	;# 
   722   003F9E                     T4TMR           equ	16286	;# 
   723   003F9E                     TMR4            equ	16286	;# 
   724   003F9F                     T4PR            equ	16287	;# 
   725   003F9F                     PR4             equ	16287	;# 
   726   003FA0                     T4CON           equ	16288	;# 
   727   003FA1                     T4HLT           equ	16289	;# 
   728   003FA2                     T4CLKCON        equ	16290	;# 
   729   003FA2                     T4CLK           equ	16290	;# 
   730   003FA3                     T4RST           equ	16291	;# 
   731   003FA4                     TMR3            equ	16292	;# 
   732   003FA4                     TMR3L           equ	16292	;# 
   733   003FA5                     TMR3H           equ	16293	;# 
   734   003FA6                     T3CON           equ	16294	;# 
   735   003FA6                     TMR3CON         equ	16294	;# 
   736   003FA7                     T3GCON          equ	16295	;# 
   737   003FA7                     TMR3GCON        equ	16295	;# 
   738   003FA8                     T3GATE          equ	16296	;# 
   739   003FA8                     TMR3GATE        equ	16296	;# 
   740   003FA9                     T3CLK           equ	16297	;# 
   741   003FA9                     TMR3CLK         equ	16297	;# 
   742   003FA9                     PR3             equ	16297	;# 
   743   003FAA                     T2TMR           equ	16298	;# 
   744   003FAA                     TMR2            equ	16298	;# 
   745   003FAB                     T2PR            equ	16299	;# 
   746   003FAB                     PR2             equ	16299	;# 
   747   003FAC                     T2CON           equ	16300	;# 
   748   003FAD                     T2HLT           equ	16301	;# 
   749   003FAE                     T2CLKCON        equ	16302	;# 
   750   003FAE                     T2CLK           equ	16302	;# 
   751   003FAF                     T2RST           equ	16303	;# 
   752   003FB0                     TMR1            equ	16304	;# 
   753   003FB0                     TMR1L           equ	16304	;# 
   754   003FB1                     TMR1H           equ	16305	;# 
   755   003FB2                     T1CON           equ	16306	;# 
   756   003FB2                     TMR1CON         equ	16306	;# 
   757   003FB3                     T1GCON          equ	16307	;# 
   758   003FB3                     TMR1GCON        equ	16307	;# 
   759   003FB4                     T1GATE          equ	16308	;# 
   760   003FB4                     TMR1GATE        equ	16308	;# 
   761   003FB5                     T1CLK           equ	16309	;# 
   762   003FB5                     TMR1CLK         equ	16309	;# 
   763   003FB5                     PR1             equ	16309	;# 
   764   003FB6                     TMR0L           equ	16310	;# 
   765   003FB6                     TMR0            equ	16310	;# 
   766   003FB7                     TMR0H           equ	16311	;# 
   767   003FB7                     PR0             equ	16311	;# 
   768   003FB8                     T0CON0          equ	16312	;# 
   769   003FB9                     T0CON1          equ	16313	;# 
   770   003FBA                     LATA            equ	16314	;# 
   771   003FBB                     LATB            equ	16315	;# 
   772   003FBC                     LATC            equ	16316	;# 
   773   003FBD                     LATD            equ	16317	;# 
   774   003FBE                     LATE            equ	16318	;# 
   775   003FC2                     TRISA           equ	16322	;# 
   776   003FC3                     TRISB           equ	16323	;# 
   777   003FC4                     TRISC           equ	16324	;# 
   778   003FC5                     TRISD           equ	16325	;# 
   779   003FC6                     TRISE           equ	16326	;# 
   780   003FCA                     PORTA           equ	16330	;# 
   781   003FCB                     PORTB           equ	16331	;# 
   782   003FCC                     PORTC           equ	16332	;# 
   783   003FCD                     PORTD           equ	16333	;# 
   784   003FCE                     PORTE           equ	16334	;# 
   785   003FD2                     INTCON0         equ	16338	;# 
   786   003FD3                     INTCON1         equ	16339	;# 
   787   003FD4                     IVTLOCK         equ	16340	;# 
   788   003FD5                     IVTBASE         equ	16341	;# 
   789   003FD5                     IVTBASEL        equ	16341	;# 
   790   003FD6                     IVTBASEH        equ	16342	;# 
   791   003FD7                     IVTBASEU        equ	16343	;# 
   792   003FD8                     STATUS          equ	16344	;# 
   793   003FD9                     FSR2            equ	16345	;# 
   794   003FD9                     FSR2L           equ	16345	;# 
   795   003FDA                     FSR2H           equ	16346	;# 
   796   003FDB                     PLUSW2          equ	16347	;# 
   797   003FDC                     PREINC2         equ	16348	;# 
   798   003FDD                     POSTDEC2        equ	16349	;# 
   799   003FDE                     POSTINC2        equ	16350	;# 
   800   003FDF                     INDF2           equ	16351	;# 
   801   003FE0                     BSR             equ	16352	;# 
   802   003FE1                     FSR1            equ	16353	;# 
   803   003FE1                     FSR1L           equ	16353	;# 
   804   003FE2                     FSR1H           equ	16354	;# 
   805   003FE3                     PLUSW1          equ	16355	;# 
   806   003FE4                     PREINC1         equ	16356	;# 
   807   003FE5                     POSTDEC1        equ	16357	;# 
   808   003FE6                     POSTINC1        equ	16358	;# 
   809   003FE7                     INDF1           equ	16359	;# 
   810   003FE8                     WREG            equ	16360	;# 
   811   003FE9                     FSR0            equ	16361	;# 
   812   003FE9                     FSR0L           equ	16361	;# 
   813   003FEA                     FSR0H           equ	16362	;# 
   814   003FEB                     PLUSW0          equ	16363	;# 
   815   003FEC                     PREINC0         equ	16364	;# 
   816   003FED                     POSTDEC0        equ	16365	;# 
   817   003FEE                     POSTINC0        equ	16366	;# 
   818   003FEF                     INDF0           equ	16367	;# 
   819   003FF0                     PCON0           equ	16368	;# 
   820   003FF1                     PCON1           equ	16369	;# 
   821   003FF3                     PROD            equ	16371	;# 
   822   003FF3                     PRODL           equ	16371	;# 
   823   003FF4                     PRODH           equ	16372	;# 
   824   003FF5                     TABLAT          equ	16373	;# 
   825   003FF6                     TBLPTR          equ	16374	;# 
   826   003FF6                     TBLPTRL         equ	16374	;# 
   827   003FF7                     TBLPTRH         equ	16375	;# 
   828   003FF8                     TBLPTRU         equ	16376	;# 
   829   003FF9                     PCLAT           equ	16377	;# 
   830   003FF9                     PCL             equ	16377	;# 
   831   003FFA                     PCLATH          equ	16378	;# 
   832   003FFB                     PCLATU          equ	16379	;# 
   833   003FFC                     STKPTR          equ	16380	;# 
   834   003FFD                     TOS             equ	16381	;# 
   835   003FFD                     TOSL            equ	16381	;# 
   836   003FFE                     TOSH            equ	16382	;# 
   837   003FFF                     TOSU            equ	16383	;# 
   838                           
   839                           	psect	idataCOMRAM
   840   0043F6                     __pidataCOMRAM:
   841                           	callstack 0
   842                           
   843                           ;initializer for _code
   844   0043F6  0015               	dw	21
   845   000200                     _seg_code_absaddr set	512
   846   000200                     _seg_code_absaddr set	512
   847                           
   848                           	psect	_seg_code_text
   849   000200                     __p_seg_code_text:
   850                           	callstack 0
   851   000200                     _seg_code:
   852                           	callstack 0
   853   000200  3F                 	db	63
   854   000201  06                 	db	6
   855   000202  5B                 	db	91
   856   000203  4F                 	db	79
   857   000204                     __end_of_seg_code:
   858                           	callstack 0
   859   0039A5                     _PIR5bits       set	14757
   860   0039A1                     _PIR1bits       set	14753
   861   003991                     _PIE1bits       set	14737
   862   003981                     _IPR1bits       set	14721
   863   003A51                     _WPUB           set	14929
   864   003A40                     _ANSELA         set	14912
   865   003A70                     _ANSELD         set	14960
   866   003A50                     _ANSELB         set	14928
   867   003FCB                     _PORTBbits      set	16331
   868   003FCA                     _PORTAbits      set	16330
   869   003FD5                     _IVTBASEL       set	16341
   870   003FD6                     _IVTBASEH       set	16342
   871   003FD7                     _IVTBASEU       set	16343
   872   003FD2                     _INTCON0bits    set	16338
   873   003FC2                     _TRISA          set	16322
   874   003FBA                     _LATA           set	16314
   875   003FCA                     _PORTA          set	16330
   876   003FC5                     _TRISD          set	16325
   877   003FBD                     _LATD           set	16317
   878   003FCD                     _PORTD          set	16333
   879   003FC3                     _TRISB          set	16323
   880   003FBB                     _LATB           set	16315
   881   003FCB                     _PORTB          set	16331
   882                           
   883                           ; #config settings
   884                           
   885                           	psect	cinit
   886   0043AC                     __pcinit:
   887                           	callstack 0
   888   0043AC                     start_initialization:
   889                           	callstack 0
   890   0043AC                     __initialization:
   891                           	callstack 0
   892                           
   893                           ; Initialize objects allocated to COMRAM (2 bytes)
   894                           ; load TBLPTR registers with __pidataCOMRAM
   895   0043AC  0EF6               	movlw	low __pidataCOMRAM
   896   0043AE  6EF6               	movwf	tblptrl,c
   897   0043B0  0E43               	movlw	high __pidataCOMRAM
   898   0043B2  6EF7               	movwf	tblptrh,c
   899   0043B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   900   0043B6  6EF8               	movwf	tblptru,c
   901   0043B8  0009               	tblrd		*+	;fetch initializer
   902   0043BA  006F FFD4  F00F    	movff	tablat,__pdataCOMRAM
   903   0043C0  0009               	tblrd		*+	;fetch initializer
   904   0043C2  006F FFD4  F010    	movff	tablat,__pdataCOMRAM+1
   905                           
   906                           ; Clear objects allocated to COMRAM (8 bytes)
   907   0043C8  EE00  F001         	lfsr	0,__pbssCOMRAM
   908   0043CC  0E08               	movlw	8
   909   0043CE                     clear_0:
   910   0043CE  6AEE               	clrf	postinc0,c
   911   0043D0  06E8               	decf	wreg,f,c
   912   0043D2  E1FD               	bnz	clear_0
   913                           
   914                           ;
   915                           ; Setup IVTBASE
   916                           ;
   917   003FD5                     IVTBASEL        equ	16341
   918   003FD6                     IVTBASEH        equ	16342
   919   003FD7                     IVTBASEU        equ	16343
   920   0043D4  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   921   0043D6  6ED5               	movwf	213,c
   922   0043D8  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   923   0043DA  6ED6               	movwf	214,c
   924   0043DC  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   925   0043DE  6ED7               	movwf	215,c
   926   0043E0                     end_of_initialization:
   927                           	callstack 0
   928   0043E0                     __end_of__initialization:
   929                           	callstack 0
   930   0043E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   931   0043E2  6EF8               	movwf	tblptru,c
   932   0043E4  0100               	movlb	0
   933   0043E6  EFF5  F021         	goto	_main	;jump to C main() function
   934                           
   935                           	psect	bssCOMRAM
   936   000001                     __pbssCOMRAM:
   937                           	callstack 0
   938   000001                     _y:
   939                           	callstack 0
   940   000001                     	ds	2
   941   000003                     _x:
   942                           	callstack 0
   943   000003                     	ds	2
   944   000005                     _count:
   945                           	callstack 0
   946   000005                     	ds	2
   947   000007                     _input:
   948                           	callstack 0
   949   000007                     	ds	2
   950                           
   951                           	psect	dataCOMRAM
   952   00000F                     __pdataCOMRAM:
   953                           	callstack 0
   954   00000F                     _code:
   955                           	callstack 0
   956   00000F                     	ds	2
   957                           
   958                           	psect	cstackCOMRAM
   959   000009                     __pcstackCOMRAM:
   960                           	callstack 0
   961   000009                     ??_INT0_ISR:
   962                           
   963                           ; 1 bytes @ 0x0
   964   000009                     	ds	2
   965   00000B                     INT0_ISR@i:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x2
   969   00000B                     	ds	2
   970   00000D                     ??_check:
   971                           
   972                           ; 1 bytes @ 0x4
   973   00000D                     	ds	2
   974   00000F                     
   975                           ; 1 bytes @ 0x6
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 23 in file "SensorsMain.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels required when called: 2
  1001 ;; This function calls:
  1002 ;;		_check
  1003 ;;		_initialize
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010   0043EA                     __ptext0:
  1011                           	callstack 0
  1012   0043EA                     _main:
  1013                           	callstack 29
  1014   0043EA                     
  1015                           ;SensorsMain.c: 25:     initialize();
  1016   0043EA  ECB6  F021         	call	_initialize	;wreg free
  1017   0043EE                     
  1018                           ;SensorsMain.c: 26:     check();
  1019   0043EE  EC59  F020         	call	_check	;wreg free
  1020   0043F2  EF57  F020         	goto	start
  1021   0043F6                     __end_of_main:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _initialize *****************
  1025 ;; Defined at:
  1026 ;;		line 3 in file "./Initialize.h"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text1
  1055   00436C                     __ptext1:
  1056                           	callstack 0
  1057   00436C                     _initialize:
  1058                           	callstack 29
  1059   00436C                     
  1060                           ;./Initialize.h: 5:     PORTB = 0;
  1061   00436C  6ACB               	clrf	203,c	;volatile
  1062                           
  1063                           ;./Initialize.h: 6:     ANSELB = 0;
  1064   00436E  013A               	movlb	58	; () banked
  1065   004370  6B50               	clrf	80,b	;volatile
  1066                           
  1067                           ;./Initialize.h: 7:     LATB = 0;
  1068   004372  6ABB               	clrf	187,c	;volatile
  1069   004374                     
  1070                           ; BSR set to: 58
  1071                           ;./Initialize.h: 8:     TRISB = 0b01100111;
  1072   004374  0E67               	movlw	103
  1073   004376  6EC3               	movwf	195,c	;volatile
  1074   004378                     
  1075                           ; BSR set to: 58
  1076                           ;./Initialize.h: 12:     PORTD = 0;
  1077   004378  6ACD               	clrf	205,c	;volatile
  1078   00437A                     
  1079                           ; BSR set to: 58
  1080                           ;./Initialize.h: 13:     ANSELD = 0;
  1081   00437A  6B70               	clrf	112,b	;volatile
  1082   00437C                     
  1083                           ; BSR set to: 58
  1084                           ;./Initialize.h: 14:     LATD = 0;
  1085   00437C  6ABD               	clrf	189,c	;volatile
  1086   00437E                     
  1087                           ; BSR set to: 58
  1088                           ;./Initialize.h: 15:     TRISD = 0b00000000;
  1089   00437E  6AC5               	clrf	197,c	;volatile
  1090   004380                     
  1091                           ; BSR set to: 58
  1092                           ;./Initialize.h: 18:     PORTA = 0;
  1093   004380  6ACA               	clrf	202,c	;volatile
  1094   004382                     
  1095                           ; BSR set to: 58
  1096                           ;./Initialize.h: 19:     ANSELA = 0;
  1097   004382  6B40               	clrf	64,b	;volatile
  1098   004384                     
  1099                           ; BSR set to: 58
  1100                           ;./Initialize.h: 20:     LATA = 0;
  1101   004384  6ABA               	clrf	186,c	;volatile
  1102   004386                     
  1103                           ; BSR set to: 58
  1104                           ;./Initialize.h: 21:     TRISA = 0b00000000;
  1105   004386  6AC2               	clrf	194,c	;volatile
  1106   004388                     
  1107                           ; BSR set to: 58
  1108                           ;./Initialize.h: 24:     INTCON0bits.IPEN = 1;
  1109   004388  8AD2               	bsf	210,5,c	;volatile
  1110   00438A                     
  1111                           ; BSR set to: 58
  1112                           ;./Initialize.h: 27:     INTCON0bits.GIEH = 1;
  1113   00438A  8ED2               	bsf	210,7,c	;volatile
  1114   00438C                     
  1115                           ; BSR set to: 58
  1116                           ;./Initialize.h: 30:     INTCON0bits.GIEL = 1;
  1117   00438C  8CD2               	bsf	210,6,c	;volatile
  1118   00438E                     
  1119                           ; BSR set to: 58
  1120                           ;./Initialize.h: 33:     INTCON0bits.INT0EDG = 0;
  1121   00438E  90D2               	bcf	210,0,c	;volatile
  1122   004390                     
  1123                           ; BSR set to: 58
  1124                           ;./Initialize.h: 36:     IPR1bits.INT0IP = 1;
  1125   004390  0139               	movlb	57	; () banked
  1126   004392  8181               	bsf	129,0,b	;volatile
  1127   004394                     
  1128                           ; BSR set to: 57
  1129                           ;./Initialize.h: 39:     PIE1bits.INT0IE = 1;
  1130   004394  8191               	bsf	145,0,b	;volatile
  1131   004396                     
  1132                           ; BSR set to: 57
  1133                           ;./Initialize.h: 42:     PIR1bits.INT0IF = 0;
  1134   004396  91A1               	bcf	161,0,b	;volatile
  1135   004398                     
  1136                           ; BSR set to: 57
  1137                           ;./Initialize.h: 43:     PIR5bits.INT1IF = 0;
  1138   004398  91A5               	bcf	165,0,b	;volatile
  1139   00439A                     
  1140                           ; BSR set to: 57
  1141                           ;./Initialize.h: 46:     IVTBASEU = 0x00;
  1142   00439A  6AD7               	clrf	215,c	;volatile
  1143                           
  1144                           ;./Initialize.h: 47:     IVTBASEH = 0x40;
  1145   00439C  0E40               	movlw	64
  1146   00439E  6ED6               	movwf	214,c	;volatile
  1147                           
  1148                           ;./Initialize.h: 48:     IVTBASEL = 0x08;
  1149   0043A0  0E08               	movlw	8
  1150   0043A2  6ED5               	movwf	213,c	;volatile
  1151                           
  1152                           ;./Initialize.h: 53:     WPUB=0b00100001;
  1153   0043A4  0E21               	movlw	33
  1154   0043A6  013A               	movlb	58	; () banked
  1155   0043A8  6F51               	movwf	81,b	;volatile
  1156   0043AA                     
  1157                           ; BSR set to: 58
  1158   0043AA  0012               	return		;funcret
  1159   0043AC                     __end_of_initialize:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _check *****************
  1163 ;; Defined at:
  1164 ;;		line 39 in file "./functions.h"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text2
  1193   0040B2                     __ptext2:
  1194                           	callstack 0
  1195   0040B2                     _check:
  1196                           	callstack 29
  1197   0040B2                     
  1198                           ;./functions.h: 42:     PORTBbits.RB7 = 1;
  1199   0040B2  8ECB               	bsf	203,7,c	;volatile
  1200   0040B4                     
  1201                           ;./functions.h: 43:     count = 0x00;
  1202   0040B4  0E00               	movlw	0
  1203   0040B6  6E06               	movwf	(_count+1)^0,c
  1204   0040B8  0E00               	movlw	0
  1205   0040BA  6E05               	movwf	_count^0,c
  1206                           
  1207                           ;./functions.h: 45:     while ( x < 1){
  1208   0040BC  EFBC  F020         	goto	l833
  1209   0040C0                     l77:
  1210                           
  1211                           ;./functions.h: 46:         if (PORTBbits.RB1 == 0){
  1212   0040C0  B2CB               	btfsc	203,1,c	;volatile
  1213   0040C2  EF65  F020         	goto	u11
  1214   0040C6  EF67  F020         	goto	u10
  1215   0040CA                     u11:
  1216   0040CA  EF8A  F020         	goto	l823
  1217   0040CE                     u10:
  1218   0040CE                     
  1219                           ;./functions.h: 47:             count = count + 1;
  1220   0040CE  0E01               	movlw	1
  1221   0040D0  2405               	addwf	_count^0,w,c
  1222   0040D2  6E05               	movwf	_count^0,c
  1223   0040D4  0E00               	movlw	0
  1224   0040D6  2006               	addwfc	(_count+1)^0,w,c
  1225   0040D8  6E06               	movwf	(_count+1)^0,c
  1226   0040DA                     
  1227                           ;./functions.h: 48:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1228   0040DA  0E0B               	movlw	11
  1229   0040DC  6E0E               	movwf	(??_check+1)^0,c
  1230   0040DE  0E26               	movlw	38
  1231   0040E0  6E0D               	movwf	??_check^0,c
  1232   0040E2  0E5E               	movlw	94
  1233   0040E4                     u137:
  1234   0040E4  2EE8               	decfsz	wreg,f,c
  1235   0040E6  D7FE               	bra	u137
  1236   0040E8  2E0D               	decfsz	??_check^0,f,c
  1237   0040EA  D7FC               	bra	u137
  1238   0040EC  2E0E               	decfsz	(??_check+1)^0,f,c
  1239   0040EE  D7FA               	bra	u137
  1240   0040F0                     
  1241                           ;./functions.h: 49:             if (count >= 4) {
  1242   0040F0  BE06               	btfsc	(_count+1)^0,7,c
  1243   0040F2  EF84  F020         	goto	u21
  1244   0040F6  5006               	movf	(_count+1)^0,w,c
  1245   0040F8  E109               	bnz	u20
  1246   0040FA  0E04               	movlw	4
  1247   0040FC  5C05               	subwf	_count^0,w,c
  1248   0040FE  A0D8               	btfss	status,0,c
  1249   004100  EF84  F020         	goto	u21
  1250   004104  EF86  F020         	goto	u20
  1251   004108                     u21:
  1252   004108  EF8A  F020         	goto	l823
  1253   00410C                     u20:
  1254   00410C                     
  1255                           ;./functions.h: 50:             count = 0;
  1256   00410C  0E00               	movlw	0
  1257   00410E  6E06               	movwf	(_count+1)^0,c
  1258   004110  0E00               	movlw	0
  1259   004112  6E05               	movwf	_count^0,c
  1260   004114                     l823:
  1261                           
  1262                           ;./functions.h: 53:         if (PORTBbits.RB5== 0) {
  1263   004114  BACB               	btfsc	203,5,c	;volatile
  1264   004116  EF8F  F020         	goto	u31
  1265   00411A  EF91  F020         	goto	u30
  1266   00411E                     u31:
  1267   00411E  EFAF  F020         	goto	l831
  1268   004122                     u30:
  1269   004122                     
  1270                           ;./functions.h: 54:             x = x + 1;
  1271   004122  0E01               	movlw	1
  1272   004124  2403               	addwf	_x^0,w,c
  1273   004126  6E03               	movwf	_x^0,c
  1274   004128  0E00               	movlw	0
  1275   00412A  2004               	addwfc	(_x+1)^0,w,c
  1276   00412C  6E04               	movwf	(_x+1)^0,c
  1277   00412E                     
  1278                           ;./functions.h: 55:             input = input + ((count-1)*10);
  1279   00412E  0E0A               	movlw	10
  1280   004130  0205               	mulwf	_count^0,c
  1281   004132  006F FFCC  F00D    	movff	prodl,??_check
  1282   004138  006F FFD0  F00E    	movff	prodh,??_check+1
  1283   00413E  0206               	mulwf	(_count+1)^0,c
  1284   004140  50F3               	movf	prodl,w,c
  1285   004142  260E               	addwf	(??_check+1)^0,f,c
  1286   004144  5007               	movf	_input^0,w,c
  1287   004146  260D               	addwf	??_check^0,f,c
  1288   004148  5008               	movf	(_input+1)^0,w,c
  1289   00414A  220E               	addwfc	(??_check+1)^0,f,c
  1290   00414C  0EF6               	movlw	246
  1291   00414E  240D               	addwf	??_check^0,w,c
  1292   004150  6E07               	movwf	_input^0,c
  1293   004152  0EFF               	movlw	255
  1294   004154  200E               	addwfc	(??_check+1)^0,w,c
  1295   004156  6E08               	movwf	(_input+1)^0,c
  1296   004158                     
  1297                           ;./functions.h: 56:             count = 0xFF;
  1298   004158  0E00               	movlw	0
  1299   00415A  6E06               	movwf	(_count+1)^0,c
  1300   00415C  6805               	setf	_count^0,c
  1301   00415E                     l831:
  1302                           
  1303                           ;./functions.h: 59:         PORTD = seg_code[count];
  1304   00415E  0E00               	movlw	0
  1305   004160  2405               	addwf	_count^0,w,c
  1306   004162  6EF6               	movwf	tblptrl,c
  1307   004164  0E02               	movlw	2
  1308   004166  2006               	addwfc	(_count+1)^0,w,c
  1309   004168  6EF7               	movwf	tblptrh,c
  1310   00416A  6AF8               	clrf	tblptru,c
  1311   00416C  0E00               	movlw	0
  1312   00416E  22F8               	addwfc	tblptru,f,c
  1313   004170  0008               	tblrd		*
  1314   004172  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  1315   004178                     l833:
  1316                           
  1317                           ;./functions.h: 45:     while ( x < 1){
  1318   004178  BE04               	btfsc	(_x+1)^0,7,c
  1319   00417A  EFC7  F020         	goto	u41
  1320   00417E  5004               	movf	(_x+1)^0,w,c
  1321   004180  E108               	bnz	u40
  1322   004182  0403               	decf	_x^0,w,c
  1323   004184  A0D8               	btfss	status,0,c
  1324   004186  EFC7  F020         	goto	u41
  1325   00418A  EFC9  F020         	goto	u40
  1326   00418E                     u41:
  1327   00418E  EF60  F020         	goto	l77
  1328   004192                     u40:
  1329   004192                     
  1330                           ;./functions.h: 63:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1331   004192  0E06               	movlw	6
  1332   004194  6E0E               	movwf	(??_check+1)^0,c
  1333   004196  0E13               	movlw	19
  1334   004198  6E0D               	movwf	??_check^0,c
  1335   00419A  0EAE               	movlw	174
  1336   00419C                     u147:
  1337   00419C  2EE8               	decfsz	wreg,f,c
  1338   00419E  D7FE               	bra	u147
  1339   0041A0  2E0D               	decfsz	??_check^0,f,c
  1340   0041A2  D7FC               	bra	u147
  1341   0041A4  2E0E               	decfsz	(??_check+1)^0,f,c
  1342   0041A6  D7FA               	bra	u147
  1343   0041A8                     
  1344                           ;./functions.h: 64:         count = 0;
  1345   0041A8  0E00               	movlw	0
  1346   0041AA  6E06               	movwf	(_count+1)^0,c
  1347   0041AC  0E00               	movlw	0
  1348   0041AE  6E05               	movwf	_count^0,c
  1349                           
  1350                           ;./functions.h: 65:         while ( y < 1){
  1351   0041B0  EF2D  F021         	goto	l855
  1352   0041B4                     l83:
  1353                           
  1354                           ;./functions.h: 66:         if (PORTBbits.RB2 == 0){
  1355   0041B4  B4CB               	btfsc	203,2,c	;volatile
  1356   0041B6  EFDF  F020         	goto	u51
  1357   0041BA  EFE1  F020         	goto	u50
  1358   0041BE                     u51:
  1359   0041BE  EF04  F021         	goto	l847
  1360   0041C2                     u50:
  1361   0041C2                     
  1362                           ;./functions.h: 67:             count = count + 1;
  1363   0041C2  0E01               	movlw	1
  1364   0041C4  2405               	addwf	_count^0,w,c
  1365   0041C6  6E05               	movwf	_count^0,c
  1366   0041C8  0E00               	movlw	0
  1367   0041CA  2006               	addwfc	(_count+1)^0,w,c
  1368   0041CC  6E06               	movwf	(_count+1)^0,c
  1369   0041CE                     
  1370                           ;./functions.h: 68:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1371   0041CE  0E0B               	movlw	11
  1372   0041D0  6E0E               	movwf	(??_check+1)^0,c
  1373   0041D2  0E26               	movlw	38
  1374   0041D4  6E0D               	movwf	??_check^0,c
  1375   0041D6  0E5E               	movlw	94
  1376   0041D8                     u157:
  1377   0041D8  2EE8               	decfsz	wreg,f,c
  1378   0041DA  D7FE               	bra	u157
  1379   0041DC  2E0D               	decfsz	??_check^0,f,c
  1380   0041DE  D7FC               	bra	u157
  1381   0041E0  2E0E               	decfsz	(??_check+1)^0,f,c
  1382   0041E2  D7FA               	bra	u157
  1383   0041E4                     
  1384                           ;./functions.h: 69:             if (count >= 4) {
  1385   0041E4  BE06               	btfsc	(_count+1)^0,7,c
  1386   0041E6  EFFE  F020         	goto	u61
  1387   0041EA  5006               	movf	(_count+1)^0,w,c
  1388   0041EC  E109               	bnz	u60
  1389   0041EE  0E04               	movlw	4
  1390   0041F0  5C05               	subwf	_count^0,w,c
  1391   0041F2  A0D8               	btfss	status,0,c
  1392   0041F4  EFFE  F020         	goto	u61
  1393   0041F8  EF00  F021         	goto	u60
  1394   0041FC                     u61:
  1395   0041FC  EF04  F021         	goto	l847
  1396   004200                     u60:
  1397   004200                     
  1398                           ;./functions.h: 70:             count = 0;
  1399   004200  0E00               	movlw	0
  1400   004202  6E06               	movwf	(_count+1)^0,c
  1401   004204  0E00               	movlw	0
  1402   004206  6E05               	movwf	_count^0,c
  1403   004208                     l847:
  1404                           
  1405                           ;./functions.h: 73:         if (PORTBbits.RB5== 0) {
  1406   004208  BACB               	btfsc	203,5,c	;volatile
  1407   00420A  EF09  F021         	goto	u71
  1408   00420E  EF0B  F021         	goto	u70
  1409   004212                     u71:
  1410   004212  EF20  F021         	goto	l853
  1411   004216                     u70:
  1412   004216                     
  1413                           ;./functions.h: 74:             y = y + 1;
  1414   004216  0E01               	movlw	1
  1415   004218  2401               	addwf	_y^0,w,c
  1416   00421A  6E01               	movwf	_y^0,c
  1417   00421C  0E00               	movlw	0
  1418   00421E  2002               	addwfc	(_y+1)^0,w,c
  1419   004220  6E02               	movwf	(_y+1)^0,c
  1420                           
  1421                           ;./functions.h: 75:             input = input + (count-1);
  1422   004222  5007               	movf	_input^0,w,c
  1423   004224  2405               	addwf	_count^0,w,c
  1424   004226  6E0D               	movwf	??_check^0,c
  1425   004228  5008               	movf	(_input+1)^0,w,c
  1426   00422A  2006               	addwfc	(_count+1)^0,w,c
  1427   00422C  6E0E               	movwf	(??_check+1)^0,c
  1428   00422E  0EFF               	movlw	255
  1429   004230  240D               	addwf	??_check^0,w,c
  1430   004232  6E07               	movwf	_input^0,c
  1431   004234  0EFF               	movlw	255
  1432   004236  200E               	addwfc	(??_check+1)^0,w,c
  1433   004238  6E08               	movwf	(_input+1)^0,c
  1434   00423A                     
  1435                           ;./functions.h: 76:             count = 0xFF;
  1436   00423A  0E00               	movlw	0
  1437   00423C  6E06               	movwf	(_count+1)^0,c
  1438   00423E  6805               	setf	_count^0,c
  1439   004240                     l853:
  1440                           
  1441                           ;./functions.h: 79:         PORTD = seg_code[count];
  1442   004240  0E00               	movlw	0
  1443   004242  2405               	addwf	_count^0,w,c
  1444   004244  6EF6               	movwf	tblptrl,c
  1445   004246  0E02               	movlw	2
  1446   004248  2006               	addwfc	(_count+1)^0,w,c
  1447   00424A  6EF7               	movwf	tblptrh,c
  1448   00424C  6AF8               	clrf	tblptru,c
  1449   00424E  0E00               	movlw	0
  1450   004250  22F8               	addwfc	tblptru,f,c
  1451   004252  0008               	tblrd		*
  1452   004254  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  1453   00425A                     l855:
  1454                           
  1455                           ;./functions.h: 65:         while ( y < 1){
  1456   00425A  BE02               	btfsc	(_y+1)^0,7,c
  1457   00425C  EF38  F021         	goto	u81
  1458   004260  5002               	movf	(_y+1)^0,w,c
  1459   004262  E108               	bnz	u80
  1460   004264  0401               	decf	_y^0,w,c
  1461   004266  A0D8               	btfss	status,0,c
  1462   004268  EF38  F021         	goto	u81
  1463   00426C  EF3A  F021         	goto	u80
  1464   004270                     u81:
  1465   004270  EFDA  F020         	goto	l83
  1466   004274                     u80:
  1467   004274                     
  1468                           ;./functions.h: 81:     if (input == code) {
  1469   004274  0E15               	movlw	21
  1470   004276  1807               	xorwf	_input^0,w,c
  1471   004278  1008               	iorwf	(_input+1)^0,w,c
  1472   00427A  A4D8               	btfss	status,2,c
  1473   00427C  EF42  F021         	goto	u91
  1474   004280  EF44  F021         	goto	u90
  1475   004284                     u91:
  1476   004284  EF52  F021         	goto	l865
  1477   004288                     u90:
  1478   004288                     
  1479                           ;./functions.h: 82:         PORTBbits.RB3 = 1;
  1480   004288  86CB               	bsf	203,3,c	;volatile
  1481   00428A                     
  1482                           ;./functions.h: 83:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1483   00428A  0E1A               	movlw	26
  1484   00428C  6E0E               	movwf	(??_check+1)^0,c
  1485   00428E  0E5E               	movlw	94
  1486   004290  6E0D               	movwf	??_check^0,c
  1487   004292  0E6E               	movlw	110
  1488   004294                     u167:
  1489   004294  2EE8               	decfsz	wreg,f,c
  1490   004296  D7FE               	bra	u167
  1491   004298  2E0D               	decfsz	??_check^0,f,c
  1492   00429A  D7FC               	bra	u167
  1493   00429C  2E0E               	decfsz	(??_check+1)^0,f,c
  1494   00429E  D7FA               	bra	u167
  1495   0042A0  D000               	nop2	
  1496   0042A2                     
  1497                           ;./functions.h: 84:         PORTBbits.RB3 = 0;
  1498   0042A2  96CB               	bcf	203,3,c	;volatile
  1499   0042A4                     l865:
  1500                           
  1501                           ;./functions.h: 87:     if (input != code) {
  1502   0042A4  0E15               	movlw	21
  1503   0042A6  1807               	xorwf	_input^0,w,c
  1504   0042A8  1008               	iorwf	(_input+1)^0,w,c
  1505   0042AA  B4D8               	btfsc	status,2,c
  1506   0042AC  EF5A  F021         	goto	u101
  1507   0042B0  EF5C  F021         	goto	u100
  1508   0042B4                     u101:
  1509   0042B4  EF69  F021         	goto	l90
  1510   0042B8                     u100:
  1511   0042B8                     
  1512                           ;./functions.h: 88:         PORTBbits.RB4 = 1;
  1513   0042B8  88CB               	bsf	203,4,c	;volatile
  1514   0042BA                     
  1515                           ;./functions.h: 89:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1516   0042BA  0E0B               	movlw	11
  1517   0042BC  6E0E               	movwf	(??_check+1)^0,c
  1518   0042BE  0E26               	movlw	38
  1519   0042C0  6E0D               	movwf	??_check^0,c
  1520   0042C2  0E5E               	movlw	94
  1521   0042C4                     u177:
  1522   0042C4  2EE8               	decfsz	wreg,f,c
  1523   0042C6  D7FE               	bra	u177
  1524   0042C8  2E0D               	decfsz	??_check^0,f,c
  1525   0042CA  D7FC               	bra	u177
  1526   0042CC  2E0E               	decfsz	(??_check+1)^0,f,c
  1527   0042CE  D7FA               	bra	u177
  1528   0042D0                     
  1529                           ;./functions.h: 90:         PORTBbits.RB4 = 0;
  1530   0042D0  98CB               	bcf	203,4,c	;volatile
  1531   0042D2                     l90:
  1532   0042D2  0012               	return		;funcret
  1533   0042D4                     __end_of_check:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _INT0_ISR *****************
  1537 ;; Defined at:
  1538 ;;		line 17 in file "./functions.h"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  i               2    2[COMRAM] int 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;Total ram usage:        4 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		Interrupt level 2
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text3
  1566   0042D4                     __ptext3:
  1567                           	callstack 0
  1568   0042D4                     _INT0_ISR:
  1569                           	callstack 29
  1570   0042D4                     
  1571                           ;./functions.h: 18:     if (PIR1bits.INT0IF == 1) {
  1572   0042D4  0139               	movlb	57	; () banked
  1573   0042D6  A1A1               	btfss	161,0,b	;volatile
  1574   0042D8  EF70  F021         	goto	i2u11_41
  1575   0042DC  EF72  F021         	goto	i2u11_40
  1576   0042E0                     i2u11_41:
  1577   0042E0  EFB3  F021         	goto	i2l70
  1578   0042E4                     i2u11_40:
  1579   0042E4                     
  1580                           ; BSR set to: 57
  1581                           ;./functions.h: 22:         for (int i = 0; i < 2; i++) {
  1582   0042E4  0E00               	movlw	0
  1583   0042E6  6E0C               	movwf	(INT0_ISR@i+1)^0,c
  1584   0042E8  0E00               	movlw	0
  1585   0042EA  6E0B               	movwf	INT0_ISR@i^0,c
  1586   0042EC                     i2l71:
  1587                           
  1588                           ;./functions.h: 23:              PORTAbits.RA1 = 1;
  1589   0042EC  82CA               	bsf	202,1,c	;volatile
  1590   0042EE                     
  1591                           ;./functions.h: 24:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1592   0042EE  0E02               	movlw	2
  1593   0042F0  6E0A               	movwf	(??_INT0_ISR+1)^0,c
  1594   0042F2  0E04               	movlw	4
  1595   0042F4  6E09               	movwf	??_INT0_ISR^0,c
  1596   0042F6  0EBA               	movlw	186
  1597   0042F8                     i2u18_47:
  1598   0042F8  2EE8               	decfsz	wreg,f,c
  1599   0042FA  D7FE               	bra	i2u18_47
  1600   0042FC  2E09               	decfsz	??_INT0_ISR^0,f,c
  1601   0042FE  D7FC               	bra	i2u18_47
  1602   004300  2E0A               	decfsz	(??_INT0_ISR+1)^0,f,c
  1603   004302  D7FA               	bra	i2u18_47
  1604   004304  D000               	nop2	
  1605   004306                     
  1606                           ;./functions.h: 25:             PORTAbits.RA1 = 0;
  1607   004306  92CA               	bcf	202,1,c	;volatile
  1608                           
  1609                           ;./functions.h: 26:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1610   004308  0E03               	movlw	3
  1611   00430A  6E0A               	movwf	(??_INT0_ISR+1)^0,c
  1612   00430C  0E8A               	movlw	138
  1613   00430E  6E09               	movwf	??_INT0_ISR^0,c
  1614   004310  0E56               	movlw	86
  1615   004312                     i2u19_47:
  1616   004312  2EE8               	decfsz	wreg,f,c
  1617   004314  D7FE               	bra	i2u19_47
  1618   004316  2E09               	decfsz	??_INT0_ISR^0,f,c
  1619   004318  D7FC               	bra	i2u19_47
  1620   00431A  2E0A               	decfsz	(??_INT0_ISR+1)^0,f,c
  1621   00431C  D7FA               	bra	i2u19_47
  1622   00431E                     
  1623                           ;./functions.h: 27:             PORTAbits.RA1 = 1;
  1624   00431E  82CA               	bsf	202,1,c	;volatile
  1625                           
  1626                           ;./functions.h: 28:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1627   004320  0E82               	movlw	130
  1628   004322  6E09               	movwf	??_INT0_ISR^0,c
  1629   004324  0EDE               	movlw	222
  1630   004326                     i2u20_47:
  1631   004326  2EE8               	decfsz	wreg,f,c
  1632   004328  D7FE               	bra	i2u20_47
  1633   00432A  2E09               	decfsz	??_INT0_ISR^0,f,c
  1634   00432C  D7FC               	bra	i2u20_47
  1635   00432E                     
  1636                           ;./functions.h: 29:             PORTAbits.RA1 = 0;
  1637   00432E  92CA               	bcf	202,1,c	;volatile
  1638                           
  1639                           ;./functions.h: 30:             _delay((unsigned long)((600)*(4000000/4000.0)));
  1640   004330  0E04               	movlw	4
  1641   004332  6E0A               	movwf	(??_INT0_ISR+1)^0,c
  1642   004334  0E0C               	movlw	12
  1643   004336  6E09               	movwf	??_INT0_ISR^0,c
  1644   004338  0E34               	movlw	52
  1645   00433A                     i2u21_47:
  1646   00433A  2EE8               	decfsz	wreg,f,c
  1647   00433C  D7FE               	bra	i2u21_47
  1648   00433E  2E09               	decfsz	??_INT0_ISR^0,f,c
  1649   004340  D7FC               	bra	i2u21_47
  1650   004342  2E0A               	decfsz	(??_INT0_ISR+1)^0,f,c
  1651   004344  D7FA               	bra	i2u21_47
  1652   004346                     
  1653                           ;./functions.h: 33:         }
  1654   004346  4A0B               	infsnz	INT0_ISR@i^0,f,c
  1655   004348  2A0C               	incf	(INT0_ISR@i+1)^0,f,c
  1656   00434A  BE0C               	btfsc	(INT0_ISR@i+1)^0,7,c
  1657   00434C  EFB1  F021         	goto	i2u12_41
  1658   004350  500C               	movf	(INT0_ISR@i+1)^0,w,c
  1659   004352  E109               	bnz	i2u12_40
  1660   004354  0E02               	movlw	2
  1661   004356  5C0B               	subwf	INT0_ISR@i^0,w,c
  1662   004358  A0D8               	btfss	status,0,c
  1663   00435A  EFB1  F021         	goto	i2u12_41
  1664   00435E  EFB3  F021         	goto	i2u12_40
  1665   004362                     i2u12_41:
  1666   004362  EF76  F021         	goto	i2l71
  1667   004366                     i2u12_40:
  1668   004366                     i2l70:
  1669                           
  1670                           ;./functions.h: 36:     PIR1bits.INT0IF = 0;
  1671   004366  0139               	movlb	57	; () banked
  1672   004368  91A1               	bcf	161,0,b	;volatile
  1673   00436A                     
  1674                           ; BSR set to: 57
  1675   00436A  0011               	retfie		f
  1676   00436C                     __end_of_INT0_ISR:
  1677                           	callstack 0
  1678                           
  1679                           ;
  1680                           ; H/W Interrupt Vector Table @ 0x4008
  1681                           ;
  1682                           
  1683                           	psect	ivt0x4008
  1684   004008                     __pivt0x4008:
  1685                           	callstack 0
  1686   004008                     ivt0x4008_base:
  1687                           	callstack 0
  1688                           
  1689                           ; Vector 0 : SWINT
  1690   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1691                           
  1692                           ; Vector 1 : HLVD
  1693   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1694                           
  1695                           ; Vector 2 : OSF
  1696   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1697                           
  1698                           ; Vector 3 : CSW
  1699   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1700                           
  1701                           ; Vector 4 : NVM
  1702   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1703                           
  1704                           ; Vector 5 : SCAN
  1705   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1706                           
  1707                           ; Vector 6 : CRC
  1708   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1709                           
  1710                           ; Vector 7 : IOC
  1711   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1712                           
  1713                           ; Vector 8 : INT0
  1714   004018  10B5               	dw	_INT0_ISR shr (0+2)
  1715                           
  1716                           ; Vector 9 : ZCD
  1717   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1718                           
  1719                           ; Vector 10 : AD
  1720   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1721                           
  1722                           ; Vector 11 : ADT
  1723   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1724                           
  1725                           ; Vector 12 : CMP1
  1726   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1727                           
  1728                           ; Vector 13 : SMT1
  1729   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1730                           
  1731                           ; Vector 14 : SMT1PRA
  1732   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1733                           
  1734                           ; Vector 15 : SMT1PRW
  1735   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1736                           
  1737                           ; Vector 16 : DMA1SCNT
  1738   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1739                           
  1740                           ; Vector 17 : DMA1DCNT
  1741   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1742                           
  1743                           ; Vector 18 : DMA1OR
  1744   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1745                           
  1746                           ; Vector 19 : DMA1A
  1747   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1748                           
  1749                           ; Vector 20 : SPI1RX
  1750   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1751                           
  1752                           ; Vector 21 : SPI1TX
  1753   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1754                           
  1755                           ; Vector 22 : SPI1
  1756   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1757                           
  1758                           ; Vector 23 : I2C1RX
  1759   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1760                           
  1761                           ; Vector 24 : I2C1TX
  1762   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1763                           
  1764                           ; Vector 25 : I2C1
  1765   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1766                           
  1767                           ; Vector 26 : I2C1E
  1768   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1769                           
  1770                           ; Vector 27 : U1RX
  1771   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1772                           
  1773                           ; Vector 28 : U1TX
  1774   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1775                           
  1776                           ; Vector 29 : U1E
  1777   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1778                           
  1779                           ; Vector 30 : U1
  1780   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1781                           
  1782                           ; Vector 31 : TMR0
  1783   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1784                           
  1785                           ; Vector 32 : TMR1
  1786   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1787                           
  1788                           ; Vector 33 : TMR1G
  1789   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1790                           
  1791                           ; Vector 34 : TMR2
  1792   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1793                           
  1794                           ; Vector 35 : CCP1
  1795   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1796                           
  1797                           ; Vector 36 : Undefined
  1798   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1799                           
  1800                           ; Vector 37 : NCO1
  1801   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1802                           
  1803                           ; Vector 38 : CWG1
  1804   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1805                           
  1806                           ; Vector 39 : CLC1
  1807   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1808                           
  1809                           ; Vector 40 : INT1
  1810   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1811                           
  1812                           ; Vector 41 : CMP2
  1813   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1814                           
  1815                           ; Vector 42 : DMA2SCNT
  1816   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1817                           
  1818                           ; Vector 43 : DMA2DCNT
  1819   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1820                           
  1821                           ; Vector 44 : DMA2OR
  1822   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1823                           
  1824                           ; Vector 45 : DMA2A
  1825   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1826                           
  1827                           ; Vector 46 : I2C2RX
  1828   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1829                           
  1830                           ; Vector 47 : I2C2TX
  1831   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1832                           
  1833                           ; Vector 48 : I2C2
  1834   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1835                           
  1836                           ; Vector 49 : I2C2E
  1837   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1838                           
  1839                           ; Vector 50 : U2RX
  1840   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1841                           
  1842                           ; Vector 51 : U2TX
  1843   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1844                           
  1845                           ; Vector 52 : U2E
  1846   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1847                           
  1848                           ; Vector 53 : U2
  1849   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1850                           
  1851                           ; Vector 54 : TMR3
  1852   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1853                           
  1854                           ; Vector 55 : TMR3G
  1855   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1856                           
  1857                           ; Vector 56 : TMR4
  1858   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1859                           
  1860                           ; Vector 57 : CCP2
  1861   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1862                           
  1863                           ; Vector 58 : Undefined
  1864   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1865                           
  1866                           ; Vector 59 : CWG2
  1867   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1868                           
  1869                           ; Vector 60 : CLC2
  1870   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1871                           
  1872                           ; Vector 61 : INT2
  1873   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1874                           
  1875                           ; Vector 62 : Undefined
  1876   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1877                           
  1878                           ; Vector 63 : Undefined
  1879   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1880                           
  1881                           ; Vector 64 : Undefined
  1882   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1883                           
  1884                           ; Vector 65 : Undefined
  1885   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1886                           
  1887                           ; Vector 66 : Undefined
  1888   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1889                           
  1890                           ; Vector 67 : Undefined
  1891   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1892                           
  1893                           ; Vector 68 : Undefined
  1894   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1895                           
  1896                           ; Vector 69 : Undefined
  1897   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1898                           
  1899                           ; Vector 70 : TMR5
  1900   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1901                           
  1902                           ; Vector 71 : TMR5G
  1903   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1904                           
  1905                           ; Vector 72 : TMR6
  1906   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1907                           
  1908                           ; Vector 73 : CCP3
  1909   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1910                           
  1911                           ; Vector 74 : CWG3
  1912   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1913                           
  1914                           ; Vector 75 : CLC3
  1915   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1916                           
  1917                           ; Vector 76 : Undefined
  1918   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1919                           
  1920                           ; Vector 77 : Undefined
  1921   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1922                           
  1923                           ; Vector 78 : Undefined
  1924   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1925                           
  1926                           ; Vector 79 : Undefined
  1927   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1928                           
  1929                           ; Vector 80 : CCP4
  1930   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1931                           
  1932                           ; Vector 81 : CLC4
  1933   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1934   0040AC                     ivt0x4008_undefint:
  1935                           	callstack 0
  1936   0040AC  00FF               	reset	
  1937                           
  1938                           	psect	smallconst
  1939   002000                     __psmallconst:
  1940                           	callstack 0
  1941   002000  00                 	db	0
  1942   002001  00                 	db	0	; dummy byte at the end
  1943   002000                     __smallconst    set	__psmallconst
  1944   002000                     __mediumconst   set	__psmallconst
  1945   000002                     __activetblptr  equ	2
  1946                           
  1947                           	psect	rparam
  1948   000001                     ___rparam_used  equ	1
  1949   000000                     ___param_bank   equ	0
  1950   000000                     __Lparam        equ	__Lrparam
  1951   000000                     __Hparam        equ	__Hrparam
  1952                           
  1953                           	psect	config
  1954                           
  1955                           ;Config register CONFIG1L @ 0x300000
  1956                           ;	External Oscillator Selection
  1957                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1958                           ;	Reset Oscillator Selection
  1959                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1960   300000                     	org	3145728
  1961   300000  F8                 	db	248
  1962                           
  1963                           ;Config register CONFIG1H @ 0x300001
  1964                           ;	Clock out Enable bit
  1965                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1966                           ;	PRLOCKED One-Way Set Enable bit
  1967                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1968                           ;	Clock Switch Enable bit
  1969                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1970                           ;	Fail-Safe Clock Monitor Enable bit
  1971                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1972   300001                     	org	3145729
  1973   300001  FF                 	db	255
  1974                           
  1975                           ;Config register CONFIG2L @ 0x300002
  1976                           ;	MCLR Enable bit
  1977                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1978                           ;	Power-up timer selection bits
  1979                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1980                           ;	Multi-vector enable bit
  1981                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1982                           ;	IVTLOCK bit One-way set enable bit
  1983                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1984                           ;	Low Power BOR Enable bit
  1985                           ;	LPBOREN = OFF, ULPBOR disabled
  1986                           ;	Brown-out Reset Enable bits
  1987                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1988   300002                     	org	3145730
  1989   300002  FF                 	db	255
  1990                           
  1991                           ;Config register CONFIG2H @ 0x300003
  1992                           ;	Brown-out Reset Voltage Selection bits
  1993                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1994                           ;	ZCD Disable bit
  1995                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1996                           ;	PPSLOCK bit One-Way Set Enable bit
  1997                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1998                           ;	Stack Full/Underflow Reset Enable bit
  1999                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2000                           ;	Debugger Enable bit
  2001                           ;	DEBUG = OFF, Background debugger disabled
  2002                           ;	Extended Instruction Set Enable bit
  2003                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2004   300003                     	org	3145731
  2005   300003  FF                 	db	255
  2006                           
  2007                           ;Config register CONFIG3L @ 0x300004
  2008                           ;	WDT Period selection bits
  2009                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2010                           ;	WDT operating mode
  2011                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2012   300004                     	org	3145732
  2013   300004  9F                 	db	159
  2014                           
  2015                           ;Config register CONFIG3H @ 0x300005
  2016                           ;	WDT Window Select bits
  2017                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2018                           ;	WDT input clock selector
  2019                           ;	WDTCCS = SC, Software Control
  2020   300005                     	org	3145733
  2021   300005  FF                 	db	255
  2022                           
  2023                           ;Config register CONFIG4L @ 0x300006
  2024                           ;	Boot Block Size selection bits
  2025                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2026                           ;	Boot Block enable bit
  2027                           ;	BBEN = OFF, Boot block disabled
  2028                           ;	Storage Area Flash enable bit
  2029                           ;	SAFEN = OFF, SAF disabled
  2030                           ;	Application Block write protection bit
  2031                           ;	WRTAPP = OFF, Application Block not write protected
  2032   300006                     	org	3145734
  2033   300006  FF                 	db	255
  2034                           
  2035                           ;Config register CONFIG4H @ 0x300007
  2036                           ;	Boot Block Write Protection bit
  2037                           ;	WRTB = OFF, Boot Block not write-protected
  2038                           ;	Configuration Register Write Protection bit
  2039                           ;	WRTC = OFF, Configuration registers not write-protected
  2040                           ;	Data EEPROM Write Protection bit
  2041                           ;	WRTD = OFF, Data EEPROM not write-protected
  2042                           ;	SAF Write protection bit
  2043                           ;	WRTSAF = OFF, SAF not Write Protected
  2044                           ;	Low Voltage Programming Enable bit
  2045                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2046   300007                     	org	3145735
  2047   300007  FF                 	db	255
  2048                           
  2049                           ;Config register CONFIG5L @ 0x300008
  2050                           ;	PFM and Data EEPROM Code Protection bit
  2051                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2052   300008                     	org	3145736
  2053   300008  FF                 	db	255
  2054                           
  2055                           ;Config register CONFIG5H @ 0x300009
  2056                           ;	unspecified, using default values
  2057   300009                     	org	3145737
  2058   300009  FF                 	db	255
  2059                           tosu	equ	0x3FFF
  2060                           tosh	equ	0x3FFE
  2061                           tosl	equ	0x3FFD
  2062                           stkptr	equ	0x3FFC
  2063                           pclatu	equ	0x3FFB
  2064                           pclath	equ	0x3FFA
  2065                           pcl	equ	0x3FF9
  2066                           tblptru	equ	0x3FF8
  2067                           tblptrh	equ	0x3FF7
  2068                           tblptrl	equ	0x3FF6
  2069                           tablat	equ	0x3FF5
  2070                           prodh	equ	0x3FF4
  2071                           prodl	equ	0x3FF3
  2072                           indf0	equ	0x3FEF
  2073                           postinc0	equ	0x3FEE
  2074                           postdec0	equ	0x3FED
  2075                           preinc0	equ	0x3FEC
  2076                           plusw0	equ	0x3FEB
  2077                           fsr0h	equ	0x3FEA
  2078                           fsr0l	equ	0x3FE9
  2079                           wreg	equ	0x3FE8
  2080                           indf1	equ	0x3FE7
  2081                           postinc1	equ	0x3FE6
  2082                           postdec1	equ	0x3FE5
  2083                           preinc1	equ	0x3FE4
  2084                           plusw1	equ	0x3FE3
  2085                           fsr1h	equ	0x3FE2
  2086                           fsr1l	equ	0x3FE1
  2087                           bsr	equ	0x3FE0
  2088                           indf2	equ	0x3FDF
  2089                           postinc2	equ	0x3FDE
  2090                           postdec2	equ	0x3FDD
  2091                           preinc2	equ	0x3FDC
  2092                           plusw2	equ	0x3FDB
  2093                           fsr2h	equ	0x3FDA
  2094                           fsr2l	equ	0x3FD9
  2095                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_check

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _check
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check                                                2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT0_ISR                                             4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check
   _initialize

 _INT0_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1573      0       0      0.0%
BITBIGSFRllll      385      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      6      16     16.8%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlllh       31      0       0      0.0%
BITBIGSFRllh         3      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      16      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 16 00:35:38 2025

                      _x 0003                        _y 0001                       l53 43AA  
                     l90 42D2                       l83 41B4                       l77 40C0  
                     l95 43F2                       u10 40CE                       u11 40CA  
                     u20 410C                       u21 4108                       u30 4122  
                     u31 411E                       u40 4192                       u41 418E  
                     u50 41C2                       u51 41BE                       u60 4200  
                     u61 41FC                       u70 4216                       u71 4212  
                     u80 4274                       u81 4270                       u90 4288  
                     u91 4284                      l801 4394                      l811 40B2  
                    l803 4396                      l821 410C                      l813 40B4  
                    l805 4398                      l831 415E                      l815 40CE  
                    l823 4114                      l807 439A                      l841 41CE  
                    l825 4122                      l817 40DA                      l833 4178  
                    l851 423A                      l843 41E4                      l835 4192  
                    l827 412E                      l819 40F0                      l771 436C  
                    l861 428A                      l853 4240                      l845 4200  
                    l837 41A8                      l829 4158                      l781 437E  
                    l773 4374                      l871 42D0                      l863 42A2  
                    l839 41C2                      l847 4208                      l855 425A  
                    l791 4388                      l783 4380                      l775 4378  
                    l865 42A4                      l857 4274                      l849 4216  
                    l793 438A                      l785 4382                      l777 437A  
                    l867 42B8                      l859 4288                      l795 438C  
                    l787 4384                      l779 437C                      l891 43EA  
                    l869 42BA                      l797 438E                      l789 4386  
                    l893 43EE                      l799 4390                      u100 42B8  
                    u101 42B4                      u137 40E4                      u147 419C  
                    u157 41D8                      u167 4294                      u177 42C4  
                    wreg 3FE8                     _LATA 3FBA                     _LATB 3FBB  
                   _LATD 3FBD                     i2l70 4366                     i2l71 42EC  
                   i2l73 436A                     _WPUB 3A51                     _code 000F  
                   _main 43EA                     prodh 3FF4                     prodl 3FF3  
                   start 40AE             ___param_bank 0000         __end_of_INT0_ISR 436C  
                  ?_main 0009                    i2l881 42EE                    i2l873 42D4  
                  i2l883 4306                    i2l875 42E4                    i2l885 431E  
                  i2l887 432E                    i2l889 4346                    _PORTA 3FCA  
                  _PORTB 3FCB                    _PORTD 3FCD                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISD 3FC5                    _check 40B2  
                  _count 0005                    _input 0007                    tablat 3FF5  
                  status 3FD8          __initialization 43AC             __end_of_main 43F6  
                 ??_main 000F            __activetblptr 0002                   ?_check 0009  
                 _ANSELA 3A40                   _ANSELB 3A50                   _ANSELD 3A70  
       __p_seg_code_text 0200                   clear_0 43CE                   isa$std 0001  
       __end_of_seg_code 0204             __pdataCOMRAM 000F             __mediumconst 2000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
             __accesstop 0060  __end_of__initialization 43E0                ?_INT0_ISR 0009  
          ___rparam_used 0001                INT0_ISR@i 000B           __pcstackCOMRAM 0009  
          __end_of_check 42D4                  ??_check 000D               ??_INT0_ISR 0009  
                IVTBASEH 3FD6                  IVTBASEL 3FD5                  IVTBASEU 3FD7  
                i2u11_40 42E4                  i2u11_41 42E0                  i2u12_40 4366  
                i2u12_41 4362                  i2u20_47 4326                  i2u21_47 433A  
                i2u18_47 42F8                  i2u19_47 4312                  __Hparam 0000  
                __Lparam 0000             __psmallconst 2000                  __pcinit 43AC  
                __ramtop 2000               _initialize 436C            ivt0x4008_base 4008  
                __ptext0 43EA                  __ptext1 436C                  __ptext2 40B2  
                __ptext3 42D4     end_of_initialization 43E0            __Lmediumconst 0000  
                postinc0 3FEE                _PORTAbits 3FCA                _PORTBbits 3FCB  
          __pidataCOMRAM 43F6              ?_initialize 0009      start_initialization 43AC  
            __pbssCOMRAM 0001              __pivt0x4008 4008              __smallconst 2000  
               _INT0_ISR 42D4                 _IPR1bits 3981                 _PIE1bits 3991  
               _IVTBASEH 3FD6                 _IVTBASEL 3FD5                 _IVTBASEU 3FD7  
               _PIR1bits 39A1                 _PIR5bits 39A5        ivt0x4008_undefint 40AC  
            _INTCON0bits 3FD2                 __Hrparam 0000                 __Lrparam 0000  
           ??_initialize 000D       __end_of_initialize 43AC                 _seg_code 0200  
       _seg_code_absaddr 0200                 isa$xinst 0000                 intlevel2 0000  
